(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    372934,       7495]
NotebookOptionsPosition[    358485,       7249]
NotebookOutlinePosition[    358949,       7267]
CellTagsIndexPosition[    358906,       7264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Quantum", " ", "Anharmonic", " ", "Oscillator"}], 
  "Title"]], "Input",
 CellChangeTimes->{{3.649158221303357*^9, 3.6491582347993574`*^9}, 
   3.6493476296186237`*^9, {3.743342869807601*^9, 3.743342876056596*^9}, {
   3.7741937133576436`*^9, 3.774193722598254*^9}, {3.774194581102804*^9, 
   3.7741945926898575`*^9}},ExpressionUUID->"f0fcde3b-8eb7-494f-94e9-\
1d1e2e1b4bd9"],

Cell["\<\
Note: you will only need to modify the cells that are light blue. Other cells \
are used to test your code or demonstrate a couple strategies along the way. 
Note: the guide below is only one possible solution. You are totally welcome \
to solve the problem in other ways too!\
\>", "Text",
 CellChangeTimes->{{3.7742685226477036`*^9, 3.774268564235116*^9}, {
  3.77435550050054*^9, 
  3.774355511858553*^9}},ExpressionUUID->"1368cbd2-d37c-448f-b9c0-\
4a76471d4c82"],

Cell[CellGroupData[{

Cell["Introduction to the problem", "Section",
 CellChangeTimes->{{3.7433533877404175`*^9, 
  3.7433534044576607`*^9}},ExpressionUUID->"5c2fae93-07e2-4463-bb5b-\
5f495628cd7f"],

Cell[TextData[{
 "In this tutorial, we will numerically find the first few energy levels and \
the corresponding wavefunctions for an anharmonic oscillator. \nFor \
convenience, we will set some constants to 1 and consider the Hamiltonian of \
the harmonic oscillator to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["\[DoubleStruckCapitalP]", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["\[DoubleStruckCapitalX]", "2"]}]}]}], ",", " ", 
    "where", " "}], TraditionalForm]],ExpressionUUID->
  "f5218a54-dc7f-4016-a399-f0c055438e3b"],
 "\[DoubleStruckCapitalP] and \[DoubleStruckCapitalX] are the well known \
momentum and position operators. In terms of the annihilation and creation \
operators, they are \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalP]", "=", 
    RowBox[{"I", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", 
        RowBox[{"\[Dagger]", " "}]], "-", "a"}], 
      SqrtBox["2"]]}]}], TraditionalForm]],ExpressionUUID->
  "0910bdb1-dff3-469d-8c10-3f889f684a2c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalX]", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"\[Dagger]", " "}]], "+", "a"}], 
     SqrtBox["2"]]}], TraditionalForm]],ExpressionUUID->
  "abbf021c-8cf5-48b6-a9fd-169286154e28"],
 " \nThe anharmonic oscillator we are going to solve has the following \
Hamiltonian:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[DoubleStruckCapitalP]", "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[DoubleStruckCapitalX]", "4"]}]}]}], TraditionalForm]],
  ExpressionUUID->"cbe1962a-b63a-48f2-b492-db963f18ab73"],
 " \n We are going to use the Rayleigh-Ritz Method: We are going to write the \
Hamiltonian as a truncated sparse matrix in the basis of the harmonic \
oscillator \n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{" ", 
     RowBox[{
      SuperscriptBox["a", "\[Dagger]"], "|", "n"}], "\[RightAngleBracket]"}], 
    "=", 
    SqrtBox[
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "49cadd7b-14ae-4508-a47f-8f1efe4ad85b"],
 "|n+1\[RightAngleBracket]\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{" ", 
     RowBox[{
      SuperscriptBox["a", " "], "|", "n"}], "\[RightAngleBracket]"}], "=", 
    SqrtBox["n"]}], TraditionalForm]],ExpressionUUID->
  "3137475a-f2d9-459b-b326-ead762ccbd98"],
 "|n-1\[RightAngleBracket]\n  and diagonalize it.  \n The wavefunctions of \
the harmonic oscillator is given by \n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "n"], "(", "x", ")"}], "="}], TraditionalForm]],
  ExpressionUUID->"b50a3021-a3a0-499e-87b8-1e53cff7d391"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["e", 
      FractionBox[
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "2"]], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["2", "n"], 
       RowBox[{"n", "!"}], 
       SqrtBox["\[Pi]"]}]]], 
    RowBox[{
     SubscriptBox["H", "n"], "(", "x", ")"}]}], TraditionalForm]],
  ExpressionUUID->"e26a87f4-5467-49df-a6a3-78c7198c5d95"],
 "\n where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["H", "n"], "(", "x", ")"}], " ", "are", " ", "the", " ", 
    "Hermite", " ", 
    RowBox[{"functions", ".", " "}]}], TraditionalForm]],ExpressionUUID->
  "3b7ea6f9-d270-4b4b-b8b0-b6edcb26c97b"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.649158855744357*^9, 3.6491588755103574`*^9}, {
   3.6491590772053576`*^9, 3.6491591609923573`*^9}, {3.7433429294589405`*^9, 
   3.743342957117074*^9}, {3.7433430075486712`*^9, 3.7433430322230225`*^9}, {
   3.7433431797561607`*^9, 3.7433432235197797`*^9}, {3.7433432556549745`*^9, 
   3.743343359716874*^9}, {3.743343550149111*^9, 3.74334356165598*^9}, {
   3.7433438388394327`*^9, 3.7433438879186115`*^9}, {3.7433440287607613`*^9, 
   3.743344102498032*^9}, {3.7433446896907797`*^9, 3.743344859044382*^9}, {
   3.7433449096186113`*^9, 3.7433449473655663`*^9}, {3.743345026882635*^9, 
   3.743345215844609*^9}, {3.743345444862734*^9, 3.7433456067086053`*^9}, {
   3.7433503857673073`*^9, 3.7433503905804543`*^9}, {3.743350430859521*^9, 
   3.7433505246208625`*^9}, {3.7438554797412806`*^9, 
   3.7438554999038486`*^9}, {3.743868728873828*^9, 3.7438687433539796`*^9}, {
   3.743869109755935*^9, 3.743869132541628*^9}, {3.743870317537744*^9, 
   3.743870319042378*^9}, 
   3.7742688732231436`*^9},ExpressionUUID->"058e7e0c-b727-48b0-b508-\
8bbe60e89aa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Chapter One 
Teaching Mathematica quantum mechanics: ladder operators\
\>", "Chapter",
 CellChangeTimes->{{3.774194624667287*^9, 3.7741946742450633`*^9}, {
  3.7741947944140596`*^9, 
  3.7741948254714117`*^9}},ExpressionUUID->"bee69d04-03f7-4196-84a2-\
10dc88c57b9b"],

Cell[CellGroupData[{

Cell["\<\
Teach Mathematica about Ladder Operators using several replacements rules\
\>", "Section",
 CellChangeTimes->{{3.6491588210423574`*^9, 3.6491588313163576`*^9}, {
  3.6491593573493576`*^9, 3.649159360381357*^9}, {3.743349824215988*^9, 
  3.7433498351125336`*^9}, {3.744466915209921*^9, 
  3.7444669235705056`*^9}},ExpressionUUID->"779a3ea3-732c-4717-9757-\
f5d9cf83e575"],

Cell[CellGroupData[{

Cell["\<\
Understanding patterns in Mathematica: one underscore, two underscores, and \
three underscores.\
\>", "Subsection",
 CellChangeTimes->{{3.7444591107661076`*^9, 3.7444591209294243`*^9}, {
  3.744459393993814*^9, 3.7444594001700726`*^9}, {3.7444605044355626`*^9, 
  3.744460519867295*^9}},ExpressionUUID->"6202d24d-6e1e-4d22-874b-\
1627339da5ad"],

Cell["\<\
As we all know, one underscore will match one object of the specified \
pattern, understand the following code and its output.\
\>", "Text",
 CellChangeTimes->{{3.7444591302276883`*^9, 3.7444591608214383`*^9}, {
  3.744459208745186*^9, 
  3.7444592192326546`*^9}},ExpressionUUID->"69fe17f9-08c7-4129-bb73-\
c745d68d6078"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "]"}], "+", 
   RowBox[{"f", "[", "a", "]"}], "+", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "+", 
   RowBox[{"f", "[", "c", "]"}], "+", 
   RowBox[{"g", "[", "a", "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "a_", "]"}], "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.744459163867256*^9, 3.74445919983035*^9}, {
  3.744459354706134*^9, 3.744459356543806*^9}, {3.7747838504324408`*^9, 
  3.7747838667617626`*^9}, {3.774783912542321*^9, 3.7747839127697067`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"d681b855-06f2-4c1b-8bc0-868c9e39efcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "]"}], "+", 
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "+", 
  RowBox[{"g", "[", "a", "]"}]}]], "Output",
 CellChangeTimes->{{3.744459186375755*^9, 3.744459200046445*^9}, 
   3.744459356960411*^9, 3.7747838793690677`*^9, 3.7747839141360617`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"0e99a508-1c58-4831-937c-5d88d3349a93"]
}, Open  ]],

Cell["\<\
Two underscores will match one or more objects, understand the following code \
and its output. \
\>", "Text",
 CellChangeTimes->{{3.74445923526391*^9, 
  3.744459278986986*^9}},ExpressionUUID->"328672e7-50ea-4584-89d7-\
a1ecef2b4b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "]"}], "+", 
   RowBox[{"f", "[", "a", "]"}], "+", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "+", 
   RowBox[{"f", "[", "c", "]"}], "+", 
   RowBox[{"g", "[", "a", "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "a__", "]"}], "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7444592873429546`*^9, {3.7444593600489845`*^9, 3.744459361722147*^9}, {
   3.774783887940116*^9, 3.7747839165924854`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"4f5332c4-2c2e-4f21-adc5-70d8396e677d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "]"}], "+", 
  RowBox[{"g", "[", "a", "]"}]}]], "Output",
 CellChangeTimes->{
  3.7444592880745244`*^9, 3.7444593622701073`*^9, {3.7747838890800934`*^9, 
   3.774783917129116*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"be2a24f8-91c0-45f1-93ea-e7f5f4650766"]
}, Open  ]],

Cell["\<\
Today we are going to use the pattern with three underscores, which will \
match any number of objects including zero, understand the following code and \
its output.\
\>", "Text",
 CellChangeTimes->{{3.7444592917956095`*^9, 
  3.744459351262355*^9}},ExpressionUUID->"263dc687-29ed-476c-a3b0-\
9aabb6b693d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "]"}], "+", 
   RowBox[{"f", "[", "a", "]"}], "+", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "+", 
   RowBox[{"f", "[", "c", "]"}], "+", 
   RowBox[{"g", "[", "a", "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "a___", "]"}], "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.744459371876356*^9, {3.7747838998622684`*^9, 3.7747839209268956`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"b4c19b16-c7bd-446d-a07f-9b9a101624be"],

Cell[BoxData[
 RowBox[{"g", "[", "a", "]"}]], "Output",
 CellChangeTimes->{
  3.7444593723125305`*^9, {3.774783901016142*^9, 3.774783921281972*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"4764b00c-c715-4843-b147-43c8591cdeb3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How to multiply operators", "Subsection",
 CellChangeTimes->{{3.743351977573295*^9, 
  3.7433519891729035`*^9}},ExpressionUUID->"df7ea163-3875-4f09-bff5-\
5fab68a44481"],

Cell["\<\
The ladder operators are non - commutative. In this exercise we will use the \
centerdot \[CenterDot] (input by using \[EscapeKey] . \[EscapeKey]) to \
represent operator multiplication. Note centerdot is a pure symbol, \
mathematica internally does not give it any properties.\
\>", "Text",
 CellChangeTimes->{{3.7444606086245966`*^9, 3.7444606133037376`*^9}, {
  3.774195581733679*^9, 3.77419560471133*^9}, {3.7747838285719147`*^9, 
  3.774783831319598*^9}},ExpressionUUID->"97573b31-b480-4a67-8e8a-\
10de20d796e7"],

Cell[CellGroupData[{

Cell["Why do we need to do this", "Subsubsection",
 CellChangeTimes->{{3.7433518753921113`*^9, 
  3.7433518925312214`*^9}},ExpressionUUID->"21c2a337-caa6-4de7-b2e6-\
1b139b010cea"],

Cell["\<\
As centerdot is just a display,  Mathematica is not able to evaluate the \
expression as it is.\
\>", "Text",
 CellChangeTimes->{{3.743351077235093*^9, 3.7433511095657997`*^9}, {
  3.743351463440001*^9, 
  3.7433514667154627`*^9}},ExpressionUUID->"e0413200-ac15-4d75-953f-\
a77040591215"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "a"}], " ", "+", 
     SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", " ", 
   RowBox[{"(", 
    RowBox[{"a", "-", 
     RowBox[{"I", " ", 
      SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7433510234445024`*^9, 3.7433510279081907`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a8a8ead1-2053-4d5d-8067-27849daa2f0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "a"}], "+", 
    SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", 
  RowBox[{"(", 
   RowBox[{"a", "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.743351028255675*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c82bd969-c6d0-4475-b90a-1ac95ee0e7d2"]
}, {1, 2}]],

Cell["\<\
If using normal multiplication, Mathematica is not able to realize the \
operators do not commute.\
\>", "Text",
 CellChangeTimes->{{3.7433511197146845`*^9, 
  3.7433511697068987`*^9}},ExpressionUUID->"a2592f48-b45e-4a1d-baa3-\
be498a291aae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "a"}], " ", "+", 
     SuperscriptBox["a", "\[Dagger]"]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"a", "-", 
     RowBox[{"I", " ", 
      SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.743351035874222*^9, 3.7433510362278967`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"71d2e4ad-633b-404f-ae21-889517d7b223"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "a", " ", 
   SuperscriptBox["a", "\[Dagger]"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["a", "\[Dagger]"], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.7433510384942226`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"31595089-eb82-46c0-af3a-9523a632a719"]
}, {1, 2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The rules", "Subsubsection",
 CellChangeTimes->{{3.744460724577098*^9, 
  3.7444607287801666`*^9}},ExpressionUUID->"5e42e2ab-04cc-4f08-b09b-\
97812045a102"],

Cell["\<\
  This part of the code will teach Mathematica how to evaluate an operator \
expression according to the distribution rule of operator multiplication \
while maintaining the order of the operators. (Interested readers could also \
realize the commutator relationship to make it normal ordered, but we would \
not need it.)\
\>", "Text",
 CellChangeTimes->{{3.743349920698885*^9, 3.7433500484530125`*^9}, {
   3.7433501973618784`*^9, 3.743350360072915*^9}, {3.743350550900586*^9, 
   3.743350591745863*^9}, {3.743350739647649*^9, 3.7433507557308407`*^9}, {
   3.743350881532439*^9, 3.7433508905997095`*^9}, {3.7433512578922205`*^9, 
   3.743351275109446*^9}, {3.743351947367858*^9, 3.743351955341614*^9}, 
   3.743351994469697*^9, {3.7438660504862957`*^9, 3.7438660938083377`*^9}, {
   3.7444605795747538`*^9, 3.74446060713846*^9}, {3.7444607687043376`*^9, 
   3.744460778594471*^9}},ExpressionUUID->"0aa4b4de-ed07-4ed2-a5b1-\
de7dc445aac7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building your rules step by step", "Subsubsection",
 CellChangeTimes->{{3.7742607497667327`*^9, 
  3.774260769664941*^9}},ExpressionUUID->"ea77c63b-9f2b-48ce-9759-\
cd0d5daf55ba"],

Cell["\<\
First we will build the distribution rule which includes the left \
distribution rule and the right distribution rule. In the following, x y and \
z are arbitrary expressions that are made of numbers and operators. In our \
current problem, we don\[CloseCurlyQuote]t have to worry about distributing \
to more than two expressions(but our rules can handle it automatically).
x\[CenterDot](y+z)=x\[CenterDot]y+x\[CenterDot]z
(x+y)\[CenterDot]z=x\[CenterDot]z+y\[CenterDot]z
but we can combine both rules to get
x\[CenterDot](y+z)\[CenterDot]w=x\[CenterDot]y\[CenterDot]w+x\[CenterDot]z\
\[CenterDot]w
Note that either x or w could be zero argument, one argument or more than one \
arguments.\
\>", "Text",
 CellChangeTimes->{{3.7742621398808413`*^9, 3.77426214960386*^9}, {
  3.7742621972674074`*^9, 3.7742622466284685`*^9}, {3.7742622892872763`*^9, 
  3.774262469647862*^9}, {3.7742636011329665`*^9, 3.774263639350787*^9}, {
  3.7742639091344943`*^9, 3.7742639512216406`*^9}, {3.7742640969311085`*^9, 
  3.77426410994527*^9}, {3.7747836204719486`*^9, 
  3.7747836381207466`*^9}},ExpressionUUID->"0c32a5cf-4f3d-4750-bdb5-\
7db7ab896b09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "implement", " ", "your", " ", "distribution", " ", "rule", " ", "here", 
    " ", "and", " ", "use", " ", "the", " ", "following", " ", "cells", " ", 
    "to", " ", "test", " ", "your", " ", "rule"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"distributerule", "=", 
    RowBox[{
     RowBox[{"x___", "\[CenterDot]", 
      RowBox[{"(", 
       RowBox[{"y_", "+", "z_"}], ")"}], "\[CenterDot]", "w___"}], "\[Rule]", 
     " ", 
     RowBox[{
      RowBox[{"x", "\[CenterDot]", "y", "\[CenterDot]", "w"}], "+", 
      RowBox[{"x", "\[CenterDot]", "z", "\[CenterDot]", "w"}]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7742626153664865`*^9, 3.77426273064515*^9}, {
   3.7742629913932514`*^9, 3.7742630312686157`*^9}, 3.7742630632181997`*^9, {
   3.774263104302352*^9, 3.7742631094485965`*^9}, {3.7742631685745173`*^9, 
   3.7742631924217997`*^9}, {3.7742632834633417`*^9, 
   3.7742633629574413`*^9}, {3.774263655863677*^9, 3.7742637037835217`*^9}, {
   3.7742639832450523`*^9, 3.7742640268035583`*^9}, {3.774264131883644*^9, 
   3.7742641394264784`*^9}, {3.7742648779906464`*^9, 3.774264908092267*^9}, 
   3.7742674481460643`*^9, {3.774783499767375*^9, 3.7747835266723905`*^9}, 
   3.774784134700191*^9, {3.7747844161278563`*^9, 3.7747844520158987`*^9}, {
   3.774787198779331*^9, 3.77478719919326*^9}, {3.774794786222969*^9, 
   3.774794890761139*^9}, {3.7747950161355443`*^9, 3.774795067322855*^9}, {
   3.7747951722832255`*^9, 3.77479519878948*^9}, {3.7747955727597895`*^9, 
   3.774795574484005*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[1]:=",ExpressionUUID->"c0ac07d4-5213-40a7-bba0-4ed31da20ac6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x___", "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"y_", "+", "z_"}], ")"}], "\[CenterDot]", "w___"}], "\[Rule]", 
  RowBox[{
   RowBox[{"x", "\[CenterDot]", "y", "\[CenterDot]", "w"}], "+", 
   RowBox[{"x", "\[CenterDot]", "z", "\[CenterDot]", "w"}]}]}]], "Output",
 CellChangeTimes->{
  3.7747948965988817`*^9, {3.7747950233397665`*^9, 3.7747950347669406`*^9}, 
   3.77479506800776*^9, {3.774795178521901*^9, 3.7747951992374535`*^9}, 
   3.7747955750985117`*^9, 3.77479652581959*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c3854169-3c93-4418-a81e-ae2bdd2ff78e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "a"}], "+", 
      SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I", " ", "a"}], "-", 
      SuperscriptBox["a", "\[Dagger]"]}], ")"}]}], "//.", "distributerule"}], 
  "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.7742632245897894`*^9, {3.774263354366478*^9, 3.774263357372427*^9}, {
   3.7742634005168533`*^9, 3.7742634095237675`*^9}, {3.774263709748597*^9, 
   3.7742637381227427`*^9}, {3.774263834941886*^9, 3.774263840813185*^9}, {
   3.7747965321875343`*^9, 3.7747965331190434`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5aec5152-ca13-4af5-b57d-6ba2e2fc7bd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}]}]}]], "Output",
 CellChangeTimes->{
  3.7747949107911935`*^9, {3.774795025116485*^9, 3.7747950695637054`*^9}, {
   3.774795181939916*^9, 3.7747952011299686`*^9}, 3.7747955793666306`*^9, 
   3.7747965339947023`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f475c2e7-4bb7-4a3c-bdf8-618e8cf8a7f2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"desired", " ", "output"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}]}]}]}], "Text",
 CellChangeTimes->{
  3.774263225190149*^9, 3.774263364786542*^9, {3.7742634012010217`*^9, 
   3.7742634101111827`*^9}, {3.7742637127884426`*^9, 3.774263739005348*^9}, {
   3.774263836274291*^9, 3.7742638412051077`*^9}, 3.7742640447725163`*^9, {
   3.7747840641873507`*^9, 
   3.7747840727573338`*^9}},ExpressionUUID->"d79a8963-c823-41b2-a997-\
96cf77dbd0bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "a"}], "+", 
      SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I", " ", "a"}], "-", 
      SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{"a", "+", 
      SuperscriptBox["a", "\[Dagger]"]}], ")"}]}], "//.", "distributerule"}], 
  "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.774262478632824*^9, 3.7742625209875374`*^9}, {
  3.7742625748700695`*^9, 3.774262578349391*^9}, {3.774262742805589*^9, 
  3.7742627499800916`*^9}, {3.7742627910831995`*^9, 3.774262840709544*^9}, {
  3.774262879331255*^9, 3.7742629066289573`*^9}, {3.7742629580275383`*^9, 
  3.7742629638878736`*^9}, {3.7742630377263737`*^9, 3.774263048243273*^9}, {
  3.7742633695627527`*^9, 3.774263372804102*^9}, {3.7742637550205326`*^9, 
  3.774263757522846*^9}, {3.774263844116356*^9, 3.774263851645198*^9}, {
  3.7742644590269904`*^9, 3.774264462297223*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ed535b2a-6ff3-4461-82fd-15ae9a107e29"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}]}]], "Output",
 CellChangeTimes->{3.7747955850236425`*^9, 3.7747965375901175`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"68593056-e81d-4d39-8547-929bb1fcb8f7"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desired", " ", "output"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "a"}], ")"}], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "a"}], ")"}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", "a"}], "+", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   RowBox[{"-", 
    SuperscriptBox["a", "\[Dagger]"]}], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}]}]}], "Text",
 CellChangeTimes->{
  3.774262751397298*^9, 3.774262792888369*^9, {3.774262826439732*^9, 
   3.774262841381715*^9}, {3.7742628874861383`*^9, 3.7742629071016936`*^9}, {
   3.774262959236306*^9, 3.774262968914427*^9}, 3.7742630717433987`*^9, 
   3.7742631957778172`*^9, 3.7742632696592555`*^9, {3.7742633669996176`*^9, 
   3.7742633739659815`*^9}, 3.7742637580963078`*^9, {3.774263844650895*^9, 
   3.774263852127904*^9}, 3.774264054514471*^9, {3.7747841197921705`*^9, 
   3.774784120790493*^9}},ExpressionUUID->"b54c5447-06bd-4b56-8481-\
52379074e654"],

Cell["\<\
Next we will build the linearity rule: 
You can use the build in function NumericQ to test if something is a number\
\>", "Text",
 CellChangeTimes->{{3.77426085419986*^9, 3.7742608919220023`*^9}, {
  3.774260977259845*^9, 3.7742609928122635`*^9}, {3.7742612565731597`*^9, 
  3.774261348877386*^9}, {3.774261444172574*^9, 3.7742615281210966`*^9}, {
  3.7742642095280685`*^9, 
  3.774264227578848*^9}},ExpressionUUID->"fb384ffc-ca8e-48e9-bcb5-\
f390ab439df7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericQ", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7742613646562214`*^9, 3.774261372172104*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"e1af2492-e292-45e1-b188-175e1c467aa1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7742613730128536`*^9, 3.7747844601640396`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"d9c085ce-a7f5-4888-80c3-0bb7ea080e68"]
}, Open  ]],

Cell["\<\
Understand the following application of replacement rule and its output.\
\>", "Text",
 CellChangeTimes->{{3.7742616524877796`*^9, 3.774261666805537*^9}, {
  3.774784178687205*^9, 
  3.774784208861288*^9}},ExpressionUUID->"e051cf81-7cf2-4b17-9de0-\
251f68963110"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "2", ",", "avariable", ",", "6", ",", "Pi"}], 
   "}"}], "/.", 
  RowBox[{
   RowBox[{"a_", "?", "PrimeQ"}], "\[Rule]", 
   RowBox[{"a", "\"\<is prime\>\""}]}]}]], "Input",
 CellChangeTimes->{{3.7742616693776226`*^9, 3.774261683172741*^9}, {
  3.774264970046377*^9, 3.7742649778674393`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"6082b028-6d24-4f1c-bfff-9fd2cfabe09f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"3", " ", "\<\"is prime\"\>"}], ",", 
   RowBox[{"2", " ", "\<\"is prime\"\>"}], ",", "avariable", ",", "6", ",", 
   "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{{3.7742616726738095`*^9, 3.774261684623861*^9}, 
   3.774264979012392*^9, 3.774784211438347*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"3be1caa1-38ec-499e-982d-ec8461e9e76f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "implement", " ", "your", " ", "linearrule", " ", "here", " ", "and", " ",
      "use", " ", "the", " ", "following", " ", "cell", " ", "to", " ", 
     "test", " ", "your", " ", "linear", " ", "rule"}], ",", " ", 
    RowBox[{"think", " ", "about", " ", "pattern", " ", 
     RowBox[{"matching", "!"}], " ", "The", " ", "implementation", " ", "is", 
     " ", "very", " ", "similar", " ", "to", " ", "the", " ", "distribution", 
     " ", "law", " ", "you", " ", "just", " ", 
     RowBox[{"implemented", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"linearrule", "=", 
    RowBox[{
     RowBox[{"c___", "\[CenterDot]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a_", "?", "NumericQ"}], " ", "d___"}], ")"}], "\[CenterDot]",
       "b___"}], "\[Rule]", 
     RowBox[{"a", " ", 
      RowBox[{"c", "\[CenterDot]", "d", "\[CenterDot]", "b"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rules", "=", 
     RowBox[{"{", 
      RowBox[{"distributerule", ",", "linearrule"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7742617009262753`*^9, 3.7742617550227876`*^9}, {
   3.7742618068622284`*^9, 3.7742618266283426`*^9}, {3.77426205480729*^9, 
   3.774262080405848*^9}, {3.7742642463476257`*^9, 3.7742643697552414`*^9}, {
   3.7742650109878*^9, 3.7742650311558275`*^9}, 3.774267462731336*^9, {
   3.774268055135844*^9, 3.7742680864330573`*^9}, {3.774784262532319*^9, 
   3.7747843253190174`*^9}, {3.7747846030833817`*^9, 3.7747846058419547`*^9}, 
   3.774787190380827*^9, {3.774795277059799*^9, 3.774795314402275*^9}, {
   3.7747953599141264`*^9, 3.774795366811166*^9}, {3.7747954110702343`*^9, 
   3.7747954257635183`*^9}, {3.7747954630659604`*^9, 
   3.7747954678093452`*^9}, {3.774795511657425*^9, 3.774795558650549*^9}, {
   3.7747956274706545`*^9, 3.7747956304648356`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[4]:=",ExpressionUUID->"0a932f40-7ef7-4a41-be05-ff520dc2e07f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c___", "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{"d___", " ", 
     RowBox[{"a_", "?", "NumericQ"}]}], ")"}], "\[CenterDot]", "b___"}], 
  "\[Rule]", 
  RowBox[{"a", " ", 
   RowBox[{"c", "\[CenterDot]", "d", "\[CenterDot]", "b"}]}]}]], "Output",
 CellChangeTimes->{3.774795530641122*^9, 3.7747955953076887`*^9, 
  3.7747956341111245`*^9, 3.7747965431043444`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6d6ba5c4-0892-4200-9adf-bef640fbeb84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "a"}], "+", 
     SuperscriptBox["a", "\[Dagger]"]}], ")"}], "\[CenterDot]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"I", " ", "a"}], "-", 
     SuperscriptBox["a", "\[Dagger]"]}], ")"}]}], "//.", "rules"}]], "Input",
 CellChangeTimes->{{3.7742617574991665`*^9, 3.774261765990464*^9}, {
   3.7742618391199446`*^9, 3.7742619060211143`*^9}, {3.7742643528836565`*^9, 
   3.7742643546748457`*^9}, {3.7742645829154162`*^9, 
   3.7742646035849204`*^9}, {3.7747842756272354`*^9, 3.774784275980248*^9}, 
   3.774784720335819*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"0840e916-c8a3-402c-88e2-dfba28f2c5e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   RowBox[{"a", "\[CenterDot]", "a"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"a", "\[CenterDot]", 
    SuperscriptBox["a", "\[Dagger]"]}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a"}]}], "-", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}]}]], "Output",
 CellChangeTimes->{
  3.7747954368364916`*^9, {3.774795525305732*^9, 3.774795534737171*^9}, 
   3.7747955980139413`*^9, 3.7747956369690523`*^9, 3.7747965454510956`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3541b60d-dc20-436a-b127-27de093c0711"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"desired", " ", "output"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   RowBox[{"a", "\[CenterDot]", "a"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"a", "\[CenterDot]", 
    SuperscriptBox["a", "\[Dagger]"]}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a"}]}], "-", 
  RowBox[{
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"]}]}]}], "Text",
 CellChangeTimes->{{3.7747846978120413`*^9, 
  3.7747847032624717`*^9}},ExpressionUUID->"90a6ba19-9ec3-492c-b052-\
57a259073075"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"run", " ", "this", " ", 
    RowBox[{"cell", ":", " ", 
     RowBox[{
     "this", " ", "is", " ", "the", " ", "definition", " ", "of", " ", 
      "momentum", " ", "and", " ", "position", " ", "operator"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalP]", "=", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "\[Dagger]"], "-", "a"}], ")"}]}], 
      SqrtBox["2"]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalX]", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "\[Dagger]"], "+", "a"}], 
      SqrtBox["2"]]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7747848035162334`*^9, 3.7747848330712147`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4a0b2269-de14-4c76-8090-dd30a1d28f2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "part", " ", "calculate", " ", "the", " ", "harmonic", " ", 
    RowBox[{"oscillator", "'"}], "s", " ", 
    RowBox[{"Hamiltonian", ".", " ", "You"}], " ", 
    RowBox[{"don", "'"}], "t", " ", "have", " ", "to", " ", "write", " ", 
    "new", " ", "code", " ", "but", " ", "please", " ", "run", " ", "this", 
    " ", "cell", " ", "to", " ", "test", " ", "that", " ", "you", " ", "get", 
    " ", "the", " ", "desired", " ", "output"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]"}],
        "+", 
       RowBox[{
       "\[DoubleStruckCapitalX]", "\[CenterDot]", 
        "\[DoubleStruckCapitalX]"}]}], ")"}]}], "//.", "rules"}], "//", 
   "Expand"}]}]], "Input",
 CellChangeTimes->{{3.7742647509164033`*^9, 3.7742648039990616`*^9}, {
   3.7742672298302107`*^9, 3.7742672459757037`*^9}, 3.7747842607610674`*^9, {
   3.774784736091627*^9, 3.774784797127325*^9}, {3.7747848424631214`*^9, 
   3.774784855216323*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"530bbf60-e9aa-4ba9-877d-637e14ad33c7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"a", "\[CenterDot]", 
    SuperscriptBox["a", "\[Dagger]"]}], "2"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a"}], "2"]}]], "Output",\

 CellChangeTimes->{3.77479591213643*^9, 3.774796567117175*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"01225278-f048-4ae9-9e82-93967c2c5390"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"desired", " ", "output"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{"a", "\[CenterDot]", 
    SuperscriptBox["a", "\[Dagger]"]}], "2"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a"}], "2"]}]}], "Text",\

 CellChangeTimes->{{3.774264796343591*^9, 3.7742648043880167`*^9}, 
   3.7742648527313833`*^9, {3.7747842366128225`*^9, 
   3.774784242493109*^9}},ExpressionUUID->"7cc58e61-ee2f-4d58-bc92-\
6a1931730a8c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How to act operator on eigenstates", "Subsection",
 CellChangeTimes->{{3.743352002472083*^9, 
  3.7433520345675282`*^9}},ExpressionUUID->"f7090dcc-90c2-4e7c-ad32-\
ec78b781a1fd"],

Cell[TextData[{
 "The following is how ladder operator on the states. \n\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]"}], "|", "n"}], 
      "\[RightAngleBracket]"}], "=", 
     RowBox[{
      SqrtBox[
       RowBox[{"n", "+", "1"}]], "|", 
      RowBox[{"n", "+", "1"}]}]}], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"4c1942a5-cf8a-4d37-9a2b-9b576e7448e4"],
 "\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["\[CenterDot]", " "]}], "|", "n"}], 
     "\[RightAngleBracket]"}], "=", 
    SqrtBox["n"]}], TraditionalForm]],ExpressionUUID->
  "eee288db-a710-4966-a8e4-56bbf20e8aab"],
 "|n-1\[RightAngleBracket]\n As we are going to build a matrix, and the \
matrix in Mathematica counts from 1 and our ground states count from 0. We \
need to modify the rules above slightly so that in our code ground state is \
actually |1\[RightAngleBracket]:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]"}], "|", "n"}], 
      "\[RightAngleBracket]"}], "=", 
     RowBox[{
      SqrtBox[
       RowBox[{"n", 
        StyleBox["+",
         FontFamily->"Arial",
         FontColor->RGBColor[1., 0., 0.]], 
        StyleBox["0",
         FontFamily->"Arial",
         FontSlant->"Plain",
         FontColor->RGBColor[1., 0., 0.]]}]], "|", 
      RowBox[{"n", "+", "1"}]}]}], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"29be7763-29af-4215-9ac0-9b5d29a2c631"],
 "\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["\[CenterDot]", " "]}], "|", "n"}], 
     "\[RightAngleBracket]"}], "=", 
    SqrtBox[
     RowBox[{"n", 
      StyleBox["-",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]]}]]}], TraditionalForm]],ExpressionUUID->
  "d88eff0f-ef3f-4d24-8ddb-e48aa89d56ec"],
 "|n-1\[RightAngleBracket]\n Imply the above rules on the states.\n"
}], "Text",
 CellChangeTimes->{{3.743352040912408*^9, 3.7433523013791437`*^9}, {
  3.743352347962925*^9, 3.7433523911846237`*^9}, {3.74335242637739*^9, 
  3.7433524431014633`*^9}, {3.774195520837529*^9, 3.774195550923668*^9}, {
  3.7742654217962275`*^9, 3.774265495516822*^9}, {3.774265537738785*^9, 
  3.7742655382264547`*^9}},ExpressionUUID->"e1ff835c-f658-40da-8768-\
cf957c9fc95a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "implement", " ", "the", " ", "above", " ", "rules", " ", "on", " ", 
     "the", " ", "states", 
     RowBox[{"(", " ", 
      RowBox[{
      "use", " ", "\[EscapeKey]dg\[EscapeKey]", " ", "to", " ", "get", " ", 
       RowBox[{"dagger", ".", " ", "use"}], " ", 
       RowBox[{"Ket", "[", "n", "]"}], " ", "to", " ", "represent", " ", 
       FormBox[
        RowBox[{
         RowBox[{"|", "n"}], "\[RightAngleBracket]"}],
        TraditionalForm]}], ")"}]}], ",", " ", 
    RowBox[{"think", " ", "about", " ", "pattern", " ", 
     RowBox[{"matching", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"creationrule", "=", 
    RowBox[{
     RowBox[{"b___", "\[CenterDot]", 
      SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
      RowBox[{"Ket", "[", "n_", "]"}]}], "\[Rule]", 
     RowBox[{
      SqrtBox["n"], 
      RowBox[{"b", "\[CenterDot]", 
       RowBox[{"Ket", "[", 
        RowBox[{"n", "+", "1"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"annihilationrule", "=", 
    RowBox[{
     RowBox[{"b___", "\[CenterDot]", "a", "\[CenterDot]", " ", 
      RowBox[{"Ket", "[", "n_", "]"}]}], "\[Rule]", 
     RowBox[{
      SqrtBox[
       RowBox[{"n", "-", "1"}]], 
      RowBox[{"b", "\[CenterDot]", 
       RowBox[{"Ket", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7742655415166707`*^9, 3.77426557038544*^9}, {
   3.7742656256105547`*^9, 3.774265692861642*^9}, {3.7742658170982943`*^9, 
   3.7742658264956894`*^9}, {3.7742658586836047`*^9, 
   3.7742658868764515`*^9}, {3.7742659380196443`*^9, 
   3.7742659721144624`*^9}, {3.774266040880556*^9, 3.7742660559532466`*^9}, {
   3.774266107789959*^9, 3.7742661121871996`*^9}, {3.7742662384537687`*^9, 
   3.7742662416651745`*^9}, 3.774266316066227*^9, {3.7742663972062874`*^9, 
   3.774266402367459*^9}, {3.7742664556114597`*^9, 3.7742664642596846`*^9}, {
   3.7742667213510084`*^9, 3.774266781059188*^9}, {3.774266906233474*^9, 
   3.7742669319278984`*^9}, {3.774267172966136*^9, 3.7742671880289116`*^9}, {
   3.774267472758168*^9, 3.7742675058536243`*^9}, {3.774784910882416*^9, 
   3.7747850736400647`*^9}, {3.774787147460451*^9, 3.7747871603629737`*^9}, {
   3.7747959418300056`*^9, 3.7747961020975337`*^9}, {3.774796297095118*^9, 
   3.7747963443138638`*^9}, {3.774796383052315*^9, 3.774796412739944*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[10]:=",ExpressionUUID->"804ea350-400b-4fe8-8d15-1cacca761378"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b___", "\[CenterDot]", 
   SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
   TemplateBox[{"n_"},
    "Ket"]}], "\[Rule]", 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"b", "\[CenterDot]", 
    TemplateBox[{RowBox[{"1", "+", "n"}]},
     "Ket"]}]}]}]], "Output",
 CellChangeTimes->{{3.7747960384017963`*^9, 3.774796056007719*^9}, 
   3.77479610270191*^9, 3.7747963624414253`*^9, 3.774796414436404*^9, 
   3.774796585339452*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a6da849f-6625-4ae8-ad5a-98052b2d34b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b___", "\[CenterDot]", "a", "\[CenterDot]", 
   TemplateBox[{"n_"},
    "Ket"]}], "\[Rule]", 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   RowBox[{"b", "\[CenterDot]", 
    TemplateBox[{RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]},
     "Ket"]}]}]}]], "Output",
 CellChangeTimes->{{3.7747960384017963`*^9, 3.774796056007719*^9}, 
   3.77479610270191*^9, 3.7747963624414253`*^9, 3.774796414436404*^9, 
   3.774796585345402*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"cd14eea3-1bee-4f36-907d-0dafa87f21ef"]
}, Open  ]],

Cell["Apply  your rules for harmonic oscillator", "Text",
 CellChangeTimes->{{3.774265500675008*^9, 3.7742655210454607`*^9}, {
  3.77426571006562*^9, 
  3.774265728537204*^9}},ExpressionUUID->"e2c8d7b0-a7b2-4cb6-b235-\
e8ebf43a5a6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "test", " ", "that", " ", "your", " ", "rules", " ", "work", " ", "for", 
    " ", "harmonic", " ", "oscillator"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newrules", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rules", ",", "creationrule", ",", "annihilationrule"}], "}"}],
       "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
        "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
         "\[CenterDot]", 
         TemplateBox[{"n"},
          "Ket"]}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
        "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
         "\[CenterDot]", 
         TemplateBox[{"n"},
          "Ket"]}]}]}], ")"}], "//.", "newrules"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.743352422366351*^9, 3.7433524234012995`*^9}, {
  3.7433524703561583`*^9, 3.7433526556499815`*^9}, {3.7438652131646295`*^9, 
  3.7438652213415313`*^9}, {3.7742657425945983`*^9, 3.7742657687047873`*^9}, {
  3.774265903117008*^9, 3.7742659097143574`*^9}, {3.774266266030026*^9, 
  3.7742662686909084`*^9}, {3.7742668501863413`*^9, 3.774266866775983*^9}, {
  3.7742672626950693`*^9, 3.774267273723915*^9}, {3.774267385864952*^9, 
  3.774267385996581*^9}, {3.774787103890951*^9, 3.7747871398069105`*^9}, {
  3.774796159164933*^9, 3.7747961739613953`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"35d1342f-099d-4606-9cc2-9fc6883943cc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  RowBox[{"CenterDot", "[", 
   TemplateBox[{"n"},
    "Ket"], "]"}]}]], "Output",
 CellChangeTimes->{
  3.774796066042925*^9, 3.774796107676606*^9, {3.7747961618636866`*^9, 
   3.7747961743812494`*^9}, 3.774796367014166*^9, 3.7747964182102795`*^9, 
   3.774796591003275*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"69ca439c-627e-48a5-b3d0-f2b332195fba"]
}, Open  ]],

Cell["Desired output", "Text",
 CellChangeTimes->{{3.7747851225146933`*^9, 
  3.77478512554953*^9}},ExpressionUUID->"17d27b0f-91aa-447b-80b2-\
d22c66b4db6b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  RowBox[{"CenterDot", "[", 
   TemplateBox[{"n"},
    "Ket"], "]"}]}]], "Text",
 CellChangeTimes->{
  3.7742660597879925`*^9, 3.774266115208119*^9, {3.7742662452815046`*^9, 
   3.7742662701470156`*^9}, 3.7742664792715445`*^9, 3.774266541708843*^9, 
   3.774266785649911*^9, 3.774266868938201*^9, {3.7742669365864663`*^9, 
   3.774266958241534*^9}, {3.7747850874371033`*^9, 
   3.774785117509112*^9}},ExpressionUUID->"3e3b0cbe-48e0-4889-999e-\
50af080b5050"],

Cell["\<\
should give (the minus sign is because we defined the ground state to be |1\
\[RightAngleBracket] for convenience to go to matrix later.\
\>", "Text",
 CellChangeTimes->{{3.7433526648421373`*^9, 3.743352669206275*^9}, {
  3.743352720262184*^9, 
  3.74335275963276*^9}},ExpressionUUID->"f409e530-19e7-4e99-90ee-\
6bcc76ca960b"],

Cell["\<\
The extra CenterDot is annoying, add another rule to get rid of it.\
\>", "Text",
 CellChangeTimes->{{3.774266969822569*^9, 
  3.774267009448745*^9}},ExpressionUUID->"ff0d34d6-b860-4ebf-8186-\
7bca019fa319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "implement", " ", "your", " ", "rule", " ", "to", " ", "get", " ", "rid", 
    " ", "of", " ", "the", " ", "extra", " ", "centerdot", " ", "here"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"unirule", "=", 
   RowBox[{
    RowBox[{"a___", "\[CenterDot]", "b___"}], "\[Rule]", 
    RowBox[{"a", " ", "b"}]}]}]}]], "Input",
 CellChangeTimes->{{3.774267016772184*^9, 3.774267043371996*^9}, {
   3.7742675256369715`*^9, 3.7742675529706087`*^9}, {3.7747851394921694`*^9, 
   3.7747851460186725`*^9}, {3.774787089399706*^9, 3.7747870921294065`*^9}, 
   3.774787330829179*^9, {3.7747964436213846`*^9, 3.7747964916469293`*^9}, {
   3.7747965951681423`*^9, 3.7747966343334217`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[16]:=",ExpressionUUID->"595453e7-47a0-4cd7-adc1-7ea3e87021b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a___", "\[CenterDot]", "b___"}], "\[Rule]", 
  RowBox[{"a", " ", "b"}]}]], "Output",
 CellChangeTimes->{3.7747966492385664`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"bc26f318-40e4-4dbd-b16e-9334451e1c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "that", " ", "your", " ", "rules", " ", "work", " ", "for", 
    " ", "harmonic", " ", "oscillor"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"finalrules", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newrules", ",", "unirule"}], "}"}], "//", "Flatten"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
        "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
         "\[CenterDot]", 
         TemplateBox[{"n"},
          "Ket"]}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
        "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
         "\[CenterDot]", 
         TemplateBox[{"n"},
          "Ket"]}]}]}], ")"}], "//.", "finalrules"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.7742670685556793`*^9, 3.774267118243208*^9}, {
  3.7742672885984*^9, 3.774267288714183*^9}, {3.774276394277048*^9, 
  3.77427639479315*^9}, {3.774787019023754*^9, 3.7747870406568985`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"537bb650-25b7-406c-9b2f-0b9441434cd3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  TemplateBox[{"n"},
   "Ket"]}]], "Output",
 CellChangeTimes->{3.7747966060570526`*^9, 3.7747966518116875`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"db19e5e5-8190-4fe3-8327-5291d941c27d"]
}, Open  ]],

Cell["Desired output", "Text",
 CellChangeTimes->{{3.7747870602664857`*^9, 
  3.7747870649371257`*^9}},ExpressionUUID->"4a921928-dd41-4b4e-a01f-\
716cd645763e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  TemplateBox[{"n"},
   "Ket"]}]], "Text",
 CellChangeTimes->{
  3.774787056947324*^9},ExpressionUUID->"f791110c-ba36-431a-af3e-\
eb7546336a69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Chapter Two
Solve the anharmonic oscillator problem: eigenvalues and eigenstates\
\>", "Chapter",
 CellChangeTimes->{{3.774194885170946*^9, 
  3.774194967972561*^9}},ExpressionUUID->"54b7d16a-22b0-4288-ad43-\
4005d15e613f"],

Cell[CellGroupData[{

Cell["Your Hamiltonian Matrix", "Section",
 CellChangeTimes->{{3.649159168718357*^9, 3.6491591872913575`*^9}, {
  3.6491593487413573`*^9, 3.6491593513013573`*^9}, {3.7433533413342037`*^9, 
  3.7433533527878838`*^9}},ExpressionUUID->"bdf3e3cc-cbcb-450c-b2eb-\
a543b45aad94"],

Cell["\<\
Now act the Hamiltonian of an anharmonic oscillator on the states\
\>", "Text",
 CellChangeTimes->{{3.743355326227885*^9, 3.743355372814775*^9}, {
  3.7438686230012813`*^9, 
  3.7438686243690033`*^9}},ExpressionUUID->"9a499e5f-9f6e-46b6-a343-\
585f35fca838"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"run", " ", "this", " ", 
    RowBox[{"cell", ".", " ", "This"}], " ", "finds", " ", "the", " ", 
    "anharmonic", " ", "oscillator", " ", "Hamiltonian", " ", "in", " ", 
    "terms", " ", "of", " ", "a", " ", "and", " ", 
    SuperscriptBox["a", "\[Dagger]"], " ", "and", " ", "then", " ", "act", 
    " ", "on", " ", "the", " ", "state", " ", 
    TemplateBox[{"n"},
     "Ket"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"hamiltonian", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{
       "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
        "\[CenterDot]", 
        RowBox[{"Ket", "[", "n", "]"}]}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{
       "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
        "\[CenterDot]", "\[DoubleStruckCapitalX]", "\[CenterDot]", 
        "\[DoubleStruckCapitalX]", "\[CenterDot]", 
        RowBox[{"Ket", "[", "n", "]"}]}]}]}], ")"}], "//.", 
    "finalrules"}]}]}]], "Input",
 CellChangeTimes->{
  3.743355315655285*^9, {3.7433554411700726`*^9, 3.7433554429038706`*^9}, 
   3.743865682782252*^9, {3.7742683106563034`*^9, 3.774268311074671*^9}, {
   3.7742686242836*^9, 3.7742686749727917`*^9}, {3.7747868415751925`*^9, 
   3.7747869241075945`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"60e65560-7ab0-4366-a721-4043252df7d2"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}]]}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}]], " ", 
            TemplateBox[{RowBox[{
                RowBox[{"-", "2"}], "+", "n"}]},
             "Ket"]}], "+", 
           RowBox[{"n", " ", 
            TemplateBox[{"n"},
             "Ket"]}]}], ")"}]}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}], " ", 
           TemplateBox[{"n"},
            "Ket"]}], "+", 
          RowBox[{
           SqrtBox["n"], " ", 
           SqrtBox[
            RowBox[{"1", "+", "n"}]], " ", 
           TemplateBox[{RowBox[{"2", "+", "n"}]},
            "Ket"]}]}], ")"}]}], 
       SqrtBox["2"]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "4"}], "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "3"}], "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             TemplateBox[{RowBox[{
                 RowBox[{"-", "4"}], "+", "n"}]},
              "Ket"]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", "n", " ", 
             TemplateBox[{RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}]},
              "Ket"]}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             TemplateBox[{RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}]},
              "Ket"]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "n"}], ")"}], " ", 
             TemplateBox[{"n"},
              "Ket"]}]}], 
           SqrtBox["2"]]}], 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             TemplateBox[{RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}]},
              "Ket"]}], "+", 
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             TemplateBox[{"n"},
              "Ket"]}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
             TemplateBox[{"n"},
              "Ket"]}], "+", 
            RowBox[{
             SqrtBox["n"], " ", 
             SqrtBox[
              RowBox[{"1", "+", "n"}]], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "n"}], ")"}], " ", 
             TemplateBox[{RowBox[{"2", "+", "n"}]},
              "Ket"]}]}], 
           SqrtBox["2"]]}], 
         SqrtBox["2"]]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             TemplateBox[{RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}]},
              "Ket"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
             TemplateBox[{"n"},
              "Ket"]}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], "2"], " ", 
             TemplateBox[{"n"},
              "Ket"]}], "+", 
            RowBox[{
             SqrtBox["n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "n"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             TemplateBox[{RowBox[{"2", "+", "n"}]},
              "Ket"]}]}], 
           SqrtBox["2"]]}], 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             TemplateBox[{"n"},
              "Ket"]}], "+", 
            RowBox[{
             SuperscriptBox["n", 
              RowBox[{"3", "/", "2"}]], " ", 
             SqrtBox[
              RowBox[{"1", "+", "n"}]], " ", 
             TemplateBox[{RowBox[{"2", "+", "n"}]},
              "Ket"]}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             SqrtBox["n"], " ", 
             SqrtBox[
              RowBox[{"1", "+", "n"}]], " ", 
             TemplateBox[{RowBox[{"2", "+", "n"}]},
              "Ket"]}], "+", 
            RowBox[{
             SqrtBox["n"], " ", 
             SqrtBox[
              RowBox[{"1", "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{"2", "+", "n"}]], " ", 
             SqrtBox[
              RowBox[{"3", "+", "n"}]], " ", 
             TemplateBox[{RowBox[{"4", "+", "n"}]},
              "Ket"]}]}], 
           SqrtBox["2"]]}], 
         SqrtBox["2"]]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.774268322859048*^9, 3.7742686329371743`*^9, 
  3.7742686754893117`*^9, 3.7742764156050525`*^9, 3.7747967871398425`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2b3b057d-9523-474f-bd8d-4df335da3b22"]
}, Open  ]],

Cell["\<\
This is a bit messy. Write a code such that they are organized in terms of \
the states. 
One way to do this is to use function Collect.\
\>", "Text",
 CellChangeTimes->{{3.743866217694871*^9, 3.7438662287544727`*^9}, {
   3.7444577928110175`*^9, 3.744457793312293*^9}, {3.7444595624784575`*^9, 
   3.744459570757481*^9}, {3.744460354349966*^9, 3.74446036459801*^9}, 
   3.7444609051881275`*^9},ExpressionUUID->"a04f726c-4d84-4ab2-8f92-\
a2267b151dfc"],

Cell[CellGroupData[{

Cell["An example of Collect", "Subsection",
 CellChangeTimes->{{3.7444647489896903`*^9, 3.744464755400204*^9}, {
   3.7444653131389723`*^9, 3.7444653158766546`*^9}, 
   3.774268343974085*^9},ExpressionUUID->"2a5cb3e3-5cdd-4fd6-8551-\
29eecce97341"],

Cell["\<\
First argument is an expression, second argument is a pattern, collect \
organize the expression in terms of power of the pattern, which is like \
writing the expression in terms of a series of pattern to certain power. \
\>", "Text",
 CellChangeTimes->{{3.744464806788144*^9, 3.7444648632377043`*^9}, {
   3.7444649339989705`*^9, 3.744465008784607*^9}, 
   3.7444652297750235`*^9},ExpressionUUID->"7da26c6e-503a-494a-a479-\
257871e6a0dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
    RowBox[{"a", " ", "x"}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox[
      RowBox[{"Sin", "[", "y", "]"}], "2"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.744464797923382*^9, 3.7444648006119184`*^9}, {
  3.7444648666561527`*^9, 3.744464914752722*^9}, {3.7444651049597683`*^9, 
  3.7444651371763105`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e6b9dfbb-fff1-49c0-9632-bbb5d410f15a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "a"}], ")"}], " ", "x"}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "y", "]"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.744464915530673*^9, 3.7444651396970277`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6755af25-b6d4-4705-9134-c6b60bc80bba"]
}, Open  ]],

Cell["\<\
we can then simplify the coefficient by using the third argument, which is a \
function that is applied to the coefficients\
\>", "Text",
 CellChangeTimes->{{3.7444651456654224`*^9, 
  3.744465173594496*^9}},ExpressionUUID->"91819205-f372-4053-9bd4-\
9407586008ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
    RowBox[{"a", " ", "x"}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox[
      RowBox[{"Sin", "[", "y", "]"}], "2"]}]}], ",", "x", ",", "Simplify"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74446518142658*^9, 3.74446518343218*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"61925b44-9da6-4e5f-b7a2-aeef0eb9fc92"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "a"}], ")"}], " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.744465183971546*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"66dda387-6dfd-4945-bcde-454f8b6f5cae"]
}, Open  ]],

Cell["This is different from simplify, as demonstrated below.", "Text",
 CellChangeTimes->{
  3.7444652335332384`*^9},ExpressionUUID->"7924e5bf-39a9-4cd6-b602-\
6f00519110d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", 
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
   RowBox[{"a", " ", "x"}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], 
    SuperscriptBox[
     RowBox[{"Sin", "[", "y", "]"}], "2"]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7444649244100575`*^9, 3.744464926069816*^9}, {
  3.7444651919719086`*^9, 3.744465214899481*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"19d20f27-3439-4720-89b9-3c733323955d"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "a", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.7444652155326047`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"b8104492-0b8a-4e2e-ad40-f51189f52088"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Your code to organize the Hamiltonian in terms of the states", \
"Subsection",
 CellChangeTimes->{{3.7444652546613255`*^9, 
  3.744465272029631*^9}},ExpressionUUID->"e0b2ccbe-b68c-4c4f-8bc1-\
f16be4f6092d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Insert", " ", "your", " ", "code", " ", "here", " ", "so", " ", "they", 
    " ", "are", " ", "organized", " ", "in", " ", "terms", " ", "of", " ", 
    "the", " ", "states"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"organizedH", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{"hamiltonian", ",", 
     RowBox[{"Ket", "[", "n___", "]"}], ",", "Simplify"}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.743866231278875*^9, 3.7438662518301973`*^9}, {
   3.7438663040316944`*^9, 3.743866304348144*^9}, {3.744457321342685*^9, 
   3.744457324363211*^9}, 3.7444575304089937`*^9, {3.7444577987688255`*^9, 
   3.7444578173073926`*^9}, {3.7742686147943535`*^9, 
   3.7742686467247915`*^9}, {3.7742686837227745`*^9, 
   3.7742686902114415`*^9}, {3.774268721833496*^9, 3.774268747455178*^9}, {
   3.774277244117981*^9, 3.7742772449178553`*^9}, {3.774785223399455*^9, 
   3.7747852490331135`*^9}, {3.7747856364314814`*^9, 3.7747856591077642`*^9}, 
   3.774785808182895*^9, 3.7747868312198944`*^9, 3.7747872579052057`*^9, {
   3.774796864925872*^9, 3.7747968950972004`*^9}, {3.774796966255937*^9, 
   3.7747969767189302`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[22]:=",ExpressionUUID->"e5b180e0-751d-42ff-845c-5fc2059267af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "8"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   TemplateBox[{RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   TemplateBox[{RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "n"}], "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["n", "2"]}]}], ")"}], " ", 
   TemplateBox[{"n"},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["n", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   TemplateBox[{RowBox[{"2", "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SqrtBox["n"], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"2", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"3", "+", "n"}]], " ", 
   TemplateBox[{RowBox[{"4", "+", "n"}]},
    "Ket"]}]}]], "Output",
 CellChangeTimes->{
  3.7747968849253864`*^9, {3.774796967378931*^9, 3.7747969777452097`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"5c19e9dd-b887-43aa-bd93-18a3e6df5ed3"]
}, Open  ]],

Cell["\<\
As you can see from above results, only a small fraction of the entries are \
non zero, which indicates we want to use SparseArray. Thus we need a set of \
rules for the SparseArray.
\
\>", "Text",
 CellChangeTimes->{{3.7433553762550373`*^9, 3.7433554132873344`*^9}, {
  3.743355446815248*^9, 3.7433554960488343`*^9}, {3.7433555351895537`*^9, 
  3.743355563141844*^9}, {3.74386616835562*^9, 3.7438662160924463`*^9}, {
  3.7438662555832577`*^9, 3.743866256406514*^9}, {3.743866337402484*^9, 
  3.743866353964316*^9}, {3.744460202023018*^9, 3.7444602123858075`*^9}, {
  3.744460303928338*^9, 3.744460339031046*^9}, {3.7444604200788865`*^9, 
  3.744460427585744*^9}},ExpressionUUID->"c48933e3-dfec-40d1-a407-\
c58f28737f57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 Here is an example of SparseArray, that makes a 5 by 5 matrix while all \
diagonal term specified and one other entry specified. \
\>", "Subsection",
 CellChangeTimes->{
  3.7444604329993887`*^9, {3.7444604832278104`*^9, 3.744460484398171*^9}, 
   3.7444657474546623`*^9, 3.7742688291426573`*^9, {3.7742689087940354`*^9, 
   3.7742689123575373`*^9}},ExpressionUUID->"c7449814-5bbd-457c-8225-\
1e1531e989e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "5"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", "i"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7444602215379725`*^9, 3.7444603000225997`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"d516bc97-fb4a-488b-876b-978dabc310d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "5", "0", "0", "0"},
     {"0", "2", "0", "0", "0"},
     {"0", "0", "3", "0", "0"},
     {"0", "0", "0", "4", "0"},
     {"0", "0", "0", "0", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {5, 5}, 0, {
     1, {{0, 2, 3, 4, 5, 6}, {{2}, {1}, {2}, {3}, {4}, {5}}}, {5, 1, 2, 3, 4, 
      5}}]]]]], "Output",
 CellChangeTimes->{{3.7444602816609783`*^9, 3.74446030045417*^9}},
 CellLabel->
  "Out[131]//MatrixForm=",ExpressionUUID->"f81dabcf-9f46-48b6-9db4-\
f6893b773a36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["In the following you will make your own rules with \
Cases for the SparseArray and then make your own SparseArray for the \
Hamiltonian ", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7444604506433125`*^9, 3.7444604681361785`*^9}, {
  3.744460988320109*^9, 3.744460998061974*^9}, {3.744465395879896*^9, 
  3.7444654368765464`*^9}, {3.774269122831806*^9, 
  3.7742691668004255`*^9}},ExpressionUUID->"0240870f-9a8c-489c-a4f1-\
814ea3cc66a5"],

Cell[CellGroupData[{

Cell["An example of Cases", "Subsubsection",
 CellChangeTimes->{{3.743866361215454*^9, 3.743866362149029*^9}, {
   3.7444654178186564`*^9, 3.7444654269249616`*^9}, 
   3.774269114974765*^9},ExpressionUUID->"717913de-2234-4c30-a86e-\
6e88169afb3f"],

Cell["\<\
Use Cases to achieve this: Cases[expression, pattern->do something with the \
particular pattern], check out the following example that picks out the list \
that has two elements \
\>", "Text",
 CellChangeTimes->{{3.7438663666117525`*^9, 3.743866385808883*^9}, {
   3.7438677198417597`*^9, 3.7438677714218416`*^9}, {3.743867828082036*^9, 
   3.743867887646018*^9}, {3.7438680819241695`*^9, 3.7438681271082244`*^9}, {
   3.74445958863667*^9, 3.7444595903922367`*^9}, 3.7444654938863754`*^9, {
   3.7444655427990875`*^9, 3.7444655431534133`*^9}, {3.774269294414045*^9, 
   3.7742692961186666`*^9}},ExpressionUUID->"e3485eb1-2138-47cc-a2db-\
5fb21b1971af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7438678200949335`*^9, 3.743867820126176*^9}, 
   3.744465453660958*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"20475727-3eef-4f19-a4a7-c31c70f39936"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7438678235040593`*^9, 3.744465516907771*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6e146113-c210-462b-a6e8-5f19194ca2da"]
}, Open  ]],

Cell["\<\
In this example, the output is replaced by the sum of the two elements\
\>", "Text",
 CellChangeTimes->{{3.744465499632971*^9, 
  3.7444655146008377`*^9}},ExpressionUUID->"291ea93c-6fd2-447b-808c-\
b665b063dba7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
    RowBox[{"a", "+", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74446546850557*^9, 3.744465474608879*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"942e7a35-168a-4fb9-b4c4-11b661e1c4cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "9", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.744465519289655*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0a6e2542-8797-441d-96f9-0d65fce3674a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make your Hamiltonian matrix:", "Subsubsection",
 CellChangeTimes->{{3.774269240654449*^9, 3.7742692555312366`*^9}, {
  3.774269853766447*^9, 
  3.774269874792677*^9}},ExpressionUUID->"4ace22f0-fddb-48d2-9c95-\
630c2c2e42b0"],

Cell["\<\
Your desired output should be replacement rules of this form {n_, m_} /; m == \
n - 4 -> coefficient of | n - 4\[RightAngleBracket]\
\>", "Text",
 CellChangeTimes->{{3.7742692691823826`*^9, 3.7742692775335474`*^9}, 
   3.7742697948539114`*^9, {3.7747867874818583`*^9, 
   3.774786790984496*^9}},ExpressionUUID->"c1b88508-d22e-46cc-9b41-\
119f4e6f5c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Implement", " ", "your", " ", "rules", " ", "to", " ", "make", " ", "the",
     " ", "rules", " ", "for", " ", "the", " ", "sparsearray", " ", "here", 
    " ", "using", " ", "cases", " ", "on", " ", "the", " ", "organizedH"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"matrixrules", "=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"organizedH", ",", 
      RowBox[{
       RowBox[{"c_", " ", 
        RowBox[{"Ket", "[", "l_", "]"}]}], "\[Rule]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
         RowBox[{"m", "\[Equal]", "l"}]}], "\[Rule]", "c"}]}]}], "]"}], "/.", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n$", "\[Rule]", " ", "n"}], ",", 
      RowBox[{"m$", "\[Rule]", "m"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7742693357344456`*^9, 3.7742694043374443`*^9}, {
  3.7742694933774796`*^9, 3.774269566835129*^9}, {3.774269600351042*^9, 
  3.7742696202240396`*^9}, {3.7742696805260596`*^9, 3.774269691090835*^9}, {
  3.774277258955963*^9, 3.7742772608248434`*^9}, {3.7747854094504075`*^9, 
  3.7747854547776594`*^9}, {3.77478548683585*^9, 3.774785543070377*^9}, {
  3.7747855990734324`*^9, 3.7747856074291034`*^9}, {3.774785853668208*^9, 
  3.774785873317648*^9}, {3.774785977411931*^9, 3.7747859936475773`*^9}, {
  3.774786798488422*^9, 3.7747868039119205`*^9}, {3.774787253918871*^9, 
  3.7747872543197994`*^9}, {3.774797316705881*^9, 3.774797319020689*^9}, {
  3.7747974909559803`*^9, 3.7747974956304793`*^9}, {3.774797656910268*^9, 
  3.774797672787844*^9}, {3.774797900280549*^9, 3.7747979588090982`*^9}, {
  3.774798008731902*^9, 3.7747980092554536`*^9}, {3.774798088168642*^9, 
  3.774798113761338*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[26]:=",ExpressionUUID->"7eb336aa-ae1d-46af-a734-5f93303b1223"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "n"}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", "n"}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "n"}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["n", "2"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"2", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["n", 
      RowBox[{"3", "/", "2"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"4", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"2", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"3", "+", "n"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.77479811430077*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"53750bd8-b6a6-4644-a5da-29be8153b734"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Insert", " ", "your", " ", "matrix", " ", "rules", " ", "and", " ", 
    "make", " ", "a", " ", "large", " ", 
    RowBox[{"(", 
     RowBox[{"100", " ", "by", " ", "100"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
     "matrix", " ", "and", " ", "view", " ", "with", " ", "ArrayPlot"}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"size", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"yourmatrix", "=", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"matrixrules", ",", 
      RowBox[{"{", 
       RowBox[{"size", ",", "size"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"yourmatrix", "//", "ArrayPlot"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7433555766320353`*^9, 3.7433556398266487`*^9}, {
   3.774269182335188*^9, 3.774269188979365*^9}, {3.774269704763219*^9, 
   3.7742697612893453`*^9}, {3.774274321633255*^9, 3.7742743248743677`*^9}, {
   3.774275135895791*^9, 3.774275156134567*^9}, 3.774277271260006*^9, {
   3.774785888079153*^9, 3.7747859287600174`*^9}, 3.7747868144597464`*^9, {
   3.774797593703302*^9, 3.774797622507287*^9}, {3.7747982841387057`*^9, 
   3.7747982897317114`*^9}, {3.774798320525378*^9, 3.77479832438805*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[33]:=",ExpressionUUID->"d5d9fe96-056a-427e-a381-91535472b367"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt1lswlnkAx3FiRTnM6mRzKjn3FoXa2uoXQiobasah0Gtpt2K2bAcjayli
UBvKtkUsSVEOkXMSSfH2HipyyOl1fk/PZmt6U7S7M3uxN8/t03PxXPxn/vO5
+v9mvhf/pYE/egYrKSgofPXf+fe+/kSt/2UjLjJscsrXyl9gPGfpkEeBCIwz
/n9n5+j6XPB7jv2rkvzmxY/gXvDZnuUsAtVJ1k7V5ePodMkvikyX4ol36EzA
W4J272f88/oXulsM67WeYd8Vo7o9ZiNYZ+HjUraEwO7phtVsozGYarTuyqqX
IOFiRdiuAYK0N7rtYpwa/xCqNJfVL8Dw8hA354hhaMoNXb/tlOF8UdRIQOYI
pLcTNUVSMRx9MpLftxGkvdFtF+PU+IQswNS/WACTrMmPYt4QNnCs72qkyLDl
14N+d02G0VMw0bfXWIy4EoMdnlUEaW9028U4Na59wDpi1nkBLrgWzbD2DcH4
Sexx90AZpu7FXWbXClGYOfbwHVuEHQUbS/3yCNLe6LaLcWp8Jq3lTR1bgKhL
xaKt//Tir2dZ6a0vgzxNkBHkP4hMxDXUXJ/ATe/3tbppBGlvdNvFODV+Rf4s
f8JRgG3KY+YKHkIEy7Xdhv+UQv3uzqB6zQFIjjQJ8ibHkSLwCEmOIUh7o9su
xqlxvb15MaxFAny0DPZILR2ETZZboF2RFNmuysLeS7342jVXXuU0jk9WLo3F
hwnS3ui2i3GK/s/ekrTBKT7QtJhzf8cg3Pw4HLVYKdgtHXGSlT3Q0ze1e5M1
hrCLXffi9hGkvdFtF+PU+NPWKc4tHh/ZtTqrHt8ZgG96ZkWuoxQmK/XLb/R3
oizTLd5LcQxaLLUATQ+CtDe67WKcGucfiNokKufDx9Z9/NCuAag1lb1t0JXC
PbY/RLuwAzqTuoTwwChSLTryXB0I0t7ototxatxoXWvHxiQ+Stzz5rX/3I+q
GP3y3F4Juq3MSyxSXiB4OC0kvWsEGc83p661JUh7o9suxqlxJdPkfKUwPqZF
yz6otvbh+8tPW9SqJFApXuiSOCNAfemHEE3RMIjQ/T5aswnS3ui2i3FqvDly
UVa/Kx9la+wrJwt7Ea7z3NcuUoKgBcJDxxsEkH+3es5L9WGw0lYlJhTISHuj
2y7GqXFWn+OjX4z42ML9q9gz7RWi/cy94+wlyAwXn3Q4JoAq9nR2KQxBZcWd
+CPrZaS90W0X49S4qv2ESepcPhJKbd0miB74bX9c4G0ogZ+SRnQGSwCjjIi5
76YH8TB4dIMFV0raG912MU6Nc2ZVeR9r48HgsPV9O2E3Qk81Rb4eFcOSuz08
dpQP5Ws5uSuVB8Fpb79ZHCwl7Y1uuxinxts//dZRkM2Dzu3O9irXbmiWaV3T
aBHDM784aCqHjzozIjt63gDSDZO5yopS0t7ototxavx0jUGOujcPH1P2P3jt
3IXNSxq2EefFWGDm5DTD5mOx9uLZ3V59GFDVKzTPlpD2RrddjFPjW0tK+jyt
eTj6xysPdnUn6hW5zrt/EuP3arnRJhs+avxPf8qf04vm11ctI3wlpL3RbRfj
1Pj9yukfmkVcVD+Jrjzz4CUMnHc2RkGMWQNJnbUyHuxt/feKAnogFQWc+EZR
Qtob3XYxTo2riL2C9B5xcUNlfqNw00u8P2yVxjIWI9CqYveiSB5uTcxJYLd0
Yf6Z7si2QjFpb3TbxTg1vvBSxK2s01yY9R29+sajA49tuMKsSREaptbUndPk
Ifxkb4KGfSdOnWVvsPQVk/ZGt12MU+PPhB3rCx24aFuyxj/yYDsKX8xPXNso
wrKmlAVG17mIMVY/LuN0wKGCV+OlLibtjW67GP+8XsOuKVkRyEXUubCLzd3t
yNSN/7Ksi7w3ur2fcXr631Fv3K8=
              "], {{0, 0}, {25, 25}}, {0, 1}], 
             AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt1lswlnkAx3FiRTnM6mRzKjn3FoXa2uoXQiobasah0Gtpt2K2bAcjayli
UBvKtkUsSVEOkXMSSfH2HipyyOl1fk/PZmt6U7S7M3uxN8/t03PxXPxn/vO5
+v9mvhf/pYE/egYrKSgofPXf+fe+/kSt/2UjLjJscsrXyl9gPGfpkEeBCIwz
/n9n5+j6XPB7jv2rkvzmxY/gXvDZnuUsAtVJ1k7V5ePodMkvikyX4ol36EzA
W4J272f88/oXulsM67WeYd8Vo7o9ZiNYZ+HjUraEwO7phtVsozGYarTuyqqX
IOFiRdiuAYK0N7rtYpwa/xCqNJfVL8Dw8hA354hhaMoNXb/tlOF8UdRIQOYI
pLcTNUVSMRx9MpLftxGkvdFtF+PU+IQswNS/WACTrMmPYt4QNnCs72qkyLDl
14N+d02G0VMw0bfXWIy4EoMdnlUEaW9028U4Na59wDpi1nkBLrgWzbD2DcH4
Sexx90AZpu7FXWbXClGYOfbwHVuEHQUbS/3yCNLe6LaLcWp8Jq3lTR1bgKhL
xaKt//Tir2dZ6a0vgzxNkBHkP4hMxDXUXJ/ATe/3tbppBGlvdNvFODV+Rf4s
f8JRgG3KY+YKHkIEy7Xdhv+UQv3uzqB6zQFIjjQJ8ibHkSLwCEmOIUh7o9su
xqlxvb15MaxFAny0DPZILR2ETZZboF2RFNmuysLeS7342jVXXuU0jk9WLo3F
hwnS3ui2i3GK/s/ekrTBKT7QtJhzf8cg3Pw4HLVYKdgtHXGSlT3Q0ze1e5M1
hrCLXffi9hGkvdFtF+PU+NPWKc4tHh/ZtTqrHt8ZgG96ZkWuoxQmK/XLb/R3
oizTLd5LcQxaLLUATQ+CtDe67WKcGucfiNokKufDx9Z9/NCuAag1lb1t0JXC
PbY/RLuwAzqTuoTwwChSLTryXB0I0t7ototxatxoXWvHxiQ+Stzz5rX/3I+q
GP3y3F4Juq3MSyxSXiB4OC0kvWsEGc83p661JUh7o9suxqlxJdPkfKUwPqZF
yz6otvbh+8tPW9SqJFApXuiSOCNAfemHEE3RMIjQ/T5aswnS3ui2i3FqvDly
UVa/Kx9la+wrJwt7Ea7z3NcuUoKgBcJDxxsEkH+3es5L9WGw0lYlJhTISHuj
2y7GqXFWn+OjX4z42ML9q9gz7RWi/cy94+wlyAwXn3Q4JoAq9nR2KQxBZcWd
+CPrZaS90W0X49S4qv2ESepcPhJKbd0miB74bX9c4G0ogZ+SRnQGSwCjjIi5
76YH8TB4dIMFV0raG912MU6Nc2ZVeR9r48HgsPV9O2E3Qk81Rb4eFcOSuz08
dpQP5Ws5uSuVB8Fpb79ZHCwl7Y1uuxinxts//dZRkM2Dzu3O9irXbmiWaV3T
aBHDM784aCqHjzozIjt63gDSDZO5yopS0t7ototxavx0jUGOujcPH1P2P3jt
3IXNSxq2EefFWGDm5DTD5mOx9uLZ3V59GFDVKzTPlpD2RrddjFPjW0tK+jyt
eTj6xysPdnUn6hW5zrt/EuP3arnRJhs+avxPf8qf04vm11ctI3wlpL3RbRfj
1Pj9yukfmkVcVD+Jrjzz4CUMnHc2RkGMWQNJnbUyHuxt/feKAnogFQWc+EZR
Qtob3XYxTo2riL2C9B5xcUNlfqNw00u8P2yVxjIWI9CqYveiSB5uTcxJYLd0
Yf6Z7si2QjFpb3TbxTg1vvBSxK2s01yY9R29+sajA49tuMKsSREaptbUndPk
Ifxkb4KGfSdOnWVvsPQVk/ZGt12MU+PPhB3rCx24aFuyxj/yYDsKX8xPXNso
wrKmlAVG17mIMVY/LuN0wKGCV+OlLibtjW67GP+8XsOuKVkRyEXUubCLzd3t
yNSN/7Ksi7w3ur2fcXr631Fv3K8=
              "], {{0, 0}, {25, 25}}, {0, 1}], 
             AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0488`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox[
                    SqrtBox[
                    FractionBox["3", "2"]], "2"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["5", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", 
                    SqrtBox["2"]], ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["21", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {100, 100}, 0, {1, {CompressedData["
1:eJwlzy8vxAEAgOGf3XYz210gEAgnnEAgEAgEggtsCAQXzm4Ef0YgEAiEEwgn
nEAgnEAgEAgEAoFAYDOz3WaKolwxz+3e7fkAbyw1NzRbEQRBOigXIkwVUWqo
o4FGmmihjQ666KGPBIOMMEaSCaaYYYElVlhjg0222WGXfQ454oQzLrjihjse
eOKFNz4o8M0PvxT5K/2YqyRCNbXUEyNOM62000k3vfQzwDCjjJNikmnmWWSZ
VdbJsEWWHHsckOeYU8655Jpb7nnkmVfe+aTAF/+uljKN
     "], CompressedData["
1:eJwVyNWyqgAAhWFMQAwQu0XsDlAxUDBRVFCwsNje79c+j3HYM2tmffOn9V9Z
NwMA8M8EAMYAm8litltNNtBihuxW0GKCbZDZancgsAW0WR12J4S4QBvsgJxu
OwKDHhfkRh1OBMY8Li/qdLhdGIJ7vKjP7XThmN/jC3hRtwfD/UGfNxRAg34c
C/tC3kjAHw7i0VjI96d4MJqIRUKBZDwcDaZioUQkGU9Hw6kEEYllkul4lIwl
UkQma5AgE6lcOpNPZslcIUVk08V8hiwVckQ5U8xnK6VcgSxX/1QzWM7Xi9VG
rVSolOvVZrFVqtQazWq7Xq51WpVGk2pX63Sj06p121S9SfcMdql+u9lienSn
3e0PKJoZ9jpUfzDqMr3xkB4ZjWWG40lvwI760+GE4cYDfjRlOaPN5vyUHY25
xWTG8vPpcrGazLg1P50vVwK3mC35+Xqzmi2E7UZcrueL1U7Y7tdLcbMVDruV
uN9I6+1BFnbi5ijttyf5sFOO4l5SdwYl5bw/yofLST1elbOknuTL7Xy9K8eb
qp0uj7tyPava5fa8nx/X1/umXZ6f6/310J/a+/Zj4KPp7+/z8Xn9fJ/627i3
/v0PibVi1w==
     "]}, {
    Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[5, 8], 2^
     Rational[-1, 2], Rational[21, 8], Rational[1, 2] 
     Rational[15, 2]^Rational[1, 2], 6^Rational[1, 2], 2^Rational[-1, 2], 3 
     3^Rational[1, 2], Rational[3, 2] Rational[5, 2]^Rational[1, 2], Rational[
     49, 8], 6^Rational[1, 2], Rational[1, 2] Rational[105, 2]^Rational[1, 2],
      4 5^Rational[1, 2], Rational[89, 8], 5 Rational[15, 2]^Rational[1, 2], 
     3 3^Rational[1, 2], Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
     Rational[1, 2] 105^Rational[1, 2], Rational[141, 8], 3 42^Rational[1, 2],
      Rational[1, 2] Rational[15, 2]^Rational[1, 2], 4 5^Rational[1, 2], 
     Rational[205, 8], Rational[3, 2] 21^Rational[1, 2], Rational[3, 2] 
     35^Rational[1, 2], 7 14^Rational[1, 2], Rational[3, 2] 
     Rational[5, 2]^Rational[1, 2], Rational[281, 8], 5 
     Rational[15, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[105, 2]^Rational[1, 2], 24 2^Rational[1, 2], 3 
     42^Rational[1, 2], Rational[3, 2] 55^Rational[1, 2], Rational[369, 8], 
     27 Rational[5, 2]^Rational[1, 2], Rational[3, 2] 
     Rational[165, 2]^Rational[1, 2], 7 14^Rational[1, 2], Rational[1, 2] 
     105^Rational[1, 2], Rational[469, 8], Rational[581, 8], 24 
     2^Rational[1, 2], 5 110^Rational[1, 2], Rational[1, 2] 
     Rational[2145, 2]^Rational[1, 2], Rational[3, 2] 21^Rational[1, 2], 
     Rational[705, 8], 27 Rational[5, 2]^Rational[1, 2], Rational[3, 2] 
     35^Rational[1, 2], Rational[1, 2] Rational[3003, 2]^Rational[1, 2], 11 
     33^Rational[1, 2], Rational[3, 2] 55^Rational[1, 2], 12 
     39^Rational[1, 2], Rational[3, 2] Rational[455, 2]^Rational[1, 2], 5 
     110^Rational[1, 2], Rational[841, 8], 11 33^Rational[1, 2], 
     Rational[3, 2] Rational[165, 2]^Rational[1, 2], Rational[1365, 2]^
     Rational[1, 2], 13 Rational[91, 2]^Rational[1, 2], Rational[989, 8], 
     Rational[1785, 2]^Rational[1, 2], 7 210^Rational[1, 2], 12 
     39^Rational[1, 2], Rational[1, 2] Rational[2145, 2]^Rational[1, 2], 
     Rational[1149, 8], 13 Rational[91, 2]^Rational[1, 2], 30 
     15^Rational[1, 2], Rational[1, 2] Rational[3003, 2]^Rational[1, 2], 3 
     Rational[255, 2]^Rational[1, 2], Rational[1321, 8], 32 17^Rational[1, 2],
      Rational[1505, 8], 3 Rational[323, 2]^Rational[1, 2], 7 
     210^Rational[1, 2], Rational[3, 2] Rational[455, 2]^Rational[1, 2], 
     Rational[1365, 2]^Rational[1, 2], 51 Rational[17, 2]^Rational[1, 2], 
     Rational[1701, 8], Rational[3, 2] Rational[1615, 2]^Rational[1, 2], 30 
     15^Rational[1, 2], 27 38^Rational[1, 2], Rational[3, 2] 
     Rational[1995, 2]^Rational[1, 2], Rational[1909, 8], 32 
     17^Rational[1, 2], Rational[1785, 2]^Rational[1, 2], 3 
     Rational[255, 2]^Rational[1, 2], 51 Rational[17, 2]^Rational[1, 2], 
     Rational[2129, 8], 19 95^Rational[1, 2], Rational[1, 2] 
     Rational[21945, 2]^Rational[1, 2], Rational[2361, 8], 27 
     38^Rational[1, 2], Rational[1, 2] Rational[26565, 2]^Rational[1, 2], 20 
     105^Rational[1, 2], 3 Rational[323, 2]^Rational[1, 2], 21 
     Rational[231, 2]^Rational[1, 2], Rational[2605, 8], 19 95^Rational[1, 2],
      Rational[3, 2] Rational[1615, 2]^Rational[1, 2], Rational[3, 2] 
     1771^Rational[1, 2], 20 105^Rational[1, 2], 11 506^Rational[1, 2], 
     Rational[3, 2] Rational[1995, 2]^Rational[1, 2], Rational[5, 2] 
     759^Rational[1, 2], Rational[2861, 8], 21 
     Rational[231, 2]^Rational[1, 2], 23 138^Rational[1, 2], Rational[
     3129, 8], Rational[1, 2] Rational[21945, 2]^Rational[1, 2], 
     Rational[5, 2] 897^Rational[1, 2], Rational[45, 2] 13^Rational[1, 2], 
     Rational[3409, 8], Rational[1, 2] Rational[26565, 2]^Rational[1, 2], 120 
     6^Rational[1, 2], 11 506^Rational[1, 2], Rational[3, 2] 
     1771^Rational[1, 2], Rational[3701, 8], Rational[15, 2] 
     Rational[273, 2]^Rational[1, 2], 23 138^Rational[1, 2], 125 
     Rational[13, 2]^Rational[1, 2], Rational[3, 2] 
     Rational[7917, 2]^Rational[1, 2], 39 78^Rational[1, 2], Rational[
     4005, 8], 120 6^Rational[1, 2], Rational[5, 2] 759^Rational[1, 2], 
     Rational[9, 2] Rational[1015, 2]^Rational[1, 2], 81 21^Rational[1, 2], 
     125 Rational[13, 2]^Rational[1, 2], Rational[4321, 8], Rational[5, 2] 
     897^Rational[1, 2], Rational[1, 2] Rational[94395, 2]^Rational[1, 2], 
     Rational[4649, 8], Rational[45, 2] 13^Rational[1, 2], 28 
     203^Rational[1, 2], 39 78^Rational[1, 2], 29 
     Rational[435, 2]^Rational[1, 2], Rational[4989, 8], 13485^Rational[1, 2],
      81 21^Rational[1, 2], Rational[15, 2] Rational[273, 2]^Rational[1, 2], 
     15 930^Rational[1, 2], Rational[5341, 8], 3 1705^Rational[1, 2], 
     Rational[3, 2] Rational[7917, 2]^Rational[1, 2], 28 203^Rational[1, 2], 
     17391^Rational[1, 2], Rational[5705, 8], 62 62^Rational[1, 2], 29 
     Rational[435, 2]^Rational[1, 2], Rational[9, 2] 
     Rational[1015, 2]^Rational[1, 2], 19635^Rational[1, 2], Rational[1, 2] 
     Rational[94395, 2]^Rational[1, 2], 15 930^Rational[1, 2], Rational[
     6081, 8], 64 66^Rational[1, 2], 33 Rational[561, 2]^Rational[1, 2], 
     Rational[3, 2] Rational[19635, 2]^Rational[1, 2], 62 62^Rational[1, 2], 
     Rational[6469, 8], 13485^Rational[1, 2], Rational[6869, 8], 17 
     1190^Rational[1, 2], 3 1705^Rational[1, 2], 64 66^Rational[1, 2], 
     Rational[3, 2] Rational[22015, 2]^Rational[1, 2], 33 
     Rational[561, 2]^Rational[1, 2], Rational[7281, 8], Rational[3, 2] 
     Rational[24605, 2]^Rational[1, 2], 17391^Rational[1, 2], 105 
     35^Rational[1, 2], Rational[7705, 8], 108 37^Rational[1, 2], 
     Rational[3, 2] Rational[27417, 2]^Rational[1, 2], 19635^Rational[1, 2], 
     17 1190^Rational[1, 2], Rational[8141, 8], Rational[3, 2] 
     Rational[19635, 2]^Rational[1, 2], Rational[1, 2] 137085^Rational[1, 2], 
     37 Rational[703, 2]^Rational[1, 2], 105 35^Rational[1, 2], 108 
     37^Rational[1, 2], Rational[1, 2] 151905^Rational[1, 2], 19 
     1482^Rational[1, 2], Rational[8589, 8], Rational[3, 2] 
     Rational[22015, 2]^Rational[1, 2], Rational[3, 2] 18655^Rational[1, 2], 
     Rational[3, 2] Rational[24605, 2]^Rational[1, 2], 39 390^Rational[1, 2], 
     Rational[9049, 8], 37 Rational[703, 2]^Rational[1, 2], Rational[1, 2] 
     185115^Rational[1, 2], 40 410^Rational[1, 2], 19 1482^Rational[1, 2], 
     Rational[9521, 8], Rational[3, 2] Rational[27417, 2]^Rational[1, 2], 41 
     Rational[861, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[407253, 2]^Rational[1, 2], Rational[10005, 8], 39 
     390^Rational[1, 2], Rational[1, 2] 137085^Rational[1, 2], 21 
     1806^Rational[1, 2], Rational[3, 2] Rational[49665, 2]^Rational[1, 2], 
     Rational[10501, 8], Rational[1, 2] 151905^Rational[1, 2], 40 
     410^Rational[1, 2], Rational[11009, 8], Rational[3, 2] 
     18655^Rational[1, 2], Rational[3, 2] Rational[54395, 2]^Rational[1, 2], 
     41 Rational[861, 2]^Rational[1, 2], 43 473^Rational[1, 2], 
     Rational[3, 2] Rational[59455, 2]^Rational[1, 2], 132 55^Rational[1, 2], 
     21 1806^Rational[1, 2], Rational[1, 2] 185115^Rational[1, 2], Rational[
     11529, 8], 43 473^Rational[1, 2], 135 Rational[115, 2]^Rational[1, 2], 
     Rational[12061, 8], 3 Rational[16215, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[407253, 2]^Rational[1, 2], 7 Rational[3243, 2]^Rational[1, 2], 
     Rational[3, 2] Rational[49665, 2]^Rational[1, 2], 132 55^Rational[1, 2], 
     Rational[12605, 8], 23 2162^Rational[1, 2], 94 141^Rational[1, 2], 135 
     Rational[115, 2]^Rational[1, 2], 35 Rational[141, 2]^Rational[1, 2], 
     Rational[13161, 8], Rational[3, 2] Rational[54395, 2]^Rational[1, 2], 23 
     2162^Rational[1, 2], 105 Rational[17, 2]^Rational[1, 2], 672 
     3^Rational[1, 2], Rational[3, 2] Rational[59455, 2]^Rational[1, 2], 
     Rational[13729, 8], Rational[14309, 8], Rational[35, 2] 
     Rational[663, 2]^Rational[1, 2], 1715 2^Rational[-1, 2], 3 
     Rational[16215, 2]^Rational[1, 2], 94 141^Rational[1, 2], Rational[5, 2] 
     Rational[35139, 2]^Rational[1, 2], 672 3^Rational[1, 2], 125 
     102^Rational[1, 2], Rational[14901, 8], 7 
     Rational[3243, 2]^Rational[1, 2], Rational[9, 2] 
     Rational[11713, 2]^Rational[1, 2], Rational[15505, 8], 51 
     663^Rational[1, 2], 35 Rational[141, 2]^Rational[1, 2], 1715 
     2^Rational[-1, 2], 52 689^Rational[1, 2], Rational[3, 2] 
     Rational[113685, 2]^Rational[1, 2], 105 Rational[17, 2]^Rational[1, 2], 
     Rational[16121, 8], 125 102^Rational[1, 2], 159 
     Rational[159, 2]^Rational[1, 2], Rational[16749, 8], Rational[3, 2] 
     61215^Rational[1, 2], 51 663^Rational[1, 2], Rational[35, 2] 
     Rational[663, 2]^Rational[1, 2], Rational[5, 2] 
     Rational[35139, 2]^Rational[1, 2], Rational[9, 2] 7315^Rational[1, 2], 
     81 330^Rational[1, 2], Rational[17389, 8], 52 689^Rational[1, 2], 
     Rational[9, 2] Rational[11713, 2]^Rational[1, 2], Rational[18041, 8], 55 
     770^Rational[1, 2], Rational[1, 2] 636405^Rational[1, 2], 159 
     Rational[159, 2]^Rational[1, 2], 81 330^Rational[1, 2], 56 
     798^Rational[1, 2], Rational[1, 2] 682689^Rational[1, 2], Rational[
     18705, 8], Rational[3, 2] Rational[113685, 2]^Rational[1, 2], 
     Rational[3, 2] 61215^Rational[1, 2], Rational[19381, 8], 57 
     Rational[1653, 2]^Rational[1, 2], Rational[3, 2] 
     Rational[162545, 2]^Rational[1, 2], 55 770^Rational[1, 2], Rational[
     20069, 8], 56 798^Rational[1, 2], Rational[1, 2] 
     Rational[1565565, 2]^Rational[1, 2], 29 3422^Rational[1, 2], 
     Rational[9, 2] 7315^Rational[1, 2], 59 885^Rational[1, 2], 
     Rational[1, 2] 636405^Rational[1, 2], 57 
     Rational[1653, 2]^Rational[1, 2], Rational[20769, 8], Rational[1, 2] 
     Rational[1673535, 2]^Rational[1, 2], 29 3422^Rational[1, 2], Rational[
     21481, 8], 60 915^Rational[1, 2], Rational[3, 2] 
     Rational[198555, 2]^Rational[1, 2], Rational[1, 2] 682689^Rational[1, 2],
      59 885^Rational[1, 2], 61 Rational[1891, 2]^Rational[1, 2], Rational[
     22205, 8], Rational[3, 2] Rational[162545, 2]^Rational[1, 2], 3 
     26474^Rational[1, 2], 60 915^Rational[1, 2], 93 434^Rational[1, 2], 
     Rational[1, 2] Rational[1565565, 2]^Rational[1, 2], 3 
     28210^Rational[1, 2], Rational[22941, 8], Rational[1, 2] 
     Rational[1673535, 2]^Rational[1, 2], 3 30030^Rational[1, 2], 61 
     Rational[1891, 2]^Rational[1, 2], 756 7^Rational[1, 2], Rational[
     23689, 8], 256 65^Rational[1, 2], Rational[3, 2] 
     Rational[198555, 2]^Rational[1, 2], 93 434^Rational[1, 2], Rational[
     24449, 8], 287430^Rational[1, 2], Rational[1, 2] 
     Rational[2443155, 2]^Rational[1, 2], 65 Rational[2145, 2]^Rational[1, 2],
      Rational[25221, 8], 756 7^Rational[1, 2], 3 26474^Rational[1, 2], 3 
     28210^Rational[1, 2], Rational[26005, 8], Rational[3, 2] 
     Rational[288167, 2]^Rational[1, 2], 256 65^Rational[1, 2], 33 
     4422^Rational[1, 2], 3 30030^Rational[1, 2], Rational[26801, 8], 67 
     1139^Rational[1, 2], 65 Rational[2145, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[2750685, 2]^Rational[1, 2], 68 1173^Rational[1, 2], 
     Rational[1, 2] Rational[2914905, 2]^Rational[1, 2], 287430^
     Rational[1, 2], Rational[27609, 8], 33 4422^Rational[1, 2], 
     Rational[3, 2] 171465^Rational[1, 2], 67 1139^Rational[1, 2], 
     Rational[1, 2] Rational[2443155, 2]^Rational[1, 2], Rational[28429, 8], 
     69 Rational[2415, 2]^Rational[1, 2], 35 4970^Rational[1, 2], 
     Rational[3, 2] 181405^Rational[1, 2], Rational[3, 2] 
     Rational[288167, 2]^Rational[1, 2], Rational[29261, 8], 68 
     1173^Rational[1, 2], Rational[30105, 8], Rational[1, 2] 
     Rational[2750685, 2]^Rational[1, 2], 69 Rational[2415, 2]^Rational[1, 2],
      213 142^Rational[1, 2], Rational[3, 2] 191771^Rational[1, 2], Rational[
     30961, 8], Rational[1, 2] Rational[2914905, 2]^Rational[1, 2], 35 
     4970^Rational[1, 2], 216 146^Rational[1, 2], Rational[15, 2] 
     8103^Rational[1, 2], 73 Rational[2701, 2]^Rational[1, 2], Rational[5, 2] 
     Rational[153957, 2]^Rational[1, 2], 213 142^Rational[1, 2], Rational[
     31829, 8], Rational[3, 2] 171465^Rational[1, 2], Rational[3, 2] 
     181405^Rational[1, 2], 216 146^Rational[1, 2], Rational[5, 2] 
     Rational[162393, 2]^Rational[1, 2], Rational[32709, 8], 185 
     222^Rational[1, 2], Rational[15, 2] Rational[19019, 2]^Rational[1, 2], 
     73 Rational[2701, 2]^Rational[1, 2], Rational[3, 2] 
     191771^Rational[1, 2], 375 57^Rational[1, 2], Rational[33601, 8], 
     Rational[34505, 8], 185 222^Rational[1, 2], Rational[1, 2] 
     Rational[4507503, 2]^Rational[1, 2], 76 1463^Rational[1, 2], 
     Rational[15, 2] 8103^Rational[1, 2], Rational[35421, 8], 77 
     Rational[3003, 2]^Rational[1, 2], 375 57^Rational[1, 2], 
     Rational[1186185, 2]^Rational[1, 2], Rational[5, 2] 
     Rational[153957, 2]^Rational[1, 2], 76 1463^Rational[1, 2], 39 
     6162^Rational[1, 2], 9 Rational[15405, 2]^Rational[1, 2], Rational[5, 2] 
     Rational[162393, 2]^Rational[1, 2], Rational[36349, 8], 77 
     Rational[3003, 2]^Rational[1, 2], Rational[15, 2] 
     Rational[19019, 2]^Rational[1, 2], 9 Rational[16195, 2]^Rational[1, 2], 
     158 395^Rational[1, 2], Rational[37289, 8], Rational[1, 2] 
     Rational[4507503, 2]^Rational[1, 2], 9 Rational[17015, 2]^Rational[1, 2],
      1440 5^Rational[1, 2], Rational[38241, 8], 39 6162^Rational[1, 2], 
     Rational[9, 2] Rational[71463, 2]^Rational[1, 2], 729 
     Rational[41, 2]^Rational[1, 2], Rational[1186185, 2]^Rational[1, 2], 158 
     395^Rational[1, 2], Rational[39205, 8], Rational[1, 2] 
     Rational[6074355, 2]^Rational[1, 2], 9 Rational[15405, 2]^Rational[1, 2],
      41 6806^Rational[1, 2], Rational[40181, 8], 1440 5^Rational[1, 2], 729 
     Rational[41, 2]^Rational[1, 2], 83 1743^Rational[1, 2], Rational[1, 2] 
     Rational[6370665, 2]^Rational[1, 2], 9 Rational[16195, 2]^Rational[1, 2],
      Rational[41169, 8], 41 6806^Rational[1, 2], 9 
     Rational[17015, 2]^Rational[1, 2], Rational[3, 2] 
     Rational[741965, 2]^Rational[1, 2], Rational[42169, 8], 84 
     1785^Rational[1, 2], 83 1743^Rational[1, 2], Rational[1, 2] 
     3497835^Rational[1, 2], Rational[43181, 8], 85 
     Rational[3655, 2]^Rational[1, 2], Rational[9, 2] 
     Rational[71463, 2]^Rational[1, 2], Rational[44205, 8], 84 
     1785^Rational[1, 2], Rational[1, 2] Rational[6074355, 2]^Rational[1, 2], 
     43 7482^Rational[1, 2], Rational[1, 2] 3662439^Rational[1, 2], Rational[
     45241, 8], 87 1914^Rational[1, 2], Rational[3, 2] 425865^Rational[1, 2], 
     85 Rational[3655, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[6370665, 2]^Rational[1, 2], 88 1958^Rational[1, 2], 43 
     7482^Rational[1, 2], Rational[3, 2] 445445^Rational[1, 2], 
     Rational[3, 2] Rational[741965, 2]^Rational[1, 2], Rational[46289, 8], 
     Rational[3, 2] Rational[931385, 2]^Rational[1, 2], 267 
     Rational[445, 2]^Rational[1, 2], Rational[1, 2] 3497835^Rational[1, 2], 
     Rational[47349, 8], 87 1914^Rational[1, 2], Rational[1, 2] 
     3662439^Rational[1, 2], 135 910^Rational[1, 2], 88 1958^Rational[1, 2], 
     Rational[48421, 8], Rational[3, 2] Rational[973245, 2]^Rational[1, 2], 
     Rational[49505, 8], Rational[3, 2] 425865^Rational[1, 2], 91 
     2093^Rational[1, 2], 267 Rational[445, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[9148503, 2]^Rational[1, 2], Rational[1, 2] 
     Rational[9550635, 2]^Rational[1, 2], 135 910^Rational[1, 2], Rational[
     50601, 8], Rational[3, 2] 445445^Rational[1, 2], 92 2139^Rational[1, 2], 
     3 138415^Rational[1, 2], Rational[3, 2] 
     Rational[931385, 2]^Rational[1, 2], 91 2093^Rational[1, 2], 93 
     Rational[4371, 2]^Rational[1, 2], Rational[51709, 8], 1299315^
     Rational[1, 2], Rational[52829, 8], 92 2139^Rational[1, 2], 47 
     8930^Rational[1, 2], Rational[3, 2] Rational[973245, 2]^Rational[1, 2], 
     7 27645^Rational[1, 2], Rational[1, 2] 
     Rational[9148503, 2]^Rational[1, 2], Rational[53961, 8], 93 
     Rational[4371, 2]^Rational[1, 2], 190 570^Rational[1, 2], Rational[1, 2] 
     Rational[9550635, 2]^Rational[1, 2], 192 582^Rational[1, 2], Rational[
     55105, 8], 21 3201^Rational[1, 2], 47 8930^Rational[1, 2], 3 
     138415^Rational[1, 2], Rational[56261, 8], 190 570^Rational[1, 2], 679 
     Rational[97, 2]^Rational[1, 2], 1029 22^Rational[1, 2], 1299315^
     Rational[1, 2], Rational[57429, 8], 192 582^Rational[1, 2], 679 
     Rational[97, 2]^Rational[1, 2], 7 27645^Rational[1, 2], Rational[
     58609, 8], 21 3201^Rational[1, 2], 1029 22^Rational[1, 2], Rational[
     59801, 8]}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7747982195334435`*^9, 3.7747982902962017`*^9, 
  3.7747983249286027`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a59cd30d-8188-4c4c-986e-82b892ec5954"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {100, 100}, 7475.125, {1, {CompressedData["

1:eJwlzy8vxAEAgOGf3XYz210gEAgnnEAgEAgEggtsCAQXzm4Ef0YgEAiEEwgn
nEAgnEAgEAgEAoFAYDOz3WaKolwxz+3e7fkAbyw1NzRbEQRBOigXIkwVUWqo
o4FGmmihjQ666KGPBIOMMEaSCaaYYYElVlhjg0222WGXfQ454oQzLrjihjse
eOKFNz4o8M0PvxT5K/2YqyRCNbXUEyNOM62000k3vfQzwDCjjJNikmnmWWSZ
VdbJsEWWHHsckOeYU8655Jpb7nnkmVfe+aTAF/+uljKN
      "], CompressedData["
1:eJwNyGmzgWAAhuHsW7LvZN8poexSJMkeRbZ0fD9/+/yM8848M881d1b/PelG
CIL+DBAEBmn69/P++b507Qn+oWvf18/9/fzor4emfm6Amvq4vu7K8/aWH1f1
9bxfbooqP85X5Xa/SPL5dFWl20U5ng7Xs3y8KHtJ3p1Ph4u03R83ALutKB33
m8NpvdvuxaOwWR92q73Ab8XlarfeiFte4FaL5XrDzzlBXK3Z5UKYMxy/XM0W
LD3nGH7KLmcLbs7QE3Y8nS1G8wlDj2dDdjqiJwNmCFp/0huM6GF/OqbIwWjS
o4bjfrcDGtke9qlujxx0CKrf6rZ7HRInKACMIDtNHOu2Gy2i2cHr7VoDa9Xx
JlFtYbVKo17Gq80GVitV6s1qudgAKNTzQIVapZQrZqvlfKFUyeSy+XK6mCug
mVK+mM6mCkk0k8sDJDJoLp5Mp7KJWCYZRePpVCwRQZPxaDgUS0USyWgwDhQJ
JIJRfzwcCQV8saA/GvZ6fIFQJBj2exF3wBfy+L1BBHb7XAEg2Im4HD6P2454
nbDLYfO4nXYYsbrcNovD7LTCdpfDZLPYjWar02YyOCxGu9VssNhMRqvZYjD9
A3U6Ytc=
      "]}, CompressedData["
1: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
     "]}], {{0, 0}, {
   100, 100}}, {0, 7475.125}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7747982195334435`*^9, 3.7747982902962017`*^9, 
  3.77479832499343*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e235e4d2-50eb-402f-8253-38efb9cfad8f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energies and Wavefunctions", "Section",
 CellChangeTimes->{{3.649159554895357*^9, 3.6491595760233574`*^9}, {
  3.743355282971815*^9, 
  3.743355289690342*^9}},ExpressionUUID->"8826289d-c34c-4fc2-ae04-\
7cc0ec76961d"],

Cell["\<\
First we need to convert our matrix into numbers otherwise Mathematica will \
try to diagonalize the matrix analytically.\
\>", "Text",
 CellChangeTimes->{{3.743355660402194*^9, 
  3.7433557139362946`*^9}},ExpressionUUID->"6499e5c4-f035-4b76-8d4c-\
672d9c1b65f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Run", " ", "this", " ", "cell"}], ",", " ", 
    RowBox[{
    "it", " ", "turns", " ", "your", " ", "matrix", " ", "into", " ", 
     "numbers"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"yourmatrixN", "=", 
    RowBox[{"N", "[", 
     RowBox[{"yourmatrix", ",", "30"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6491598893723574`*^9, 3.649159898072357*^9}, 
   3.7433556513949194`*^9, {3.743355720533992*^9, 3.743355755980486*^9}, {
   3.7438681874841824`*^9, 3.7438681925178843`*^9}, 3.7742743387805552`*^9, {
   3.7742745142984996`*^9, 3.7742745146300144`*^9}, {3.774786189211136*^9, 
   3.774786214560286*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"3a9fffa8-db79-44b8-9b7f-06a452123df1"],

Cell[TextData[{
 "Now extract the last 6 eigenvalues (Mathematica organizes her eigenvalues \
to go from largest to smallest) and multiply by 2 and compare with the \
following result obtained by WKB approximation. (The literature \
(hep-th/9812211 and ref within)studies a Hamiltonian given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["p", "2"], "+", 
    SuperscriptBox["x", "4"]}], TraditionalForm]],ExpressionUUID->
  "49b678e5-5c2c-4259-a52d-460836a0fbda"],
 ", thus our result is off by 2.) Use help to learn about the scope of \
function Eigensystem."
}], "Text",
 CellChangeTimes->{{3.7433557578833284`*^9, 3.743355792170823*^9}, {
   3.7438685526074686`*^9, 3.743868599643194*^9}, 3.743868644019828*^9, {
   3.743870144130973*^9, 3.743870160532404*^9}, {3.7444646952735767`*^9, 
   3.7444647237211175`*^9}, {3.774274438911063*^9, 3.774274457168824*^9}, {
   3.7742747822267523`*^9, 3.774274789497534*^9}, {3.7742768442685633`*^9, 
   3.7742768538485656`*^9}},ExpressionUUID->"9c6a4915-3947-4671-8e40-\
194912825de8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Extract", " ", "last", " ", "six", " ", "eigenvalues", " ", "of", " ", 
    "yourmatrixN", " ", "and", " ", "multiply", " ", "by", " ", "2", " ", 
    "to", " ", "compare", " ", "with", " ", "the", " ", "literature"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"energies", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", "yourmatrixN", "]"}], ",", 
      RowBox[{"-", "6"}]}], "]"}], "2"}]}]}]], "Input",
 CellChangeTimes->{{3.744465626930785*^9, 3.7444656395765004`*^9}, {
   3.77427446263169*^9, 3.774274555156992*^9}, {3.774274652773374*^9, 
   3.774274766452961*^9}, {3.774275049841159*^9, 3.7742750700307994`*^9}, {
   3.7742751685770454`*^9, 3.774275173046012*^9}, {3.7742758220528307`*^9, 
   3.774275863204851*^9}, {3.774275909575241*^9, 3.774275936112553*^9}, {
   3.774275987474868*^9, 3.774276011053179*^9}, {3.774276869262411*^9, 
   3.7742768807646046`*^9}, 3.774277288536232*^9, {3.7747861045545607`*^9, 
   3.7747861076902103`*^9}, {3.7747864361794853`*^9, 3.77478649448855*^9}, 
   3.774786749004801*^9, 3.7747872841051393`*^9, {3.774798519592122*^9, 
   3.7747985780129557`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[39]:=",ExpressionUUID->"88474828-d7ca-4747-853c-d3f45fb42743"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "21.23837291823594067991766068349471790968`30.", ",", 
   "16.26182601885022602030759893786121104151`30.", ",", 
   "11.6447455113781620227839770483071976765293268887748040742867`30.", ",", 
   "7.4556979379867383930661526734631423623523726910692989222768`30.", ",", 
   "3.7996730298013941687971448542924846089151612309156371762511`30.", ",", 
   "1.0603620904841828996494974895660742963333969922510564597181`30."}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7747985748144703`*^9, 3.774798579713373*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"3b6a2e31-04e4-47b6-90b4-f442b2793ca7"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5Gx2UbyoJToOV85IJ80q9jkTS6BI4CvCyHX5uazNlY0JYInXRtr/bmh4MMGt
JYYH32L2OGUJx++D5PyLLM7OM9b6b6T83D4B0z128SPs6tZrvdK+epjpi4vQ
U/MzkpfmcfE5AJ7fJYs0Dw/kttThb+DjlMntrFxpZ90jEDXqXok3Ybzrfedh
iIthJsHswC3SRpzi7ylnPPg7/NBYV8L5Wu4srIQWfwf0m2NHBLrk3yt5bOHj
jPkUX5sa9Z4Oub+MRvh2MNtJ37Wyn5Z9X4pdpbVM9+vJZ87mZ9p5ZmamcxtQ
yml6N57SVNOluvsAe17v9F0iVxW/ONG7TKUNee3XZI/b1rPcORVS5FMm1lQ2
tDuciYi4YY45t9AHm7Zvh+3k2uQo62l8oiyb+FvKmheVwS/mHlLHv0T27bto
OdfBYC3yiHvPyvjIyEuGQ5wnpTw0BkgWFBQWQsH+F8jfdvlcCz2Csv20Hrbl
7of97FmiO+V2aLtPSILB+iM292ZBVbt5b6Ois76bsO87jZs91Svb57bvggJ5
7kHuySiC3gQxI72+S8LKp1Qey7KPtDNGDnK2HrNvpCDPxvlEdozU/IuwbWca
9bCRt9eEmbM4uTyy98jXTcFZz2Zf150F8rieiRNIzgrSWWXOO098iddqkk3T
YIIZp5jvOVr70H4OlGIb8tqvlVhqpJxKusx9St8cEpwLgHwDkRZhuPuO6n9W
UVEBddfbYHjKTVzUZRjrbobqCu2+6rom6B0PJ74NlJgkQ+BXfOWUe6vr5HnN
iG3MC/6+Ufm+63qa1XJeW2HAZZqx0Kg8t6rS0pTvbbQ7dy5deKrXOIwrsV6r
y/W6qYf2gQn3Ptme36V34pFJee7aANXVTDsIzNqfU/1UicPUcJc8D+HbQVC0
RvuU04xHHkNH4zVyz/XGTngccXOOc4ptyGu/ltveSAd/n9u+iSAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgjxvSBBTYlUrsWzG
AxB0PpQaQRAEeQYxx7PZIYqviSAIgjzbSHGIhobI+Wc3beJCIAiCIM845Gz/
Iof4lQiCIMizDIlpdPD9JM7ORBAEQZ4levR4cRjvEEG+GcSjcxBa13PbvwnE
IRQMfUPP0n8eofE4txaeInH6tu0rg36Md4IgCVma6ofLxXs5H4yd+05BQ8eY
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
fSvBuoTCYgppxvXzVqkedFeHXu8Ts766IJX6QRAkPTxtXaDYiX9Ox9ZD4rE1
ez7ZBeVMASkGkUhEeEVjUeip/DGR0e1TCxBVPtdtRbGo+L5IJArR2T+S9YvN
JffUZ0Vsx5/s3ghn31XvaS7qZ2Q72Uh0f3x9HqTNrbzeJ2a9bUTpeycIgniD
6as566gLYpPQVF0CpRWXYdQcX4TEqlX2aYnWjuO8XdtmTYGFWy9IplCMbTrh
OqU0w/i1J3s2tvs0R2r+URsHX78HEZE/0MojUn/KuTwzUmr3iUiLLkiyfRGS
eScIgniEPzssmX2aq6x8GPqb42+1PQB6OnvfNaUjwYcFjEwy3xz+iMosF3u5
lOe9n0dldFLnsk2/k2AszcD5QKWgCxKkaewXuyD0sQIYrKZzpteZ33i9T0Qy
75rHe/siJPNOEARxzUKgC/wdHdDhb4HKwhzOBruvuAZa/Mp3fnn8bhp/S3PQ
7dfOaW65Xk5iCarXi/uh6nqrdoZz95ipz/O2a6suADVGgSFXXzj2Pj0bIfY5
M/YucvR7XAj0yuXyQ2NdCTPe9cHOwkq1TP1TNnHRpHl4oNZHA5QVbOHKVK6U
qXsEoiJ9wvg6uosN5jVNui5xouETZmwtwUjTr8i9ypkLfDa93gcpvOsU2pfn
+kEQxAvhvjdo38rMVM+nMa5Mps/z58ErzEElY4PexNy3ffsmR1lP45VlwYUu
cXzytcgjOE7Sz4a8vJ3kmRn7zPtmrYzU/Iswb6RMGy+KbRTy+D5bVB/6ef+2
dpFV07wgmUFv0mkuQydZA5H1W0EBFwP0TPNnNmcueL3P+7v23r5SqR8EQZ4t
lmGsuxmqKyqgQr6q65qgdzz8tDNly3T3TSgtrYDm/ieTx2hwSB6nV6l1U1Fd
DQ0dgxByMR/xeh+CIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIIh34hAKhmziY3xD
ic9Aa/VRyNRjZOScfBeGB9rh+rVOcZzYZwwpOgqV+5W4JDeSikcbHm6HsgI2
blU2nKy9Bw4h1BOwCH2N57hYK5u27YeSujaYcZOx+Bx01p3h7t+27xS0j9vE
M+OQYMz/pnrP1dG/usqtVn4m5lZmNhwrb4LRkHM85qWpXj7eV2Ym5OWXwZ3h
WVfpeimn5V1t2uW+XlWeXP0Y5WNj023LOw4NghhqBqsTv1fbX0ldKwxPhSAW
j4MkSRCPRSE4PiT37xOOsee814/3Npt8O1iGprwNkLGvDJofjEAoGoO4XEZJ
ikM0EoTh7mY4lavEhP7EPlG5btvqTljazp3AQsJyDrbUwv7tL3J1dFJ9nyvC
O4y4qDml9dD9YAAC4+Mw7nRNLVj0RiptKNlyroX/SGJTld/5AkLy+znOyLak
4hb+vaD0EbmvRIKj0Cb3EUMHKvFo3cnxeWgqfonUUXljp/qee5peS/I5DNFP
Sb1vza+ERn8L1BTv5eIj2sVDU6Bx03yQId/fPjAG44EuKNNjc10assbA0mRF
BCYeKH0oI4l4WcvQVvYD7ff7zkJz9yAEAgPQJI8njGecuPOV8M6R+l+Reiup
a4KWxio+fmSC+G3JlzMOnWX/qj//FVmejsDU1BA0le4h+bgdFPerp1E/K9O3
Sfy7k7JcHwgEYKC7AY4bMda2noXHgvpZYeIx2145onbpvX5SabPe2gETO9rh
sns/K+O3qX7ddx4GxqdgrOcS6f8Hr30mLufCfTik/yZflsPDcl8PyG3iOJPf
o4J7wz2/SfxOuOs/mPeTQhvyUs7Vz0m82hPt9J0t9f27nt5hx/i6f698VvlP
4nchy/DEqm8Oaoz2mHOea68j9b8gz3I7djSeWaa2q93QbopJvDDyNtVVNjI9
3Pc78v259j/RL5YekTasxGLkyrbyiHuum75kMFb/Ey0tQT9fC90nbepqgC+L
0TdeLv/YVM/zUF/wvQQyy1s5Z9v+jbZl08ul3xXBpHlA9hTqh/THredhxtLv
JOi7/FO9jDcs9ZNIF2TkXxE8M4X6SaHNem8Hy3DDURdkQe0D8ZxibfYDkicl
njib7srY2+QZZ7r+bCmnEev0Nct3XzOxyK33jl3+YVK64Ggzle1e25DXcvYZ
4wFTzNYFQ5+JYrQ/A0Tl+cDAwLA8JwvJ5VuEeiMufUJdQGOpW/XkItRs19qj
+g773ceinW37pXrPkfa/iL9v/SXTZk7DDPPdWvgj8u73XPuCu29l5Lfq5+r3
Wy7y/UpahMDAAAwHxuW59hrXThxlnS6vNp64Z/uTpZG31OdsLmfn6jP6GLJI
7l0ivmbmo/zYxHM5mbHOa+3mfszmSbErmMZKT7x+ACbU/p8Fd0N2dy7q4+Js
6DUpA5q/bBITOXNTNuQX10DXuI1dIIX68d5mU2kHhi7IgtzcbXp7yIJtOw9B
VWMPRGyF1SIzn3hFOL7tq/ixIK8yC39gbHW7LfU+Zuhn5Z2f/JjLa1Oedk/1
9Ubw+zugw++X/8tcHd3QdEp/9rEPqaz13IY8llNOz7ANmeWWoSMONP/J/Khn
EGbemUAXrE2/R977ngbz/EyCHjLXlttMxG36rH5R5n2COl9hY8xnw93Imv5F
HFoLjM8Pw2PT2E2x/xnteHP5Q8dcsONKJ1lnyGSzHON/pMsYRi6z4xXFzmEd
Z8rzKmYctaHkHvONt3KGO39t24dJmjU/EssAE+tdP7QdWOU8y4Q+Xrxg6rNa
/nbDaBLre97rx3ubTa0dLMMVebz1Uu0X1pscWGXnTDbjW229xZjH0Dm9eb51
KcDP943xu8/yPufgrCpD7e26yjxIszHw40qvbchrOVeJXDO3PWPu54ObUwnW
J54JmHmnoy6Q23/ht0nf6bfpO7FoFGJJTaYW1fZN25PIPsLPjQ05wPYr2/Wy
eAyi0cSWL7eybkUfj4jmpwZrs3rbOvgRWQszxu5OaXD9zkaPuC8nI69y7N8r
7T9ZcDu4ZvOr9a8fbkyS/67NepMEH+o68Zapb2r5S2Z9L5X68d5mU2kHRBeY
53AJWOh7gzxvR634Xva9KeN78l6kGbIWpeiuGZPuYvXW5hJmvLX6qdpmL43/
zTZffZXf12WySa97bENey0k/O82XT54TZerjr0n5z2lZ7+1IUg//feFSF6w8
ouMch76TPBK0Had9Y0OJaPy+yK2ZGf2Hjtms45VkcSvruHrwKWtmDy11YcxD
WbuDIs+pDMiCLsG8iZMTjAzwVk46pnF6r2y5zXYpu9+tR/0osOX0bSuC3qDJ
P0Xum9qzz1rsK4YuGHLdMFOpH+9tNpV24FUXsPVqsQXqsDZIiz0VlKFGXOAb
Guf03ble3l4WDQZt69XOTqjisQ15Lefq9Du6XLvBzSWIPeng+6DU/Xn530cs
aybPEu50ATdWkesssjQKlXkb6WebdkFV86A3HSHNwQN/C7T4+2BONKdYus/Y
LOXxWWgNzD4VlwJhmPC/ya3Z7TxWA/1meeKifM5ro6y9Rr8yiqBrSktn0GF9
cyHQCy0tLdBrY78erKBtmY7NPJaTtVG4fK9OMuZJ1A/pk8x1sPaelvcFhzVn
oDaiIXleOtJSC4dyc2H79u2wM+84VLX0WcftqdaPpzar4a0dKGi6YMe1LyAa
6oea4nzIlcu4TS7rsdLL0DslHkOzNn07Gcmunbgd6y0N0jG2IhNc+w7Kaam+
Di+ct1kz8daGvJdzHio3+dSxRPO4nIY0D22VP+aetZD0vPPvEXe6YJVZO1R8
vdV2nnMehoILEAn2c/NIkc9fKhjrdIYunzfnW35HhYe2qv8u949AJBqBQcO/
Vb7O2PiesbiXdcDJJdGVU/K+hz0W/JohHWN5LKc8Ryd5dCnrbPsPPLn6Gaz+
qe19iqxvtrEZsGvbiuxV/JyHhx9o+2bUzw5DLyOP010/ZsRt1g127UCBtztp
PsXD0NdyjtGdDy3jd3aeYVcGXg/b+09K8bi6Z2Oi4wIZj2Tsu2KxHdlj2Jp5
/WjBQxtKpZyKb9Ih1qdX/q5rfBhq8uhnR5759WN3umCi6VX1N2Q8mm8aB6x9
SdtwUm0/AdIk1zeIbTH+pe5HmUW+u2qyO04zvhzn+sX+HgZJyTo1XzO635TP
4nt500ZeOcHmlfMl9FrOp6kLFFKon9kebU+bL5O/T1kPtNMhRA7kmP3yed8S
YkNaT11g12ZdYNsOVJbJOoXZ13KJsYPvMdnKObtUjng/abiT3Qsg3pNnXusw
9G5/xEGmmyD+J3s/SOyjmWQbSr2cEkQjIYhEoow+1T4LRZ7pCYGOO13Azr+U
67bA72+B7Muw89FLHna+fKCBWbfh/DTk6+jHgruNuZ98ZVhtzCzJyrqlwG3H
ccsewfjM/mH3mbIU8X7uXsvpQdYdsPiGiX+3vvUjz88r9gjuMXShaXyvszp7
Fwrza4R+ORCma+9kfTPN9cNi22YT4dQOVOLQU30EqoTrOqxvR7bJjy+R38cy
XPSxMtdmf7YUg0goIs9HoxCZ6udsxCca3OhJCdoKv+NaPiTfhtJUzucWd7qA
9RewG/fz6zKpry8vDf6Wee+mtmaSkeZ1Kw25bRT/gMqwIft112Rk3bT/dTLO
VOVSbBLqCzdb2qqdLwPPPN27J8s5S/v1Ws6nOC/wXD/xSWJrNPr5dPcl7iwK
y/jeFcw6seF3vk7zAsc260iCduACdsxr8XdZYcq79wbTfyXoq/4Zuc/wm3Fn
553n1rLM+14skDWULLibwOfccxtal3I+L7jTBUvM/PCFox+Kx3TsuozvtHiM
5hLF59d5bzw798+CWzbnBLDzmSN3UveTWZ0w7I27LT4g4YGb/Bg+ga+8Ms4z
xkn2/d9jOZ+SLvBeP8beJGU/rskvJz4DTcU7OBmQaL8ID2tnz9L8UddBFyRu
s3a4aQeJ4fzrD75vtcFEP4cyox5ePAylFaVwaJf2d62/he5dT8JPkPXRTNTe
p3U7c6I5esp9bB3K+XyQvB+R7R4Qtn+lMv9aoHPlE812Yw22f9vvFWJlZOp+
MnF4V0/zdeH4HFT/kst5G8iznPw0ic9axmmBPcDAYznZ+YRDm0+vLvBeP2QP
0Avnbdeawg9YuUP3fi0FbkFB3k7YmV8JQ1GR7drk66/kP831467NinHXDhah
teIo5Obmwhn5+aJhFr8vwe5MMAmmhtuhrroCSktLobyuCUYjih2f7sEy10c0
otiFbAbQXJ93au8zdG5mY8vXSFcfS76ciAefUoH/sUo6dEHsc6K3L/Vaz0Zp
rWrUz5UR9G8BrvzMwKWsI+vjicpGz3Cx0z9jxhhp3xWYM3XshYFbcI2sDXot
5zxZd3M6K5D1D3NaX1/v+jHWTBONvRd63jC1rziZT9jXt6gO01g/rtusFbft
gN0va+fb6E4X2JWT3kvPFGDnKzYy16QLXrLZC7kWZvdLOrzjNPYxEeJyIhou
95qxfkJ2+pTz2bbRF05IdOwg9DXRz0u7qu9lnG79OXmvl2zWAkYYGWk+t4B7
tBtZR/bAZCWw/ShnJWh9fI9gn+KsYde12V87WPnPcv29Q+b4XstJ1zBfgSEb
WUTm7eo5QCnuO06hfox9QuJ9WwzG2QNkzYDfAyzeF8rIfcamkJb6SbLNsiTT
Dngfnt3C/LJrFWYbmhSbgW6/H7oHpoVzCnpOD2NzMcl54Xje9Bu7NQPX86sU
+5inciI6jC5IMGciZ/nZzOO5scsx05pCbBKaqkugtOKyPFcTyRzjjLxsuG1z
9oe2x5zZW8qcm3WmSzRmi/N2Yruzh8GtDWReH4tkJ1z7Msbp5mcZvn9bSj60
8ambV/c3cmMdj+Vk13jE+5WX6bmEDrYZhfWunyX9/IDN3Pk7AlbpOTRGMxip
+UdNJly/J443IssXuv5MzxlIvX48tFkw0k6yHZBzYw/bnrU3qJ/poFz82hg9
u0NYVmadjztfjh3/2elp0x5hO/+M2c5/I79xnvul0sc8lhPR4c+mc1pWJ2eA
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
    "], {{0, 302}, {387, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{133., Automatic},
  ImageSizeRaw->{387, 302},
  PlotRange->{{0, 387}, {0, 302}}]], "Text",
 CellChangeTimes->{{3.649007656458714*^9, 3.649007659480236*^9}, {
  3.743355817868823*^9, 
  3.7433558227142973`*^9}},ExpressionUUID->"372d3148-0e1d-4f57-8b11-\
a2bab64bd603"],

Cell["\<\
In order to draw the wavefunctions, we need the eigenvectors too, and make \
use of the set of given wavefunctions of harmonic oscillator given before, \
(again, n-1 due to ground state is |1\[RightAngleBracket]) \
\>", "Text",
 CellChangeTimes->{{3.7433558390287437`*^9, 3.7433559064894304`*^9}, {
  3.7433561194497013`*^9, 3.743356150083968*^9}, {3.774276030441061*^9, 
  3.7742760410812855`*^9}},ExpressionUUID->"b9f4a036-839b-4ca5-8fc1-\
2e2554749ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Run", " ", "this", " ", 
    RowBox[{"cell", ".", " ", "It"}], " ", "implements", " ", "all", " ", 
    "the", " ", "wavefunctions", " ", "for", " ", "the", " ", "harmonic", " ", 
    RowBox[{"oscillator", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"n_", ",", " ", "x_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"-", 
          SuperscriptBox["x", "2"]}], "2"]], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"n", "-", "1"}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "!"}], 
         SqrtBox["\[Pi]"]}]]], 
      RowBox[{"HermiteH", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", "x"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listofwavefunction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"i", ",", " ", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "size"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7433559546563416`*^9, 3.743355993994186*^9}, {
  3.743356037327498*^9, 3.7433561151219497`*^9}, {3.774274995959707*^9, 
  3.7742750365933533`*^9}, {3.774275079217164*^9, 3.774275095422842*^9}, {
  3.774275182412675*^9, 3.7742751835300026`*^9}, {3.774786027619274*^9, 
  3.774786068888963*^9}, {3.774786449400133*^9, 3.774786449758168*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"7bfc7168-a590-4a07-9d6c-522fc59f0ffe"],

Cell["\<\
Now build the six new wavefunctions for the anharmonic oscillator and shifted \
by the eigenvalues so we can view all of them on the same plot together with \
the potential. Try to use Matrix multiplication to get all the new \
wavefunctions at once. \
\>", "Text",
 CellChangeTimes->{{3.743356212984456*^9, 3.74335627832159*^9}, {
  3.774276058212284*^9, 3.774276065346834*^9}, {3.7742765865487227`*^9, 
  3.774276611014469*^9}},ExpressionUUID->"f9324c60-fda6-4f40-afd0-\
01630635234a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenguys", "=", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", 
    RowBox[{"yourmatrixN", ",", 
     RowBox[{"-", "6"}]}], "]"}], ".", "listofwavefunction"}]}]], "Input",
 CellChangeTimes->{{3.7747988139550695`*^9, 3.774798898456135*^9}, 
   3.774798968773172*^9, {3.7747991193974376`*^9, 3.7747991424488034`*^9}, {
   3.774799182512637*^9, 3.7747991837064457`*^9}, {3.7747992156420584`*^9, 
   3.7747992771226735`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"879ef416-2b74-48e1-b67b-308436b487f5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{
            "0.7450984712010722152258900908158395041164689124196435485947`29.\
69897000433602", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["x", "2"], "2"]}]]}], "+", 
            TemplateBox[{"150"},
             "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{
            "5.438328606766825161925037700364627244648027968378791926`29.\
69897000433602*^-137", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["x", "2"], "2"]}]], " ", 
             RowBox[{"(", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], ")"}]}]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{85., {4., 12.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 53, 23757432822204231719, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{84., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 53, 23757432822204231719, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{63., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 53, 23757432822204231719, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23757432822204231719 === $SessionID, 
   Out[53], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.774799223423277*^9, {3.7747992544074073`*^9, 3.774799277823797*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"db174c86-dd33-4094-a74f-62c71599cbfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "eigenguys", "]"}]], "Input",
 CellChangeTimes->{{3.774799185739012*^9, 3.774799191573411*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"6762980e-92c6-49fd-8e6e-149643f638d7"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.774799192128925*^9, 3.7747992262277527`*^9, {3.7747992570523367`*^9, 
   3.774799280241335*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"4ff93fb0-e846-4dd2-8fd3-dfe16e622c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Insert", " ", "your", " ", "new", " ", "wavefunctions", " ", 
    RowBox[{"(", 
     RowBox[{"shifted", " ", "by", " ", "the", " ", "eigenvalues"}], ")"}], 
    " ", "here"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"newwavefuns", "=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"yourmatrixN", ",", 
      RowBox[{"-", "6"}]}], "]"}], ".", "listofwavefunction"}]}]}]], "Input",
 CellChangeTimes->{{3.7433562864300575`*^9, 3.7433562962493353`*^9}, {
   3.774274868736585*^9, 3.7742749531492147`*^9}, {3.7742751934742193`*^9, 
   3.774275227250473*^9}, {3.7742752896511793`*^9, 3.774275301791936*^9}, {
   3.77427540475179*^9, 3.7742754080927706`*^9}, {3.774275438289531*^9, 
   3.7742754646805067`*^9}, {3.7742761008123264`*^9, 
   3.7742761018309326`*^9}, {3.774276137361808*^9, 3.7742761614703765`*^9}, {
   3.7742764553608*^9, 3.774276487465678*^9}, 3.774276539510793*^9, {
   3.774276634959666*^9, 3.7742766353138237`*^9}, {3.774276678697107*^9, 
   3.7742766851028123`*^9}, 3.7742772986292753`*^9, {3.774786113257288*^9, 
   3.7747861283459506`*^9}, {3.774786516104743*^9, 3.774786591516981*^9}, {
   3.7747866598392487`*^9, 3.7747866745050316`*^9}, 3.774786740904423*^9, {
   3.7747872791344357`*^9, 3.7747872792860513`*^9}, {3.77479898720185*^9, 
   3.774799025699916*^9}, {3.774799293448024*^9, 3.774799295722992*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[55]:=",ExpressionUUID->"f15a1fa6-9880-43ff-92ee-5255a42d4e7b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{
            "0.7450984712010722152258900908158395041164689124196435485947`29.\
69897000433602", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["x", "2"], "2"]}]]}], "+", 
            TemplateBox[{"150"},
             "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{
            "5.438328606766825161925037700364627244648027968378791926`29.\
69897000433602*^-137", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["x", "2"], "2"]}]], " ", 
             RowBox[{"(", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], ")"}]}]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{85., {4., 12.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 23757432822204231719, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{84., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 23757432822204231719, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{63., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 23757432822204231719, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23757432822204231719 === $SessionID, 
   Out[55], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7747992968090353`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3fbb9b42-ea09-487a-983a-3dede72f7547"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Display", " ", "the", " ", "plots", " ", "of", " ", "your", " ", "new", 
     " ", "wavefunctions", " ", "together", " ", "with", " ", "the", " ", 
     "potential"}], ",", " ", 
    RowBox[{
    "the", " ", "range", " ", "of", " ", "x", " ", "is", " ", "chosen", " ", 
     "for", " ", "viewing", " ", 
     RowBox[{"convenience", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["x", "4"], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot2", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{"newwavefuns", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"plot1", ",", "plot2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7742754143916464`*^9, 3.7742754327666144`*^9}, {
   3.7742754710788403`*^9, 3.7742754812697277`*^9}, {3.7742761680108705`*^9, 
   3.7742761801560383`*^9}, {3.7742762140859547`*^9, 3.774276239828957*^9}, {
   3.7742766399871798`*^9, 3.774276670757934*^9}, {3.774276713322096*^9, 
   3.7742767294153423`*^9}, 3.7742773026442175`*^9, {3.7747866791127195`*^9, 
   3.7747867203204713`*^9}, {3.7747872773512*^9, 3.7747872783904667`*^9}, {
   3.7747993107657194`*^9, 3.7747993302526164`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[59]:=",ExpressionUUID->"cdba6104-bc79-4b1e-898a-3fbb531f6d20"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rA==
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmnk0VW8Xx5FMDSoikhJKomSoVGwZy5Q5lEKkUQOJjEUlCaVQGkxJqKRC
GjYyFjLPwx3OveYh3HtN6T2/td5/7l2f9T1nPc/e+7v3Oc9aR8b1gpU7DxcX
VyL589+/477Ie48fcxcteVK3x3BpCSw8ogi1xHEX+VYZKS/bVAIpY+rhqx5y
F2VHqIaNQAkMpHTfuBvFXfTup8bFWa8S8BXc7hsYyl3k+K39jUF3CcS31Lu6
nOcu8gxmPU/7+AOaLorv3rKfu8imXDfkgU8ZHHqZQivo5yq6WOVZwm9UBY61
fV2fGVxFjEmXK7TTVXCSo9RaSOMqEux0SeiIrIKgg/m/vnZxFQ2ISvDJNlbB
25FfH4vquIruVRnbiLj8hKU7WbcqC7iKbDe4HPa48Qsqy422toVzFVkfKNnp
11EDuv3DXhwFriLfCG9TAc96CL8lqtIytIAgcljr76MWOKh39/OPyL8o159x
Np63C/g+nv4yJjyPPzF0fHycAhHl/KKuQvOYnpt/InCOAsvaX55r4p1HKadi
i8V8VBBdoK77PDOHXbHth/jXUkHmgGPIDfocagX0EPX6VNjXZWywOn8OZ17U
ul+Kp4IXr9LvPcfmkDvRScZ+Nw3YYj83v7Gfwwnv2xtVdGlwbcupkPXWc8jT
lG/CbUqDEPO0HbwH5jDe3P1n1HEaRCVIPazZMYehV2PdbW7RIFNpmYPz4jmc
THx91q+BBhSbUdrN7FncVPGwN82NDup8nhrX02fRI5oqvMeTDrfzR24HJM1i
zCfhk6VX6bBNckTJ6+EsLuLW2VgQQQf/3iEf54BZ1G53U5bIoYPYmQGhvaaz
uCR6YVv2NB1MggnV8aEZtL3K43s2hIDnKm43hxgziOKFSj7hBExQ6a3M3hlU
0lBbuBxDQII+PaC7cQa1Nd7G6yYRwBSklf/8MoMB1r4Cu5CAkIe9ji/vziB0
tUk5zxKQ97rjhuPWGdSIzpUSdmeAnMnx0UvyJJ9ZbSlylgEPhukOd9bPYAT7
nA3/JQZc2D6iUiAyg8XLhL2+BzBA4dO/ntXz0yj0nLv4ZCwDEovk9tZXT+Pd
9grHe98YIOT6Or2/fBrLyk5lhZUwwHfRtlVcxdN4Li826EwFA2wMdw1s+zSN
hX8rjnDXM2B59cH4yGfTqLo4vMiBzoCQVs9JI89pPNpiNpjKy4RR38ljx09N
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
z75X4NLWH/h9J3wNOTiE9KBrjiVRP1C0bW3d6I4hDI8aGVtiW4pFks2cnzxD
aJlhY6hIKUOxJCOj0LRBfMHlvkJ4vBJLMpWYk30DeKJnNOPIRC1KFrFlmz37
celp2zQHlWY01F0V3HqiH6PD4hbvcmjGy6XKHe32/bg8f3iYc70ZqyrdYnp0
+5HT5+Ip29iMvvUN831i/fiopWnzWu8WbKa9bZ793odqxdqGTjmtGLPY4/YG
4T7U1JGMyV3RgV9v36Bt5O3DHze2qcdrdGC/4HMt+RkmGr3YmWXv2IGwvHly
C52JjOR0w0upHTgqpuesls/ECNHk7Em1TjRVWK9peJyJ3RoCiSvNu5DfpHXw
7DsGGuRd33LcvQcbhPI0Q1IZ2PZem18jvAef/3wY/jCegVlx4pc6Mntwp7HV
pm/BDHQqzVwcO9aDbgdrXJZbMLC3aELok08vFhn9aMsZJ7ByYIN8uRYFI/lT
NpcRBB56634pyYyChytCfNrbCNT2Dq11dqLgqKG2KE8xgd07fK1jAygoZfj5
kPV9Ao+pPy78+pmCfvrvylk7COw0V5Rcsp2K+rxRq4U2Edh1SDxpjxYVV5Se
c5OWJPCbZXamuQkVM/QUeYx4CFzLlT4u60HFFt2XWgkNdNRMOvct5BkVVfcn
ftzjRccoZl/7GC8Nh7RupwR/pOH+8MKgld9puHt7rO7x1zRcunhSeaqChmEb
XtC0n9NQc7Tg3dd6Gkotyt+4cJuGUfp8EwsEDc0rmSkBR2h4esxnyFCIjrlW
hql+PDT8KzU023aIjgt6VnoOHCr6Oe67ssqejiYax+i7h6nIjPcdU3GmIyHu
IzvdTEXeF7s+Sl2ko1j3y1Sf11S8Ktqz520UHa95LE7zsqDiZ+8lT9+V07Hc
fqW+tQEVhbbGN6nV0FHEeB2huoeKG09nOT9tpGO2kobchCwVPbWzzCQpdOz5
45Z2kUPBeV9H/0oOHRXpF/Uthinoe+/0Ic+/dLzaFEBsp1JwuXPI9mkybyvy
H8qN/aSgfRZ7In8ZgboBpWnnn1PQ84tEJlOGwKjzdfpmsRT0OePGlU3WofNY
F6EUTsEBSwV5260Eeu+fkhu+REHvcbPvVuoEpvPJvTxjQMHiGa0rs/oETnC2
GxjvoeBVPo+w7gMEwsBexpbtFEyOvLktzZTAtl/W8gNrKHh/mrKvy5pA0Y38
Jr/bevHm3ZQstjOBI8EvL+cW9eKnr8fr1N0ILO/We/IooxcVBvXOW3oQePVx
yMAR315Udt84I3+eQAuO9Epw7sVvNL/u7gsEKth+273xQC8+qcuV875MYMeK
2dv94r3kHBit3HuVwFzPhHe//vXgcOvKdef9CLxbvbP1bV8P2srblQT4E+im
2Lxw/3cPGta3fTwTSOC+cK9NV/J78Ne5sfGdwQSuZq40t3/RgxPCCl7UEAJH
9XKu7L3dgyedD+4+c4Pcb7L5M+kLPfgw3kqrPpTAF/+GS7kP92BQuH+w2E0C
fZ3uDhPaPbjkpfq85i1y/1+2iFZu6sFliza/33ubwC0SlXuzlvdgsbP607Xh
BPJcPXkiit2NfFuufmknuaOJ9+6lnm5ce1V3mc8dAj+opubalHfjjMTGmHGS
I2P2d+x6242m8R26ByPIeEZ7udfGdeM/5dNyISRrmQZtWQjsxqNti9QfkSyW
KWVJde9GipnEpXCSR/m/+JaadWMor2WnA8kV7g5JrzS6MX/H3cuCJCf94FRE
rOvGPz8pO+PJ9Xxl4sbOL+7GupupCotItgxWF7cc6cK+VqcDZuR+FbsbtNWb
u3AJuyHuChnfor2XTop/60KrxgXRADL+rgThqNm0LkxaL1bqTObnI/vNp+7I
LmwyuPVSNozAezam3UXeXRh6mlVYSub3ZO4gb9rRLnR20+XTv07OmRV3lG7r
d+H2H2F3ksn6jP8q8zcT7cIdxif2c8h6Vm5xS1WZ78Qbgwf9x8h6J9/m+SVC
dOLulkJOGekHKz2Q7PjQidznoGyZF4Fbk7v3f0vsxD5/13XBFwnk/ed/Oim0
E+lx28prSb99KiwoOGndiRavzSUFT5H9suYw5eDeTvyq7lM7Sfr1pA+LX1m2
E9cTI8RXFwLXqKoenpwg53gY1XTQkdxfdF1QS0cHVhhOZZgfJrBqxDP9c0kH
mn0JC7hP9sO111ms4AcdeOFmfnKuCYHW/MbrTlzrwLOluf9ijAhUcu/XN3Tt
wFte3SNmeuRc3SD/cKlqBxZadT06sYdAnYTnqo/r29H5eVDPAtm/YXkW34c/
t6PCIqOxQbK/q5p4jHVS2nEAchfypMj4V3q49F1uR3WrN5pjK0m/RGyP0RBt
R7/1m5ZRZ+mYkUFde2e+DUuIiIWaKTqOlMe+6iLaUOyRkXriKB19Fk1/D/3U
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
KdtVcm/DlhL8//eZOv//PhP/BxAKcfs=
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
orh+8laChZoDE9RF/TBY/F0oFCo4jRzqlTfZxJD/d/8lDtlqTyMDp8+7Gqsx
aAedfaz900igoDPvaj0GzQFdzx4dmkYPiyx/8rdgULN8zZFys2l04VmoO6Uf
g1zh+/myZ6dRyJqRIQ0WBk82n380ET6N3jQdDgqQxCF4aDkzKGYarUdDUXKb
cAh8naK7JWEa+SQNnM2TwcFXcYCwTJtGWHWvbaoyDufUjjkVlU+jaa3u/Kp9
OOge1NIMHJtGsmp/1eYdcJBe3eSzNDmNXKUNXIMdcViknyv040yjn1im/DIX
HODBM50bS9OIoZxJbXbHgdpIoIvr2KhGp+lIpg8OMklPAsak2EgnmEeo/AYO
lCvyVW4ybCT5N8v98y0cKsWOG7qostEo1Xpl1D0c9E7mmtkeYqNr77mW95/g
IKd2JKzdkI0ST/mf2RCGA+/S8HcLMzZ6Z8uvlhyBQ1XK2uOmdmwUdEVwyT8G
B4NfVxyoXmwU88J92aMkHBTKBRI+e7PRGcfxY2+TceALSx7Y58tG1w+suZ6b
gkPNzhZnrftspCVmcPpVGg6GNzXcVJ6z0dkFAaXqDzhsNa179y6JjaZnekrd
P+LAv9l5TCGVjfq4c6Z/c3Coo4Vd3PKRjUo8NW7O5eGQHrU1OzGfjTTiWdKn
C3AIOVcxtaGUjd7K2XUWF+JgLDDpLV5D1vNOIuRgCQ7b+oLyI+vZSGAkLux8
KQ4CWZtnRFrY6NSoSGlwGQ6jdwr2hHay0e6ywtUx5Th8O3b0pmA/G6He3mfP
PuOQIYuVBtPZKFu9zTyoAofHhN/fZTjJQoL67oDDkbgs/0UWG00eUGAt0nBQ
OW9QeXuGjcyKlfLzK3EQ2j/A+2eBjcYn3n09+QWHX6t8DK7zEGiF5wlNDskN
gyuDCX4CUfuXzd+pwiEr503dlVUEuvH3htwfkkMD9wtOriVQ6tPnua7VOFy0
bj9yQZJATw1P5FSRbLb1QujoJgJdqy+VFavBYfscb7OrHIFiE+pXWZO8qv7F
6hElAuWIpN8IJnkiYZflaTUCWeve88ggudGrPurHLgLpLoaRYSDvj850nNhL
IL9maW7t/857186v6zlIoKTmkJf/G784Emlno0+gzJzd2HuSjxYoP28zJtCm
rPi2oP+dz44O0WvNCRTjI+tvTvKljbHbyqwJlK2VZc9P8l1zsysfTxCo8uUn
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
E/0fGhT/3Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
MD6dO2KUiv//nkr7//dU/B8mddX+
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3/016f/vr/8HQgOXZg==
       "]]},
     Annotation[#, "Charting`Private`Tag$8976#6"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.2, 2.2}, {-0.740429581197378, 0.7929383916245758}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7747993024150467`*^9, 3.774799339263523*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"b6265652-2b7a-4f1b-b3dd-fd952e2f7a77"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$8929#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwtm3lcjO/3/9tVqJAktJBUQrRQ0UneFIUkFEJUQrRq0yotKhSJkoRKFCEq
pDPtoX3fZ+aembQ3bdpm6nt/Hr/fX/fj+bjv+7rOeZ1zrvucP26Fi07mdnw8
PDyO/Dw8/7ue3h11Lz6elxITmd7pLdUK849pos1xvJQ/xIEfxtta4dWIZvjy
WF5KPU8crjNuhb5XXbcj7/NSWDlb0tu8W8FLZJuXXzAvRSjs4HhsVys8aa67
aHOdl5Ij9OXadGobNDqv2qWyl5fysf/8LWudDjia+orI6+WhlIup6CrZdMPp
6r+d31g8FC0XsVsWvt1gP6XW8p3gofDd5gr6PekG/4O5f/I7eSjiaw6N/6jq
hg9Df75QankoEYmlg306VFiiPRlakcdDEXlwMd9OmAYVZUabW8N5KD3fKvvO
d9CgcSRqY1sID+UqvdTDqpcGNOl6ufbbPJR/b/MqTSZpMHX1rGSnLw8l/QAT
ZMTpoCTuwqU681CQUadx2pAOIacSav5a8lDqrzwK3P+GDoa9g25TyjwUtR9L
jAquEPDB2s9wsxIPJVJSVJDiToBMw9Jl5zfwUE5f+HY4N4CAsZ9bP5St46Fc
erJvPuQxAa8eOfc+Xs5DueUBx5MpBAj6935zmF7ADY9d7TMlGRC6eSqSSFrA
PgfFq3uyGXBOSlrlUPwCyphkOnzKZ4A2r07Zp0cL6OhW2SFVxoCeZh+eoPAF
fCQslPi1lQEHbs+7y7kuII39u0+fy4BFbYLnzu5fQM+esIFL+5gQHiqp3jww
jwrBW/8uK2bCLRvdHqueedRt2jZ89DcTbuy+kNhFm0fCZmiJbx0TLMYyhFlN
83jY3lo6icoE+XP76OM4j6k8AquF5piQp+X6cFnsPDb1XfUz2cqCDImnxo/v
z+P7Gfmes5osSBr4OS99dx51HtWHndZlwZ2XItfk/eexgv6KR+YAC8yWvty3
zWEeJ4zPPU47y4JeZs2E6e55lM4/NdUZwoIOnHxXqz2P2T5u5ikRLKhOWGNj
sX0eK/vCVp98wIIvZperzijNY6mhzS2vpywIzJ9PvSoxj8UW2UFf37LA7Yni
2WHReTQ7V7mt6j0L7F0PLXcVnMdMT+616k8sMFWO8/ee5SJL573CvW8skI7d
ciqcycW0l1H3pstZsNjp+NIlVC6+zx3PsfrDgvmD3sUP2rhIDbz05HU1C5gL
JdueVHNRUF5YcrSRBS3t/SyZX+T7i2i3JlpY8PurRGJSMRffxC7aQWtnwcdr
Z4XT8rg40tKn4ExjwesDtwtUsrn4YL+xsiSDBXEK6e7v33Ox8pG+VDKLBb4t
47Qvr7hIm3y7z6mfBU6fVz/Z9ZyL2Rq1Zp8HWXDxHhzOf8JF9ZujtM5hFhzc
F/mtOIqLpc+FN/WOsWDJz4dXakO5eP38273sCVI/7YTVXYFcLCbMV3b8Y0HM
x5e/+ny4uMRTOjh9mgUWqm+9/7lzUWHdXkfLWRasSvmowu/ExVBZ48/9cyxo
X5fXJn6FiyVvu7TPc1nw/AneXXuJi2dt/3Z8nWfBhWXlOirWXNwtFBQ8vMCC
DZHVfVqnuKg0yhEX4e2BHoHmeMNj5P5lzEuCfD3w1r/r4FETLt7mmbVhkOw4
zZw5s5+LVSHaQ6/4e2Cb6+BbB+Bis2FV7z6BHhgbGLe6qcNFsQLVXWUkf7Wb
E7mtwcXxrMkCFcEe8KLyfb+/hYvGceI2N0jWsxK9+mwTFzUOPeaLJXm+fplM
ugIXBx5TwxJILjRd/fvLGi6a/gpuCiL5Tpm8T+FKLgaaWtQeJNnIQFm1Wpy0
X8vGeozcT/T7tvZ2ES7qtk/b3CK5SmNnxF9+LnrYpxczSXuj3+vrTnA5ePDq
boetJB/fdKCfZ5qDsc6FWpakf1IvDycsHePgw/t3ll8k9WiTOXFIZpCDNpMr
WCY8PZAYe3ZWqYeDpncgdiWp33kx23caNA5WW65ehKTe68OvnTZo5+A363+K
xhwWpN/y+W5VzcF3Yud5Zsj4XZsMumpfwcHK13/vyU+xYKvTXRm3Ig7qW92w
3zRJ1svFpz5RORz88fLKs3o2Czw7X6jGf+Sgatui3x5k/uiefNOe+o6DSk+m
/84MsIByMEcXkzg4WKodn9jDguDin/1/nnLwstIgTz6Zrwf2lCa0PuSgxXwJ
z3cynyvVG2dHQzmYFt/ufozM95ZVY98VnTjo/qx2bICsn4SYmavbr5D+Utu7
uGR9nV3Mu0b/EgcTst5ShopZQMyL3zp1ioPZ42s3XP7BgmHWFr0I4KBXyKVL
Beks+HReayBOh4Miq3yXF7xmgXvb7mevNTioUnJb7VkSC2YrTebyN3Fwh/zE
haFHLBD6cuXHiDgHe9f/kWH7siCibJHkRVEOGnzyijD0ZMHStlTHRgEOHo4/
5ObhwgLJefq6bzNzyF/gcee2HQsUjE8H3mbMob+ndKCqKQtSTk+3TnTNYXPi
oYdh+1mgfD1u++XWOdTY8bCyVJ/U+2E9YVI1h3NHmx6z1Fmwu/PQ/pW5czjG
Non5tILUc7j3edinOZTIdJmWWsKCfbxh/2Yy5tB67IGRtQALDikVv+lOnsMD
gXW3oyaYYOmsJ5oeMYdTJ1Mo7g1McBNQq9E9N4c6Pi+6L0cy4Z/U703vLefQ
dKP3jrYgJvioOATKHZ9DtXNGGzZ7MSHwSMp2AeM5tLIRbHC2ZcL9p2tjq7bP
oZO+qX6wHhPeqS21uiA4h5Gelc3FDAbQLIaJkMxZrNSX8aSsZYCm0A2toLRZ
1F0/Ea8oxoCw3KEw3+RZfCkuq2e7QMBWmSE1t9hZ9FmtLedBJ+AWdcDjgu8s
slMxjvWaAKmrfaJ6prOoWlL8j6tAgEkAcwd7YAYLtnqeC+KnQ5K6bcgAawb9
uU3OzmwajNEZLT3UGWzY95/Eni4aPP2P4dvVMIPrWzecdMqhQY8IUfb7xwxW
bJ36qnuZBoGx1NOpkeR6s+k8wiFUyHnbfvv0ZnI9NsXUtrATFE3OD7tsnEHq
6/wjg4864eEgw+qu3Ayeq/5rrmPfCU7bhtTzVswgi7UneINoJyh/XeheyZnG
5xtDnxkc7YBnFEW9uspppFrVLKVXt0Fgy41xoxvTGJ25onshtRkOCvLban2a
wmX1eZ8o0TUwG1131cfsHz65t37ERukZpNUu6ufWTeDRAhHNCt8/aGf4LPlK
5QT+GAjd3tL/BxW/bD3VVDaB/RuGyt9YVuKrJydKMn9M4NzFT3hXowpfnHud
dCZ1An9edBnU7KnGp4P6x795TaDQioi/inJ1GCnske8uN4GUT/2Hjawa8ZCP
iBtt9QSeiZItcItsRNHBRBVTyQkUCVe3cvnZiOE1xXEbRCbQX+ahWrd8E96J
W+ZSPzaO3/2S1ruwmtBf8f1G9bJx3BUsqyNp14LOBsz7A47j6BtT1qeg146H
Xvmec7s8jrX9V9fn2LWjosDKrXM24xiUkB8sHt2OreX7q0RPjWM2XUhFgtmO
e4++Way6dxypfN3je+524PJzV8MdVo5jqnEJTpR34iDyWbLFx5GRZvIjc7gT
yxSebfISHUfTEae8DSu70If1pyxsYQxF4pbBYZsuZDhuEXzTN4a18y+O3vnX
hV9usYNYP8fQ7+bv2h2SVLzfFX7set4YRhY8J7K0qegACgqTn8fw57US8x5L
Kq7lN6cIpI/hVtWhab9EKoZEZM9veDiG305OxW6SoOHJeI9bF+3HsCSfp0j6
Hg3V58RM+i+MYRYxQBVLpKGo9RsZ1zNjZD8zuJH6joYF8q3fgszGcNr64qOl
FTRUSteZTtYdQ+mntT3Peeg4lcNxp4qNoVzFzrXXr9LxVa6HPlt4DL327orh
96KjaR57ES//GFrct+u6GkLH5G/MhPVTozjxIvZkxgs6GudXUuyoozj6oMd+
pI6OY/kHIjzaRvGob5SacDcdE39Sjoc1jGKvcn0Uu4+O7IIvPenlo7hU2jN8
Gy+BTwsTlwxmjSJFyMTz4hYCDYukmjlvR5GmdG/1xE4CB4uiXyxNGcXtJ7R0
LQwJNCi5s2Pb01E0XurmGnCSwN4yR0vXwFHkWbxP39+XwIflPQrBPqNY4ZV1
NDCEwN0VFwYeuY+ikO135tH7BEb/svD/6jCKeoFOSqdeELircnfKtNko/vdK
gocfCSQqc66LmIzi3dcO62+UERhVpb5TZv8o8t4SY6dWEUirVvytpzOK9yIi
Nt/qIDCiJumRqcYolkX+vSJNEKhZK21tvWUUHX4nTwT1Ehhet4TtrzCKFotO
x32bIHBHfei3B2tGkel2+nbYLIGd9TzByStHcZiSZ6vAw0D1xomVRSKjqBFX
mp8nysD2xhvUev5RfJw0uzhHnIF3mnrTGVw2HjB4JhAgycDW5k49wTE2Kq12
zXBbx8DbLScFpQbZKHuFsvOFAgPVWmurlXrYKLg1QyVuIwObWw893Ulj45XX
H1wsVRgY2FZiY9zORv2udp4eNQaqtutvtmpko4dUY4W+OgMb2/MmrlSzMY5b
/+OiBgOVOzPDIovYuD46c3ixDgPrO5WOJeazccyFvjJGj4G+Xcky73PYeGO2
Vpu+h4FK3TLMnx/ZKHAy6QAHGFjbHfu++h0bV/3i0yP2MtCHKuZJTWHjzZHD
oo/2MVCRFm7ATmKj1axdhth+BlbT+ER549noM1C+8sQBBnrTfRuWPWJjTE3Y
XnsjBjJ97u0Pv8fGTRaHZbSMGXhEMil3PoyNhNq3yCaS895/ULl5m43TKZRo
o4MM3GCEzwZ82VigUKkYSfJ9Ws3Si55slNifuy+Z5GlvWkCrCxsfi9X1hZJ8
ccXo6BFHNu6Y61gBJFdl8tqW2rOxfYMYVpDr7zqwvFnPho1/Ti/r20DyK+p6
489n2OhkxB9tRtq3xFvju/JJNqoF3fx8hLTfc/l/ai/M2DiUfv2oLOkfkWGR
tNKEjb8C7eyR9N90v51E1H42ZvKbTG03ZGBO983bfAZs1PIJ5PMwYKCCV+iE
ly4bzz/oDI/UZ2DUsif2I5pkvC69i3TdzcB/79602m1jY9Hzt0s26zLwwn95
hzpV2PjPV0zs604G/umqyDdXZOP+nqCHEloM1PZs2/pLlo0BbgrP9+xgYLJE
fzKsZqN6QMD23dsYeHPf4hA1MTa2BgsLf1BmIK1zzdQrYTa+PpF8XIHMp0Me
aldW85P3L9fq2ZP5pm/+LGEJewSZU60ztqsZ+HCd/GZK8QiqlukPaS9i4GWz
veLv80ZwqcTqjp18DNwdfHE8/v0I0ms3vxTlEtjTm/LD7ckIJrd7dW4cI1D3
i4rppmsjGKb2VVuznUDxv4fUJS+MoKyjomhpA4HM1Y6SvCdGMFo+TUyZrM/7
AR862/VH8HHEFNX2f/V8SOP6/eUj6HpvQP3HSwJz/SyO3Vo0gjGfmqWo8WR9
f7yp5cAZRt+UhtdNMQRqS+Vx9/YMo/fnl/90g8j6pu++P/ltGM1Sd7r2WpP1
63Ug66zNML5oX1NHFSPwTa9q2JkTw7jw9CVxlJ/AtVbi508fJPmzk0rUFB2F
dFvFLLcP4zGh/rorVDq2zV25cZx3GJuDPi79mUnHwIB7Ww69HEKvF/tU6Hvo
ODniInjw8RCqC8rtVtxGx6sXTnYZ3R3C1crpOVrydLTYK3dvv8sQjllZ3Cnh
peMm/k+DBnuHcGsZv1hcEQ2rQxszdtIHMa7pjOI2PRrum8oL1m4axOV/x5od
VWiYd/n5Ga1fg3hCUOjHrVU0fGVsv1jj0yCWpurlr+mh4k3R6atbgwZR8NFL
neVm5Pfo/hrVjQqDGBLOZ7tiRTdeeXwxfbnNALrcVjG9bdmBkj1mnw+eGMC6
xMhf06odWKAN+YEHB3Bs+c/Z9dx2lGxdUzu8fQA7NYZvxCa3I0Wmaeo33wDy
ZdCjZhhtKJVsZBSc0o9m334N6lu3YtE7tZ7xv3340XnK131dE8pQ/m1outGL
hKmbwETfH1xk0tJ/LYuF11fOrddtDYd60RydwNcs1LTrzD4dFA1Jv2PDY5+w
cNNS/80OcbGgfchc6WcAC3ssg4eLMBFsD1bZiJmxcLYnSmJlWBpQjIpbP7KZ
OPsMVJsuZYP3f1llk9uZmP3lhC//90IY2BP2KuALgbYzf5f0RdbCrm2PDM+/
JXCO7ZFdWVQLd+RfEPpJBN68/TsqZKYW1vLnrp8PI3Drt7E0d/s6OFLR88r3
DIHGoSl6Ovr18Nn8wGtvPgLFto04MZgN4HNZMMXNjI4vpv4FLlvcAmWWy/47
vp+Ol9sNkmL1WmDFoXXMHbp09Ms8fKzzWgtkqmkpjm2gY4v3cHjunxboHrVN
cZ6iYcvZwLoH4a1g6FuScj2JhqtTVe3O/WsDyfWLTGpaqbjB2/rgoRedMBSQ
6vqZQkXzAD2fxt+dUNa1L+FxOhXv3T2+TvhfJ3jGB/ad8aJi+Ia8j1dMuqBd
YjasdxUVT9/z5Rce64IXC4MlvKe6Ub/3SeB/W6ngZR05yNTvRmWvxzRVCyqY
/VCRrFDqxp12z4SyvanA52l/6T7ZB5k6B1LTiqlgO0zlXRPXhTJa+46Gq9BA
tateX7OpE+9IejqWZ9GAX8/FftXPToyW9ryShTTofCp+fzalE1fmj/DY1dDg
noVpF8W9EwnJO3t3DdOA/af01mHJThyLNpj1VqFDhYrta3VOBxpQ+3J/7aTD
yzC+PyuYHZh6STqFtZ8O5vtApj27AzvZ96yDbOjw9Xtenv3xDgwtWqjaF0eH
+9KnaAf1OjBB5Ks7+xUd7D0mF23Z0IGbmoUFHbLoIL1jx6nxsXZMkO81yS2n
g8/bjMmAh+14PXS/Z/0kHY4vOrTukk87llWaXavnIUDNrve/Axfbsff4GrXE
xQR0yW+MXbKjHcNzY2Ki5AkweJq0I76uDTMvuwR0GRFwJ8esYPBbGy5P/S+O
a0bAr0a+Qwav2lD4QE1wrxUB5ssu2/x1bcOLysq3ZK8RYBuxLVpLsg1jfD9u
FI4kID2dvuYupxU931bt8n1IwFDZozedzFZ81pdx8Xs8AR780wXBX1tR8rNJ
WuwbAsJ9KUN1J1txZGUfpYBCQGWCq/dGaMW043FWQWUELPumKOi9qRU96oyd
l1YSkDAZvlZ+ugUpDNmWoGYCulfopbvRWlDlWaDw1Q4CNuwY0iivaMF5DVuf
NTQCMm8cM7kR34LxY4J9bb0EsKP4WwqDWnAsm/unZ5AArYyvF1debcG49v4f
+WwCfH5dHnYwb0GagM/7MxMEFPxd7ZOv24KlnKnHxVME8AlVCkpsaMG3Lceu
TcwSYKToH3NpcQs6Sq5UHOYSEGWovi53vBnv5zrlfuRhQO0FIl20sxn97dTX
7eZngGRArOa5kmZceqvscLQgA6yeH6B8ymxGMUVDw/eLGJD0Y9pE8HEzzjtZ
TDwUYQDR9q7F0q8ZZ22Pntu7mAFK02cvZdo14zcJpVt5SxhwTUp8ZOFwM35+
4nhgeikDPmoW+hzXbkY3Q8t8HnEGTJi7Cb2RbUbBu9hWR/Iul40PZ4WaMWqt
TOI1CQb4PWhZd2SkCf8NB/JWk1z0/u7bly1N2Lnrg/AMyUKVelqT2IRBftyP
gyQf6h+iGKeTz0ddm00n+YFwsmlidBNeuhPH2kJyo5J564hXE7pX/nS7Re4n
vV/Adp9NExIri9JiyPn47KWckbiDTbjTYmOQM2nvyyCHW/3bm/BJjqiQNOlP
zwuZRfoyTViWpK0TLsoA1YLKhzF8TWgSJyZXKMyAG53+sqz+RqTsjc8vEmJA
9qz6u10NjbjJ3H/VPQEGTEsztKJ+NGKCu5C2PB8Ddu98XEh93YhTsEbOl5zH
A08YHdaIasRv8kbtyRwCSt1mWkPdG1Fs31en+zMEHPlozd6yvxEfqyofLhkj
4GG1uG/Qlkb8pZSWvmSEgJbBwkVNKxsxM95SUHaAgAsqSnK+PQ140Vud/Ywg
IO3djsP2tQ1o4jXIsuwm838z3DL73oDrsmOUe9rI/Npq2aJ4vwF1l34odKkl
gJJlKyju1YDHtbu3Of8hQGi7i8aMTQPedr0iA2T+P9KIeFCl1YAWqtvjj/wg
oP1L3M9cOfL+mX7jB18JkNd+PfBSpAFrSqYykrPIfN+Vb+TRVY9y39UrtF4T
ULZneEE2pB5bC7dJbw4nYAnObhFxqsc1r07KjgeS9Wyw6Oy4ZT0K5mqdjfIm
gGoon1euVo/ZE+t/77hKwLSRubNzYx2+1yl+fOwgAZvNc2iFG+qw9cLWtL55
Org2FIllLq1DG2XznuoJOuRZ1OyOm6pF3jZfDO2nw3+nep9e/VOLrs9lU280
0eHcWZljK9xqMdxZWX39Wzqsr+Lc/nWnBm2eco5sN6ZDVs1K6nPLGnzj2L73
sB4ddtdv1XNVq8G2HpFXe7bS4UTLhXGZxmrcffzn1sQVdAinl1xy3FCNV2VX
qlt00mBoMuo/8aJKHPIXGay2o8Hs8GenzQ8rMS9phMu2oIFQb2uC0cVK/JAa
Gkzso4Fsu+JoAF8lrjrB81VTgQZHCvKfsw3/YIbmugLtbCp8DB38V1f8Cz1b
FskaBneD6yrTt7GlZeR5LChmTOsAfwnXxo+Py3AH9XCkYXYHRIg8Xai0K8Oz
OuFZ/SEd8GqOQbY6ZShW0SJ8QLUDGqi3+DwOlKKv8MDUTqd20EzPOHOqvBgZ
nUrxwf2tMLVrsZjMLwombwliFLxrAqFplt+lRAq2uQ0XyHk1gVQuZSjTiYIJ
fXn/jPc3gbaWRxVIUXB75kjEv+5GGLxYtPpPWQF+HEqrqxRvhP7jN1ZdnPuB
eDB/uuNyPfRolS2Pts3BnIOam5P7q+DH+MDy1utp+PlkYOnpxwVQptjYP3I5
FZzVZvaVaP5EVZMn1ZuU0uBtdT2rV7MAH7ic/nyemQaxg+zZL5qIlgU075oL
6XDS3YT5LJ6CfaeGhLOsMqDk6HvpP4+LMHR/8Irc1I9gWhglFhdchuleids9
nuTAET53s3bVamxf7L/h4b8c8Bx5xIh/VY1LXpxf+eFELvgO+qQvrK5B59L1
M6wVeZDTaa7cyV+LOsvfUk5EfwMn6UDRsyO1+Dvj61Gtu/kg2bDdjcivRw+n
v9o+ewqh3k7zuOeWZlzitmGg/UohTMZss+g/14wvPc6/0IsrhO8iB3QUo5ux
0q9lEXe4EE5fy/3WP9qMClHlrQHJRVCZXjLz5XMLVqa/8QnhLwH3t3rPGpTb
cD1xuSD6VxmUuwYe5Se/63ms166jk2Vw4+t+tWtLO/FwH1XJfH05bHB55Rip
3Yle7FMPVtwqh8IjQjfHwzqxat7oQpxaBTT/3XHq5KYu9FqjzJf44BfoXtph
I27ZjVUWvfvfnKgEvuLdu84ADQmbVZspIZVgLGBndteMhtM3Dki0fa2Eu6de
+IXa0FDxbkq7qFQVrNXbZzp0m4a+Py843Wiugtge/8OXi2n48PcDizChalg1
dP25cAMN01sKdJK1q2HRCv9bngQNG0fXCtTHVcPKkk8qP3noqKbU9lTrVA3I
hiTYMci+z1BD2P9IWA18Gk3RGTSmo6XBzkuXc2vAuJaiW3iSvP/+d1zl4lo4
OCorV+NCxxvlyjbz12pBIcxK3COVjqVzzEkbtToQmvobWUP2nWa3fR1u/FcH
Zpmr5e8uJbBdWLLD5yzJAUOxS6QJZK/cR3kUVQcuNyxfO6uR84z6y4jSQfJ9
YYHF78zJeSdnF7dOoB7W/k06lUX2tTv21Dp1r62HLK9dz/xsyT730ILFlGk9
FLvUJLnfJNDd1lpO5X095L38Qv0VS+BC/0SMVmk9NDB6N0kmkvOVS5SAYVc9
uJbWpim9JjDZ/0ff6aUNYDLFmXj9kcDNgsfPXt7YAFVKQoliuQTmRPZXu+1p
AJ6th1X2/iSw8unqL1HXG8By/Mx7bgWBp+Q+KcWHNMDPlC1BYdXk/JdqHJ/6
vAH++R2bbCXnxenPnv4FVQ3gaNIfUN9FYLCO+OhvVgO00r54+RBkX05Ju9TC
bYDlun7NfT0EbqhqMmZvaYRL63nvyY4QaPjI6lTU/kYIsn7wsZ6cTy9addkp
WzdC870XUmb/CAySs3EvcW+EV5N6X+NmSH9YzNsXohrB8cHS4DQOgZjhEMN5
3QibVM56BiwQ2O0y+OLpj0Zw8xOLUCDnYe5O5w+aDY2wzeRddpQAA9fOj+fX
9jeC9DWLIYoQA/VKPP848jVBCqNWvUCYgacj5tqEZZpg+dxtrzuiDPQxC+hN
2d4Ez42u44olDIyX4p8yONgEnT+38zouZWBeZ6hg14UmOP1zme49MQa2vhKV
9CbPNZM1w/ae4gyccri/fmV0EwRsNgpRlWCg1Lbl2z+9aQLn8t2P0kjWmnwM
h7EJoo/ffzBAssWP1Uf6mpvgTVGCN9mvoFvQ87Mhw03g/+TCsVqSHxopXFMQ
aobnTL9VziR/Wprq/XNdM+w9pF7VSu5X26AcbqXVDC5jFu6iJLPjM+MmTZvB
MtJBXJC0T/yCemqMbTO8g7CXFaQ/W5W+ZG/xbYbj7x23nljMwCODO4t+PWoG
tXa37+9EGHj9849au4xmkNz05NCvRQyM8gIqb3EzTBg4Mz8KMjBDv3joeXsz
bJTYdd+Gn4G/BYw4OmPN0JFadqSDh4HCMUdWuyq0gOb37B2qcwRuOlW/SUyn
Bewvd9kvTBF4YN1J7XdmLXBNyLbh+QSBd95aHycCWuB7JdtPe4jA1050G/8n
LZCQlFun3kdgkZads0xWCwh5nr07wSSQt8jxnnl3C0w8uH+ytYNA+XD2s+HJ
FtBmV4VONxNocMT9XcTSVgg0OmpG1BHo336rvGh3KwgFGw4sLydwdiyCV+NZ
K+S0eQv3fyBw9TcxiZrPrXBXblGZZTqBuwIeyl773Qong9alxrwk0GNxgt7r
mVbQ/Z666uIjAsc3vL25wrINakKvyga6E7i8X+1OllMbiFns1TR0JOv548eH
JmFtEFTBkqm5RKDz7rys4Jw2SD7++edBsv4HLcr7xiXbIfLDK/VS8nwQyWOf
mFFth5wHlW+iNhCotEamaN6gHZTDLz9UkiHQhu6YIHK9Hb4lJyjUCxHYfH25
iVxpO0ykPe4W7aYjJdQ689DNDlAW+zu3+g4du/pCpc0iO8AtSvWPpBcdZ00/
3jnxsgO0nOqQcY2OWiv4rS9UdcBKzSWP583p+O5F+lKPjZ1QZBR+ZbMcHR/n
jd942dQJ+wc+jvpn0fDzmnUdaQOdEGHo4v0nmYa1/geMMnm7QN6z8MBwDA1F
98fL5W7pgpmaD8a5bjQMrNOvrQzpAgetGtkzWjS82n93+7RWN+zeprlW5iIV
9dfKTxyJo8LNbMesKKkuXCtQ7KX+gQpvnjRLCA524uyAHXdZGRUCVPpVlAs7
8euPDKGmSSqwxYICna92Ytz7Z1HvVWlgbVHFWPWtA5cc3vRCI4Lsk2bWFmsZ
teN0pH4JHCT7usCbHwJUW7BO5LqYZTk591gZisRsrUV905gAv3oCxP9IqhsN
12Dm/a/sV10ELF7M6ycTUIPhK+brh8YJ+HskYF3ti2o0WPfgSbA82ZevP8uO
6yL7LvVP8lneDPAxlOeLMfmFUacmdwipMcGBk1h0aKYQjVL9Tn2JZoHY8sRK
ydE43KchJStg2gtSPOrb5EJ+Q+ep61eop3phY+aA5Mj8b3D3Lfny/VIv7PAy
vO3i9QdSSl1NXG71gkJtXWT41UoQsKzx6n7XCwViTd/bDlVDiW94Q55IH0gG
V/o5cWvhQNls+PXyPlCmah/8HNYI3f3HGo0b+qBEfhnLr6ARPMTfyilS+0BK
3lVXbLIR0ixP5bT/64MTyq0ZPjZkfzaQzTBS6oeVE5nCrjuboVz8uv76kH7Y
cbtczrKlBYytqOPNhgMw0yO+fhWjHc6bigz3HB6AkLf3J43EOsADNHr/WQ7A
r9MVDVo6HZCyMaxTyol83uPsCqP7HcA7trX05LMB2Hlj1EdTqxO+R/jHNY8P
QEFsyAbmzS6o80uP7pkfAM0O6S85iV3Q61wf8U9kEDyWmW81KO6CVaeUAqTk
B2HgmLaLh3g3uG+ovnzSdBA+ljeesE/phi3563SaUwbhU9nwwUUUKvyXZaTR
kzUI0pxqaTmCCmdfuWz5930QXhJuuyZ4aRARXqogVTcISmIKBkYbaNBjcV30
JHcQDO+8rxW3pUHyUH5H04khOKv521a0mwa5tJ4m1oUhaJFyIqIHaVDdIFE7
eW0IgiVVO4ZmacD5Zluy8vYQCP6W+K66ig5WoUven/gwBCcupb7LPEyH5XJn
/ZuEhuHPOqm0nM90uNtYdKdh+TCsodj+eYR04IlQiayTHYbj/w2M7qmkw8jE
vydV2sOw6PDGgmkmHSp/x3wqtR+GtuaBJgFJAvYFTucWuw7DJe654ANyBHzX
Ol9Q6D8MC3sZuyxUCXibrPbnZ9wwsBeUTBqAgFCPcubXsmFoHzGUtnYggLt5
60B2/TBInHy+lONCgDs9dvRT9zBszlmrY3+LgEumF+ff/xsGT5fjTc/uEWCw
nrsqTWkE6oMH8u6S81leyyXZlB0jUHbp4mhALgHb7v1WfKU/AvGv878aIAGy
00+2J50cgcC4hqcK1QTMVe0wiQsdAdvjSf3n+ghwDY4/FvtwBC6rMF+8IefR
/l08lg+TRkCfVnLu+yQBra+rbO/njMBt2pqSPbwMMLPSvBZVNAIR9qHHPpDz
crnYM5eI6hG4ddo9p3cxA3K8HfxDe0ZgPCKj4/tKBmzdVnPnztgI7D82EmYu
w4BUplbk7fkREEvMYGTLMuD3G15TWMyGjKZr4Q1KDAjl0zqqv4wN1D/ORTGq
DNhr7WC+ZxUbHIzY91ZvZUDe8hpLvQ1seDxoXBSiyQD363xndVXYII7KCld3
MmBbhdZ5nW1s+HcwmrtKlwH9669c3KXFBkcNSYsHuxmQ5pdot1OPDYUhfQq1
+gy42FrjoL2XfP4py7bdgAGyGvyOWkZsUJ/1W/PBkAHt97SdNA+zodas4j+T
/xjwuPeKq8ZxNvTs9aF92k/qse/5zR1WbDA71jdMP8CAJUm1XtvPs8GPIurS
YcSAiml+X3U7Nry+5uaQZMyAO8d3Bmy7Rq6XcqpF9SADDD5cvb3VhQ37lkRS
AkmeE04K2eLJhsrLgZuSSc65VBeu5seGbZ4HJe6S7FogELU5mNSnLC5Aj+Tr
gS97SsLZMJxL/C0k13cw1N977j4b+Batapcm2Vag49nUIzaYnLx1xoC053yZ
57/oeDaM3Khx2UXaezpc8pjqCzZMrzbZwEv6c/LQp4ziFDZETz33SNjHgGNL
jghZv2OD14kRVwFSD9Pq/gv/stjgzt8tB6ReRtFhPx58JffbFBhyiNTT0FxR
SuUHG7SXXspUIvXeI1noXERhw8O5iOcNOgzY1Wz950wZG+wXXC8eI+Ol8XR2
4+QfNsjlLxFMJuO59fSTwPt1bCjdSXmA2xmwsbtWq7CTDT80L9112cwA+eTr
0acJNojWOosLKDNg7UXRgfG/bEgcbsi4rMiA5T37kpXG2WDRSZx+tZYBS9Np
szjNhpcap8K9pRkgfNXvhNU8G46kfOJdL8mA+aEc0SiRUZDyyVj+V5QBM1nH
7TaKj4KoRk4FP5nfEy5sLJAchWfKfovGeBgwMKlyc1RuFEZ/LbHZ94+sD24i
9aT2KPQO9V750U1AA+rosvVGYdmei8b2rQRUBzXH3t07CrLqdfqMOgJKBSUO
5ZuOAu+axOLjJQR8Xhr8ReHSKJQK1d5c9oaA9zVy4j8cRuGxYLnV0RcEpMfk
X7G4MQotfGq8F54QkLTyn2yY9yg8stKbngklIHLdlbuDD0ahxvnw9hW25PlC
FWSGPB6FmfmIlr7TBNx++Upf7tkoRO86IBx7jACvjZ3jx9JGofpnmfslfQJs
txw9l5s/CgUr9G+PriRAf4+Wxu2+UdBac3QxM58OsuJV7gvDpP27hWm7P9Fh
nmab4zsxCtLM2mLHVDrgnVgdzwXSno+ntc3v0cGgchwcV44Bb6iA6c4zdDA8
89n05N4xEClKuBs2QoP1Ww7dbzgwBm9XN/y6QKcB3wK9xsx0DH5ZmeusaKBB
8atlx01OjYHeqf90BXJo8F+/s5XB9TGYu+rIkPGhwQHvbfaq8WPQo+lX6P2P
Ckom5W/eJI2BW96TPR5NVBBad75PMWUMOk5mCKh+oUI55b6jXNYYBBcySvKc
qWAsPOwqWUquN3Dhsm9PNxx6khkwzx6DELOG0d6SLjj8VSW+3ngcMjPmYtuP
dsC5Xiqt7Mg4CLEX3vSt74Aba+KUf1iMg2HVY+LjZDvcD+LLe31hHAqLlJqu
JLRD7eGOZnevcehgnuaLpbWBeU+U5Kr0cbgTUympf4HsY1exH5xZNAF8EjPf
MtSb4IJ3TiizdAJ0+vVdN16rhBNLnx+JUvkH8j4tS/xfWeLRoTVJk++mQHR1
7uC6VTX4ZdpClfpxCix2pJ3TjKhBaYH7ORU5U9B4S2SpALcGCRmemmdFU5B+
gD+X5VyLHsbMhb3tUyB54pol+3gdJr3OtLkvMg0/YfedD8sbcNhqz8ZNDtMQ
e9Pdq86pGY/beXySuDENh4u5GtIpzZjnnLVn1m0a/p6Kltza2oy3wxROVgVM
w/OCgtJSaEGpr4Jhbk+mIWHHmviEJa24R6K6F8umoTXs7NKIxDaMKjuXablx
Bm78u+2k8qgT1XV4oztVZ2CVk/fx5z87sSnjtdsF9RlwmDn8tOtvJ8rG9Oo6
6M3Atwtu54v0uvDjGddfnsdmYJnUlyIpehc2skN64vxmoLt7hv5DgYpr17yX
b2qagQL+d6dq82lIuXdUwKpjBlpHXpcmVdPQjmfsbydtBu687XIwo9HwA0s7
izkwA3drugWs+elo8JGyZ4J3Fg6vu/N8tTEdbfc3nl6xdRaS3+/LWlZJxwyn
udhjobNwr9yf+pSczwP35fubRs1CYOfwp+5KAi1W+TkYPZwFEX31VJ5OAucL
5vX2JM3C3H6l4lZyXjYT42Mo58zCutGf5a0aDCTbuu08PbNwqerzB4mXDKwI
/CUzNzALx7RU7CQ/MPC5RYTAv9FZYIZFFI5/Z+ABzuLWAe4sXAiYPbO/kYFP
TcQDWlbOgeNSqQINQSbu6V9Z9WH/HNh57CzSu8DE5QXNOW9N5qDxbm3V9FUm
9sQ8SU45NgcKy/bfiLnJxGid1e4J1nMQsybY80QEE4nwtWtCb85B2vPHgiqf
mZhztksg6NYcuG8JEy/+wcRI9aThW0FzsHSB+2dXKRM1W+WKXO7NwUFqmmtu
CxNDN224Yp06Bwnp1pv45ph4eo5hbpkxBzmCBm4+/CzcVpOy+/inOWAONryp
XszCVg8liYM/56DaYe+Q6FoWqpap5Go2zcE1d5mhBl0W1tiqCy4R5ECHa7f4
JxcWMl+cPvBSlAPxC3VVwZ4snG6/E6YtwQGmwctPO/1YKH+sTcRmDQeuwaLV
+8JZ6LzntljOdvL9v3/y+hJZeMcr86jJTg7sFX09WfaShU+zm6NpuzkAV+1/
hKSxkKKyecViYw6k2ghKp2exUEKqcdWFcxz4k//9RRCFhYrH5i0nL3FAjedg
pmMJC3dFKSdEXOHAOdeKLzoVLLzA57f2qzsHDpR+mvKuYaH7njfWh3w4IL2s
4NhQPQvDveqSqAEcMHyx0GPYzMJPwxsVRCM54H1zSuBxJwvLVMwuvojmQI7d
5qwYKgvbbX1ea8ZxYJnigxZngoV8HdUbz7/kgO+bC73Nf1koJTVjP5HGgVXi
ayas+0n9jm1Iv5vJATfK85LyQRaal3uqfsnlQJAXP3ffKAvt+V5dO/iTA9+T
J++eHGehz57KzO4iDmTfq9poOsnC+17/htwqOFByI5GhOMXCV9ny20SqObCu
4m0zbZqFOcOHnJMaOPBgidvywFkW/la5+UmjjQOxmhnv+Dgs7LZ9MVbRzYFu
S91sBy4Lx1/80jjH5ECG8R6Dz/MsFO4Ydx/v44DlBkF76gIL10rJ5oSPcIA1
IqXD5ulB9WPGU+smOTC8Y3M1k7cH/4ty3ZU9y4HLYVt0f/L1oGV5orcxDxc8
dux+6M3fg4585d+7BLmwouDNwGqBHgzcMzrnupgLEpFjZ5JIjvVas0d4GRck
r9ROCwn2YHr2fv/nUlwYUFVqPU5y/rAT7ljLBVl9EYkQkmtVEngqFLjwXQ9z
Ekhm2pbstd7EhTdBP4lYkqdfDN8eU+NCYXH6OzeSl3RIl4Tt4EJRssXGnSTL
S+0TXLeLC0q7iq9Qyf01j10/8HkPF5g/FB84kmwc9STMaB8XcvlbMrtJ+8+W
F1Z0GnOhR8GuXYtkZ75BEdcjXMibDN3mSvp7Z4+UySILLjT9lC95ROrx1Msg
KtGKCzMZhh8TSL0ys69WbT/PBdZN5SVhpJ6U4Vixclsu7OnfxbYk9W5SwaNn
r3LBOkDwpgQZj2p3pmeTExfqRU8OfZljYQWKJB+5yQXuO9fdBmQ8v5+wYBsE
ciFm/cufi8n4Zyd7S38P4cLuFCu5/+VH5kCSgUYkF9IqVHPdyPxJCuqL3hjH
hfW6s31eIyx8Uin2LekZF9QdS76eHGJh9CpN+qqXXBAB/dVrB1gY/N5/u2gm
FwJ3WIue62GhQ9uK+uFCLuyKfGBe2MFCG0Wd2cvlXPj8buPT7lYWnnY6t55e
yYW70yuA2cRCU8G3rg0tXIhfvlv6LVlf27frr8gb4oLCnHXdmiIy/30v6W0f
J+Mn4TnrX0DWa3n4pXfTXLjxPPLkn+9kvVg3ZCfyz4PSzozl8tksnA13sAha
PQ+BjvP38l+R+dpwz3dWdh5eGNvsdUxi4aBsdoqb4jykfnrII5RA5vcX7oTd
tnkopFMkpqNZWEx7+PjQ/nk48s3idht5/kTt+tm8wmUertNbjN4dZ2FIMDEf
5TEPsS3vWxcdYaF/9aJNQr7zULrWWueYMXk+2Zp7TofOg4P5tu43u1l4Ivrv
qq7EeRB5JsC6rMhC2d5lVmkV8zBcvfGZKZuJRrEnwuKq52F/ZfJuai8TnQ3i
v4Y2zgMG3jA+S2di8VP55ZdpJD9V3CVVz0SHg9v+bJqeB4ubKRn3yPP88zvT
PW83LYD9M5HPmU5M3H89TCEzlGTH4bX5HQy8sfrP0cSoBWg66rjjbx35fSkV
8496uABZXnMxvBUM7F8X1+6YtABXPboqBb4w8H51yqMtOQuw0vJe4MFIBrZu
KxLMYi1A5EkNs2FtBmp7z09YrucxEPnvqEReMIH9fE07ZTfyGAxxGuqpXgS+
iMrwYWziMRD9SzHiXidQONmS58YWHgODzubS1ZYEtpV9Xhy8i8fgZVjIrc7N
BPpKXl7//giPwZkqv97XdXQsyqo5ynuLxyAum5UrsYqOR3qS371t4DHY+iib
96McFdMeqV0tbOYxoL606qngp+K8QZ5KWxuPQUratEX7327MelaTLkzjMVCv
vzL5N6sbJY7Np10e5DFoPz+qlQPdWPfjzOuNgrwGTc73ta3PdaFFjFTiS21e
gy4Fft3c+A7M1H915psOr4FhnbL4Fb8OFBjcsqZuN6+BkG3c6BqbDvx6YH8C
zz5eA9tvwc0hyh0oxXF7ev4or8GfX0JNzrnt2GJfF7vOgdfA3G+nUGtTG6pL
WltoXeM1EAg7z8n51obhhb0rDt/gNWjz+u9LwvM23LWW55GvO69BhEOFsYtd
Gz6t2xrTEchrkLpWZ7HNZCuy/b+bjQfzGtAVwqUd21rRWO2AxOIwXoN5CYtE
v5+tOBNq/UD3Hq+B7/TO9i8hrWiu2XfEPJrXwFPzB6f9Siu+o7uLXX3EazCT
GmMvfKQV+R7wVAfF8RpICY8e2rOjFf///2oGj/7f/2r4f61Txoc=
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJw1e3k01P/3vy1FvaOyhJKlREmLVBJXRImkUgiFNlSEQiFStkJISrQJiUKK
pHIRQvYtOzOvmTGD7NvMoO/rc87v99ecx7n3+Xze+7j3Pp/3vs4ZeQfX4xf4
eHh4RPl5eP73e3pfeER8PG8RT/Sev+J76mDhcZ9waxxvkcW0223Bs3WQNLIz
dGUsb5GidUv6iuA6YCV1Bz6I5C3aLX/e16u5DryFtnr73eUtyhFYtx806+FJ
a4OD/VXeojNJLK+c9npovia5R2U/b5HcM/UPg4qNcDQliZrP5Ck6ntfos66j
GfSYQx4zyjxFTQHjv69u7ITQYLFtrYMLqPR+5fCWh33gY7+XYcVYQHaXTmHQ
sz5w2WeX2N23gMM66TNtKX1gPp6xhN6ygCqnXEzcvveB3Bl9ygQu4N/0ukWX
WH2Qr+EesyJ2AZ+kG/4+rkcBJq1u0mTfAlZu+xAbNkKBTpxKr9+1gFJ0z+UK
HArUPpOxN9++gPMvTYU/CVDhs9mlGmulBdzlaq1cKEWFgO8LKc6iC9j43cHW
U58Kq2O3WITS5rGnkyfc6jEVjPQffP0ZPo+X85If6+4gYNmPGKf64Hmkv1K8
FbKPgNpdz6S6A+bxpV/3VLEhAeab3t2cvj6Pd3YKaKywJsBuxS9NFdt5nDOK
Oit+lwDvXr6CyC3zKHIo/ffTegK0rISdEzbOo9T4MhvhDgIWGldIp8nP4+Pw
JQ+uEgTcK5e7VSw+j5kLWYZLpgmI+qCzd3J+DkfWJ5c8kKZBms+tAqvaOVyj
ZGuUZUeDy1N3nC9WzOE9XSq/qhMN1FzDpD1K5vCpasDFp240+Ozw9FZ43hwG
nYS3EEiDIqO8vfhiDuNr9LJKk2jwR3K8YL3rHObp1f2I6KPBs2i283anORSx
jXGZ7qeBzVJeGZ1z5HlpY20mIzSgLoj4WFjM4c7nMXYl8zQYpm/Rug9z2D7M
w6qWooPgZ6dvIyJzuCUtOcDAlA73yxeLOQiT9l1sVlxpTof/2lOuNAvMYf3J
cK0aKzqILVDWfmVzcV3dvOPyC3SQP3Q6IJDgYsDTgwoFt+iQfHq2bbKbi5eX
ZtXN+NNB+Wrc9kttXHQqlNqpGEQHtZhGqnENFw1sfUr1HtJhX9dhA/EvXMxY
x3MzKYkORcPM5yEfuci78+kJ47d00OcNmWZncPHj0jWqlAw6HFb6+bbnFRc3
Lf/t0/SZDpbXtITT7nPxhl7AmvoyOnQFtjtIB3Hx74PUKz2VdDj72OtbuD8X
B6kvBNtr6HCx4NMVt+tcfBTwCGNa6OAhoFq39wwXhYsde8VpdJiWqNr4wZKL
SzY5SN7rp8MtFceAdSe4+GP69UD3AB0CTJO3CxziouDB6/+Zj9FBwF7vvqce
F6tz7+24NkmHEI8+KnMfF/v+/nnuNUOHyKdrYmu2czH3v9MTB+fpsDKjYAhU
uaj8sOmTKA8DHv+wNMhR4mJs4oZLpXwMSKTGTsfJcFHfdJn50GIGpKv+Z2W3
iIvLGMxl+1YwQA0yPjb+46BlurvK6VUM+HjMSNiAw8GEslVPHMQZkO8Z9E1l
hIMO9i0SO6QYoBWmKJbI4qBwbScvW5oBhQnFV5bTOOg3VTbybg0Dyorm1060
cZDfxSqkch0DDjUleF5o4uDdj23Ce+QZUE3XrPtTw0FNOeaBKAUGHJ39s/Fw
BQe3UFGhUZEBjcKeAd9LOPjS50v0/HoGnFor1q72g4PTKwz9VyoxoH1rzvbX
Xzj4LJuvXXQjA2z0zO6vyuFgWkRy+CyJ+8yHqUHvORhlyh9aqcyAnYIuGndS
Odj90tswRoUBIV/+hvi+4uBnj2WbdDcxoMPxaofXMw5qfdiwponEatJ/VT1i
OfjWw0rQeDMD7vy+4u8SyUHGk8uNb0nc7DvU4BTKQQu2qTOLxMpqV9ZfCOTg
AGtDvogqA3x6Bz3tfDlIidFLlSZxbdTlSmtPDu6w3LhOmMQKeoMyFtdIf/eF
/NdDrr8x4exy3JmDgvqGNnEkrkgeKDpynoN2LTend5B4zSnnVUZnONip4PTr
E2mf6+KBCwcsOWh8L6JgNYlL8p3y4TgHq7pjvtmT/kk4s4S1TDi4jMcyL5L0
30nGyXaXIQfHlozEvST5+V7NzNquS8a77LlRLMmn6G1Hvi17OXhTtKfgygYG
nNvKNFfeycHInWf+KJP85/VdequoxsF0I97wCjJewjH9bFllDiY+7i0zJuOZ
Pcl4Ib6Gg/sFvt2eW8sAgdSLY6ISHDRlTrWpkPlgYcHQXybKQY/9TJe9ZL4s
fKUz+QTIfHCuFFwkwYBjly9oLcyzMX9FJr2QzL/kNfQI9gwbd8TuKrAm89PY
n7ZjdJCNGofDeHSWMeDFtvNBg3Q2vmAtO3ZXiAHjFOIPo5eNaaNvzTMEGfD0
AOHb3cRGzuIVGm/Iehiacqhrq2Fju82lcXeyXuAtVb75FxurjzMUN3DowBCi
lld9YyNf50zqtgk6aH6zlyrPZeOGqKGOsBE6hF+hXC7OIvf7U3uwbJAO6nV9
ovlv2Bjrnv+ISpD1G9t7OuUBG7c+WHojt5EOzQZnP7wKYuO9/JwR2Vo6bJzp
+Zfgz0ZYp7fHmbw/aq16kmM82Ni1ci9fKtJBZl33sL81G3N8L27/mE6HvHcd
gac3s3HVC/bDZT50WG98dthtAxuNme9M31+nQ8wQYRW2jo0hv78eV3Ohg+vW
v9vyV5H2X9Fb1m5H3o+5/3rE52bR8S/dp+IAHRKK1ms1VM9imqR4m9BiOgg7
vEtlls9i96h+W9UCDbz51VbyFM/inR/qRVenaWBuuJulljuLMr0De6zoNFhe
bfQk/PksBor5epUX0yDgj8vEQZdZDJHmnJy9Tt7/3hNnzjrOorxW7YdWZ/K9
kPau8nSYRbecwMY48n3StL3zOuXULALqBX03psE49dFRfpjFyEaPnOdyNDg/
nJ9RKDKLgzPrlb6WEmC0iP+8xscZfH0VJtynqeANst45GTPo9ch+9x0WFVJv
aoZvTZ3BherAHze6qCAw7PpZJWEGZ7bKZq0ooUJRa5eAbNAMGm+9LiIRToVd
aXkpglYzyJNkUGApQwUFY+f+PzwzGBovMyS6kQLHgoK45txpTE7QLOVIUCAA
X4k0Tk2jiQAcqBakQLf6n93VA9Mo1uftpcTog6drDoQWNU+jFa++xdc3fbB8
eK3Ku7Rp7ErcLHVJug84UQ3Ot8ymcVtr76LCoW5gO9V6Bxyexm7iamfwz26Y
1fsdHHxgGvf7vqqVedYNU5OlSTF7plGhKGco3bAbRi3zO9LlpjF4Ryycf94F
dLmXhztHp/Bhtz7Lc38n1Gdf2bQvegrvs3k+/LnQBqn1iwfmGyYxyd5DfsfW
RrimS4scvDKBBkORkomQCzN5c9d7l4/jqd6VY+JOiElfPHVGl4yjm/KVxPUb
itAkf3QxL/84xo1Tvjx/XISvvtKeKcyMIevm2y+bPIvx0Pfqogu9Y5jnc/NB
nMZPfFqcuGwoi8R84vsH35fjnup9ybNmY9iqZiet7VWD1Oq8q0LGYzg4e2BO
kFqD4TXbdksbjGGT8blXj0xqsa92fZWW5hjO2vK9HZOrw9CGZaO35cdw+MIM
n/m5emxr7dJaND6K0ypqnES+RrxJ8W1a8WgUT18Uy/BY34K0WxEGoRGj2L6y
fdnQsRY0FXvxZSFkFNPWDjdr+7eg4kFMGPQdRd9sE90r7S1Y8573fNnFUbSu
uL9p8EErynsHT3rvHcUd3trGG1l/MGat3OainyP4LE5K/VRgB14y2y/yIX8E
r0TERluld+C+uw4T8R9GUNH7s7hqYwcymMnfPJ6MYPO4+Glt+U7c+1nFZOPl
Efym1uCx5EcnUg+rX41cOYLvswYF/g10kecYZtnYD+NN+vKsa7K9+Ja5KcT6
5DCed50rfaTXi2usRM6eNhrG+tOCPe4Xe1Fwb9tyy+3DKLXF4fe5D73YznVy
OcE7jKx62Qr+NX0Y4B+x5fDrvyieecZgyas+nBpxW2T0+C9uFNr2l5HVh852
p7oPhv3Fdb0FMq+xD833r4swcPuLzwveeL/t6cON/B+HdPf/xfCM4J2z0hSs
DW7O2E0ZQorUyob74RTUn8m/u6tlCG22s5RWPKNg/qXn1hqVQ9jpdbn12lsK
Jh26uFT94xA+z7pa8q2YgjeEZ53V7gyhvkKXne8kBQdudeltuTGEGjkaYlU8
VDwzWCSt6jSE2wc6VEaXUfFQdViVyrEhXPHvh2DZeiquiZTZtEF+CNuJxRci
j1MxeuEf73rxITSKvSOYaEtFQVdau4LQEAYlvla+40jFkaMfwuTGBnGD0LN7
DX5ULFkBLJniQeREhf0KSaWi02OHtJX2gzh0dNsijVEqijHMcoxODmLZ0Lf3
IbNULNwF3wOMBvFY3bHOjzwEirXJ1A9vH8Qrdq23w0UJLJJumaniG0T5k//9
tlQj8PLln7x8MwMYXnUi9oIGgRLfPy7VHBxA6TYhM6N9pNw2ct3bpgGMsFpq
/diIlL86ePBu8gCeOkSf1XYgsHhU41jB0wG8EfAtnMeRwCv711uPhQ+gSlt6
bPxVUk7lcT17YwDfxltXmHqTcvUR7zinAey7+bPN2Y/c7153YI3tAKr/iFay
DSTlGwritAwH8Lte/MHSBwRKeqa9ct87gDzbT/BpRhFYUh6X/k6NXK9yo/Ju
LCl39CiUlBzA+460owmJpDzfvsJ06QBmB0ezL70i9xMyawz6x8ITaRfvCSeT
8nRVxkQ/CwcrdSUa0gm8ypUe3dTFwvljYcJTHwhcbSLEsa9nYbHanYLhbFI/
cYY/vpSF4idy1hZ+IvX/0v+rz2dhSgW/6rk8Ul+nWXLxBxbq1Hzt7s4n9SNL
5HVes3DryI3Nat9I+baXGu/DWNjCsfI/igT+DIgAwo+FrsFPveWKCXRp8DGS
dmdhVIrwZHkJqa/gfOLYRRbO8CkN6ZWS+u6WtqGnWci3vdA6tozU/2l4CU1Z
mIsCOt/KSX0xDbdpPRaWHQuL/PKL1D+v6LNlNws/ZWsahVWQ+rkrgs5vZqF0
n73ztkoCpQR5HiasY2Hf1vfD70lcemr4aeMqFmYekW9aILHL264koSUsPH1S
WVypitSfrXqvO8dEl77gHAUSlx76muc1ysQKMft3k//Tj39blEljolmO5mzC
//YfeFxFb2OS88n489X/23/vveY1NUxU8qyKdybtcX3g3nOimInh4faD0aS9
0l12zPu5TNzFmxsTSfpTqnp0vPgdE1fpy0fZkf66+mnPzT5nYmm8PW0xyYd0
7WbBbTFMZKlGRd0j+SqVlRa9FMzE08JKca1FpL7rEukXt5j4YDN3er6Q1C+a
VmxxYeL0TcNczncCDfVW+v85x8TRf4o/JwoIdC/d0tFuyUT24ZdFv8j4VVac
j+rRY2LBk3OPeT4TOHk4YLBvNxPlnTrcL3wkUK4mwZBQZaLei8MmKZkEejc0
zvVLkPYtC+PLSyMw+cSwxcBSJjaX/OwPTiGwrkXo0xAPE2/U17fvSCJQqUPX
aWygH+1/mM3KJBDYQs1s4RT24+9S+QJ1Mt95LlRtm//Uj3FWO152BxOo2k9/
8C+tH0frtYocyPq4N7hGT+BRPxapyDYtkPW0Y/J+5n+X+jGfIijhf57AM56p
QqI2/ajnWJfDf5bA+7PF51ce60eNiMTqc1YEUuZmpSW1+vGgisTzvCMERi26
FCIn0o86mvWVb3cS+D0kkKog0I9vxMQuCJH3A1PohfYGNgNXLt1db7iRQFje
MqFCMHDGvurASSkChyX07dS/MHDrE8f5Yi4VpePPfNN4z8CLNjOX+SepaChz
S2LPawau8RheLj9ExefrPlbve8BAZ+9olbFOKpoor9M0PMvAS4SlAeMrFb3T
98YeMmdgd8MQU/gjFZNVT40cNmKgn8/MrmVpVORui0g5qs7AatnXK1MeUzFd
k7vCajG534ecp9tdqbjY+M/A5Sw6ikm8PlAmQ8VG4TzNgDd0bGy9IlktQsUX
VbGhsU/oOLho+kM6PxV3HT6u9MOfjh82rY0cGaDgeaMa++VmdPycLSSY8IWC
RQd/tmWP0vBYINhEG1EwfHHSxjIaDQ9fPnVSXouCFr8CPNvbaOizQq3zvioF
hw11xPiKaWg79n3p4HIKrjH8evRENA2DuEvuEw19ePNAVvnUdhpOh75wbDTr
wwMCkeLCSjQM261RIKzbh6KlV87LStPQIyGtQHZrH6bpb+I7yEfDgG5nm45l
fdiql6L9tJHANW0bQw5F9OKO/Qmf93qQcR8rdzC61IOD2iFJ/p+pGNYusWGc
2Yl7tj7SO/uOihS1HnZ+cSfek3tJ1XlBxT2Lt70yetaJa/i/KCyEUPG9g2xM
5eFONK1gJPlaU1F3+xsvk3cdmHPc8M1NPioyKniXvbFpx1uXFiV7mFFwhyIr
qvZFK4opLDaua+vFscnVItuS61H36Ysd8Q3t2NdoLP4l+TXaqSit82U0oV9o
m/V4dAWkpu84crG+Ca2vCYRLcSrg72bwMStowlFZ5QuiDpVwS83yz/rIJtyf
dvav0/YqeKR+/2GNRhPy/q69lFfzG8q1h//JBjWi3o5aiuBcLWw+ntdXrNiA
ktF/88UfN4J7U8ny9/81YM2enqbzZY2Qb163L26mHq39lJ8+nGqEAxbMp86/
65H3Yftbz5NNcMZG+tgqj3rEO1VFAauaQaFmLrDyXh0KmV39vDO0Bf5OhR8Q
KalG5/6vYenH2oAznOO6OaYaV99fsDsT0AaCzLZnBx1Iud+F6x2ZbSDbsX7M
n68ajQQy01SWtoNp4ffno3q/0f0orXF1cTtkBw9NN/ysRIczVvv65DvBXdLk
XWxZOQq/yxK0+9wNt0Xdm7Mfl+Ofa7Pelp3dcF/o6b/qC+VYkOM6tYyvB5K4
xMlFguXYYM19n2baA029PnyehmVo8mRP/GtaD+xMy7C2+PUTU4/7lbzl7YOZ
PUuXS1cWoefp9aJfBCggOEv3O5dYhC88vc3TVlJA4kvR3/euRciuXZzvJUeB
XRqeNSBRhKVDXq7ZWhQYciiR+l1eiKI2VdnB1ygwcMJF0oH7DTutOhhZTRQQ
blScmXz9DU+sK+nw7KXAJrP21pBD31Bby8lCepACTiYH4j48LkD6fGvkNC8V
mAekxdlbv+JukdYAXjUqMDTKV0adz8N44dBsU38qCH72GVdYmocP47bMNoVS
QWnH9sbcj7m466aH984YKlxQS4zuXPiMpZ++tgUnU4Gm5C66Mf4TsvZuknf9
Rc5LKRtHv8InDEyo3VldR4X1it11Jowc5G/UmuRvo8K5dYceuqvnoJSlvwY/
kwpUSdnlhTXZyDdxYikIEsAX1/TX7Ho2dh6nlrr+R4CCWFgNIZ2N9vL9WbfE
CCiRY0qtqs9EdvsXqqwCAUUrYiXTBd5jol6q4UstAniW/2utO5aBr4WXib/a
TwAIO8dNvUhHGyuLD7cOElDIpyu+X/MdJgh6/PfjOAHfJgZXtl1Nxe1RalY3
LhFgNTE5HlCYgsaZIrc2XyFgZny+UUUkBeXYa6K+XyNAfVzkkU/2GxQd3nzT
9SYBDWOrPdbzvsETZ+O0ov0IcB2TP1FzLAnFMxYaIu4QkDGqvmrdxCv83ppi
IxlGzp+j+yZ+6b/Cx+/u6SWHE1Db+yCVovwSxSxf9y6NIsCwJ0sp6HIisoSp
Gy7HERDYXcxoXZaAptSeEod40v6uplTlzHi8ffz3ws5EAnZ1zihVj8Yh3N+p
4/SaAPcOof61MY/x943S3b/fEJDZLvPWVT0WB8ydvy9OJWCgbcul4uYYDNSl
/pJNI0CpDTau8ozGL5VbT4mmE+Dw51j/eckovMP74lxXBgH7PvwyveoWgRn+
OBT4gYDPGYO1op/v43knl2H+LAI2p4sc/TwdgnJe1RfOZhPwJk29zkIzCCU4
emaPPxIg89biKNcnELdSAjNScsjzjGdeaPv5o8WPezeiPhEgfghe3uO7hfZl
oe9PfiZgkUHIy98h19G6XeLoFIlZd1/ABmkXPBS0YO2aS0CFn5rup/Xn8Aa/
ReNPEpuN+N4JPGOG63X8P46TuNQjfCpo+y4oqV/L5pJ4h4q+r4GXNUQvkX/X
S+KCZ9E/xD46Qj2tsPg5ia/WB5zRb3IDQ4kb+rtIfLtpz5m5I15wZmHJ1nfk
+ZGto7a5Fb6Q/SEkaJq0t+5Ks9oX+TvAQzU4JEtiC5fszFW9d+E7f5+3HOlf
n2u42rXEYKAp7JWaJ/lwdHPMrLYKgzsT/ps/k3yNuh9QU5EMB7/K9TkGmQR4
X5fLDGqOBIFYIuvjezJ/tRYkxiqiwKytcOMsGY9SraFTLzfGADuDZ63UOwJM
tCtaubRYeMJvGDmQTICoTp5Eun4cFBjpr0xIIqBZJ/mUZdIT8I59pqj0igAb
3YDWz2efQfQTG97qZwTI7XeROFeYAJ1X5/4wnhBA229zasXa56DvZmfWFUvA
Ff09rVc7XsIznxFti0gCViusWhqZ+Aq8ysOw6z4BtxSEN9ONX0N2Zjl3XwgB
Ooqzzo/Sk+DgRvGiCH8Cytc3D4xcSoFa00XGbi4EbDJ+UrtRKRVuhPdOXHQi
4KHb6ZyztFTg+RUlvP08AZaFfTfr7NIgyispW8+KjLfF3yVZVhnAJykAtmT9
mt7OHmJIvoe9/zl/mtlLQE6yR71s63tYm0eZv7iTtGeM/STyeCZ4u1mZlSoR
EGxwd9WXlGx4b97y0keIgPy284uaBD7Cg5PhnoW8ZP5fNpwZPvcRFi+peNPK
poJpjFCnkkIO7ClWNgphUUGy92FS3ItPcFti9NdgORXSvBO3ez7JA2F+CdGm
m1ToWHpbMWY6D+BbzLXrrlRY9vKseObJLxD6Zdp16DwVrpUpsOmr8kHggn26
3VEqaK58V3Qy6is4XPcqsFGgQlVG7lGNsO+waz6k42sRBeZ0nuw/xvwOA/uf
L274RAG1Rm/1qwd/QFtlk3dRKgViZrUkUxYVwl/po8+VwylgbVDSIxaIkPfn
oab8SQp4uvbvuqVdDJ3Xl+yp6+2DZR6Kgx1OxfC+5kdCQEMfvPY8+1Irrhii
nmetW/GzD6r9/iyeHy4G7pOr7LqUPpAP/9Xm/6oEytRMpSucSHna21tB/KUw
vfmKvPefXlCgXiqMqiwHRdVMiuzHbsinv3EfmyqH0E6dsKLwbjjC6lU6rvAL
pOzZLsqO3eA9avFwlc8vkJeNXWUi2w01Cwft4lQrQMzEI3sgpAu8ZZT5Eh9W
ApOSLV1u1gk15kyDtyerYXp419OV39qAai+5uSioGt47Nn51C2+DWRdD0fbc
aggp5Pg/tW2D9WHJHcISNSA5RU3T+fcHfH/Yubq01kBxYfgxNvwBVaX2pxoW
dRAevLEg9EsLlHFpU/aqDfDym8u/LYGNoFjTcmh0SzN0FUv5foFfMGT+izUh
1gG6DQ4mOl2pqLNGbtI0rhduCfps6PivHtcI/PTeltkLa5vtvWb065EzeGF+
RXkvPPwsv3r0Zj3mfssQbJnqhc712+zd6PUY9yEh/MOmPqBE81FTCxpw2ZGN
L9Xv90GEf4jZDdsmnH2gUwpGFBCrHsh2u9OK/f8eBm8j4xgY4cwjntOKrR6U
Q/L2FJg/57sjiNqKn6zv1fDdpMCV5zcjqvT+oMvmqtayNAocbPY6183ThrSq
kyzjJVSo7j1q+su9HRuEri63JN/hrzm36bRNXahjEu3v10gFvadW6onHuvB9
ZO5oUjcV7BMXL13j3YWhqxYa/05QYVbvjdr10i7UXfvwyV05AoLUdOD26W7M
3PZRLot85xzDisoKfHrIOaIluvkeAV7Zur/bXvTg/Vw2H+chAeEfHQYKinvw
4l49+gHynSlzq3WqEuzFtQea3nU0EnB+94yGSGQvhltM7RBUpYH7rt5Rn0N9
yImXSt68mwYSgSLRayz70LFLW/yYHg2mVbr1nl8i+3P74JkESxq0/dS8oBPc
h1xnye/bg2hQuCnJe664D51vaxrY9tBAe7es2VF1CrYV2eYFsmhwr7HqG6FL
QUP+wI1pkzTQP5Jz+5QpBeVDq4QmhOnA8fud3OpI6kdb14bupkPulM03nUQK
Hkzxs/gcRYePG37pxM9R8Pbip3GvE+iweZ2Wf+1iKuY55bREptLh3d6yf5SV
VFRS6z/h9J0OTUnzbm+UqSj4xcxMlkmH8GOP/0Ucp6KO1OWHSyfoUCgdrPjJ
hoqePkG1s/N0+JGyaDT3ItnXQ4FJ0yoG1P7u0DK/RcXyCkWjUGDA3LaUH2Mv
qbiwSSf0xmEGSE3w6vORc8SuCMtfDicZEHpOdGCEnM9Sj0UYaF9mQNXTpjMO
P6kY3DG9fzyOAbwfi/cl0ahoMFS512aYAe+J3d535Aj0NaXdNGIzYMv7OHNb
cp78nL2Qv0ugHyQf13uJk/Pm+hvqu1dI98NUUeAFaS0CBRYS1csN+oFP8UfW
jRME7rP74v7JrB/icodjdpDz7PWSho+vrPvhcLut0+8zBNKCBbf5uPWD07DJ
7ygnAktFrqlue94PJyVXuTv5ETjndv/y2rR+6Pcc4QqQ8/TO5uR04U/9cKqw
ZpcvOW8nP21Xplf0Q1jqqzfzkQR2cSYuNTb1wzsvk4rFjwgUs13+Fnv64dxr
x7t/48h5XF5/w7PJfuB4OqQYvyDn57u250P+9UNU8Ebe0tcETtK93lwXZkJo
8eZuyRQCz6e/lz8qx4QTb37yHc8gMHHZL7t9m5mg9cRVf08mgc0ulJcqu5hg
bfFgnJ1NoL66hKyACamfaBghkkfaY3HVqdeCCc8KL3jF5pP++5Z+LjjHBIGd
X/WGCwhc9lqGJ86VCWt6qYNrfpD+lLkbu/kw4c4w3VUOSf4GKuNMQpig2qlU
PVtEnrdcnrrxERNeXbi8kFLyv+9z3lv4XzLhaEyHgHIpyb9lnXdPOhOoyXPd
t8tIe32VSr/mMSFZ+ltoejnJ32s/kcclTBh5YyeQ8YvA6rLm09dqmRC/Jt4s
oIL0d2BzqnEHE8Luul3dVEnyv/zumBKDCZpjFtbvSByr3rGPb5wJRyJkZOZJ
rGq5PbR7ngl77g592PC/702+oU35Qizon7IWVySxzete2VhxFniOW5+YIvUn
y3Y5u8qz4J89OCeSOHwgIvfwFhaYc77a/O/703oROo+SJguILX1bnEh7vqvv
M+E1YMFT6Y2USNJec8tHT7rMWFDtdf5WGOnPkO8A9YsNC7Tu1s5bkv4Gvd6v
9siRBUJ/ua7zPwmULX960+U6C/6UEC2eJF95AyOlRgEsYFp17ywj+TQVOSi6
IZwFqntexTALCWSov7DmecqCpDn9qb7vBN62nErtfMMCd0Pdc5lkvCT8TMbz
slhwNOEKYUbG07CcE3r1Fwt+2cTsFv9EYM/AseZDTSyg2UnJ7CbzwVPk3br1
vSwQvDC4Ve0DgamWFnkd0yxI2JkimphKoI5fJm8e3wAEm4mPrHxDYOvrRUei
lw9A1e8+xbMvCRQc/EQcVBoApejMr15PCHwhsnSr4o4BMP+9ddsBMr937XS4
taA9ANNcIWUGmf8X/URX5J4cgEi+lqr0IAJ/iVzVUQgagNubUvbucSPQbmdp
2HzUAIzF7pHMuUzgrKVMS1viAKw4WtLFe5FA5aTKyw8/D8Cg2XVbxdMEhu5U
ip8jBuCl5Geaqy6BclZ+tD8jA+AWWpf7TJPAfL/mrZ+4A5Dw4+twwg4CmeWB
5U6rBkH10u4e+fUEHrLqnWjVG4TZHMdP2osIPGsiNMw4Mgj/ThpZp8+T9xuo
M6ctB+HB7XbTiSkqJm8I6ZJwHYRvK9dZSzOoyDuuVnYqYRCer35LLyylYsH9
23GtE4NwYE1rmJsPFRv80qIYC4Mwr26/K8ONisxrjfenhYag49zBkyWXqChp
oeQvITcEMV8a94WdoOJ1xdpLp0yG4Me1Un5fFSpu+b5WszV5CNwfZ1UuqaPg
gayD6oysIRCa7alX/ElBmyS3LdMFQzDuypez9gsF74eWyUs0DEF0ZPz5zBcU
ZJhfFT41PwS3VR8YGV6h4Ku/3ztbTv6FTX1S1Rd5Kbhync3tFsFhqLLQC1YV
68Ow5pJ7TSuHgVdLu5yHvw957qs8aJAdhnam3eXzRC+OTE4/qdk1DMMrJsNO
P+/F6qroj2UXh+E31cVgxfJeDPb8RcstH4beB4fOjlO7kVuzwzgueATGH0yq
D9l0ovvd+GOxMSNwgP0tK2RHJw7s4bGMeTECFsyE98zFndj2puZ8ZN4ISHp+
yJz72IF5Nx1vBzNGoH/13EMv/g7MX1lnqaU4Ck8NDv8nmtiG7oUC4ZvvjsLm
iRq1hNQWvBrwmlEaOgrfpQKVB7xb0FFPZ/+ZyFE4vdrh7ArjFjxb7jUdFT8K
c0EJTNZwM5rUDthNZ41CZ3zY9pqdzbihp16juGsUwkzUnmV8bcS2+cTeU7vG
wK+rEmLN61BHW0M9kDUGuUH3vx/2KsEjuSrxjYcm4PcO42qtt1lgdzMvmFY2
CaLWTQoPyhoge1XrBo/fk5AvPdyhMN0APJlTpbwNk2B0Nz7ouVIjvKTu5F/X
NQk9m1bF7g1phB7jT/5W45NQbCfXtPRgE9jKZnvXyk7Bq9tHRmqKmuH0z3fO
+V5T0CCz8ubcsz+QblspdNBvCmIaVt9x+fUHODPMtJbAKYgNF9X8NvEHnqkq
949HTIHJIYUqwrgN2h+nntuSPAVVSz15LnPawNLxjU1S/RToK4tFrTPrgJP/
PTcNV5mGVX9dglO6uqB5SedE9NZpcL3nmXt4cTeYC0jFP9GYJvkR0vy+ncTc
WCJp/zRE2xcc5w8mMSvc+6vVNEit9r4no9oD5mW+SYywadiR8CxA36UXjvvZ
TOsOTIPLRq3AEFofNHo/SzAcnQbNp20aV6b74Pj1Nl2T6Wk4eKZyTn0JBY5f
Nn9gwTcDa8Yfel7ZTIFjViZyLtIzMDL5bon/NQqYaew7nHB4BlQe6CnJTFHg
6F+ZF1PpM9BdoZH/s58Kn2fNN/Vmz8BR96At76aosFogMq8ibwZuF8pwr/ET
QJXmqUsomYH4XjGft7IEeB6i/dvfMQOReQoKWScIePHmvX2k0CzUi5ckKuQT
wJ9F/+slMguxiz5MqZSSfWSB7C178VlIOcvevaqenM8bomJ2ys/CcvbIxQf9
5Py4cP1nx55ZEKen8q4Up8GwlfaGjY6zEKkSmnXDmQYnLnh+FHWZBa+IhLXP
rtMg/1qWNsdjFjriT5q+uk2DwBD5UzX+s/BO4cvMsRiyr8xdFOLxZBaO/dp1
83A+2SeK1jKxfBZkt4VERy/QIElm8Y131bNw9IhWfqMgHQQ36vI+apyFa6pp
RVPL6VCvnSN1sWcWbrA+hVBk6XD+ctzhZdOzoBFtfN1Mm+zzys+8t9zAhot3
/aqjrtNhmyZvVNcmNhiFWFcE3aJDS8YbD7ttbLD5HkDYBdBBNpq511GLDe7p
/jGVD+iQbe1e6UVOLozPP+MvvKaDea3YB+4pNvCI8pwMJ/tMtu6XKH8bNnjw
L3WOz6CDntKcRcglNhBXDEsu5tKheTSIEefHhsSjLtJ1v+jgfU65SvouG3Z4
TkWrVNNhbWvVhxehbBCItHvnXE+Hi99EbqQ+YkPGF4OeV210mA2K5897xwbV
A1mePf10SJzV6tfMYsMNfX8+10E67L/cU/XjMxsuubr5M4bpcN9MMaYM2fDr
Q6z3/Sk6rJH5INfSwgZlbdHkt7wMKIo4KmDVyQaF7LmJawIMuMAz3t/Vxwbx
jsXR8osZkEnflUUbZANdIprYs4wBxy3bYxzH2KDfzpPzcjkDZqp8PIem2XBY
x/3fX1EG6GYXaU/ycsAsinN4vzgDaArn5L0Xc+B8q8E5Q0kGhD1etGhuGQce
cDlq6lIMaLx1uJp/NQfu/iyUKF3DAM+/Q1khazmgIapt6ijLABm7h4+WKnLg
h6TAtcl1DDhv0Hx6lRoHLJ9MppcqMGBJvqfOE3UO1EcW9y1Zz4APm6QUZDQ5
oFO+dq/GBtLe598WvdThwP7DX8uMlBgwLXKGpXCAA2luTjGGGxnwLJCnJtWI
AzIvlbM2KzMAppKyNx3lgJyAxGY2iWmXDGIzzTlAs78hnqVC9vEd/V47TnPI
/iDT78gmBqgeuW+dd5YDYo6mHs0kbkBV2HuBA/LbBQQPbCb92VGnUOjMgT95
bwwSSSyd4iaod40DEz2Ket0kLpQUGyi7wYH4lBdLF6sywOF+Xo2RDwe+dpvl
SJFYcN7yY00AB3aPxRuKkzjDlRt7LJgDdq+4bWxyfYD+99sm4Rw4XbRhawmJ
zSX9HA/GcOC13PXXriRWGdQ+rveUA3tfeRvwkXihcEFL+wUpl5/Ydou0tzEG
N+xJ5sCUcsPNP6R/by8GiKinc0Dh1pZd0iT23bufvSWbjFfeUV89kg+z5XyE
ch4HTLkZDmYkf+upJdWK3zkw70f9p0/yy869mydbwgGeTei8luS/NuzAK6kK
DqhoaxZ0KTIgyXbRfbFaDmTT3BcFkvHz3F7uIdLMgcK2/HP/yTPAeFGIrXAH
B/zZd4Zuk/GefL9kOw+DAyIfjLrEyPyoCKiU5g5yoENnkYemNAOem98XmB7j
QMH2H48OrGaA4dzStsF5DhwStWpeLkbyXV9dzODnQq6f1obaFQyy747IoAhx
QfmehMN1EQY8NRbx/yPOheNVZ/g9hRlwZV29Y6MMF67Z/otvIPN//0TU8Rp5
Lhw8vxAgtogBA89WKv3cwoV6s9WpZv/ooD0gXpNpwIWbj9NlU8bpsLKwNe+d
MRei2zcK6YzQgRH95FXyMS6crkxZhWR9RmlKXX9mywWaxuKJmzQ6UEPXyATf
4IKqz9HfLc10yLPpFrjjwwXkaUzOIev/wbYXwz53uPDwrJOnN3k/7GxbV+IW
wYVHDzWu4U86BG9UdLJN4YKVkU2l9kc6nOYSxy0zuFAbWXb1wns6bK1L3nfi
Ixd4/rJZnm/p0OapJGr0gwtqY7mdFs/psKlc5cvOFpIPe+ovsVA61J3ftmjZ
ojkIX1e1LdaKDrSXpw1fC8+BWfbs3foT5P3TcS9kl+gcJB9MWMM9Qge5Y+1C
9jJzsNgW/WX06HBNO3B53vY54F50/vZAhQ6iEs2SdmfI9W0XU2GKBsd/eW36
/GUOShfNVCcH0OAiX9Jlox9z4D7oL9jhTYNb2tXve0rmwKPh0TseN/K+/yS3
Vah2Djo32j9SsKfBxMtK9TO0OUiPXFbxTZcGsd4y2ktWzIP01rHTp+cJaFHB
ozbO8zCea7Vi4QoBtddpXi2u8+D8zGFvyTkCKlDolemNeeCbKPb1OU1AwUnz
Ud2AeXiyPyWr5iD5Ht5hRW2Im4d7vl6+E/Lk+9e+qnG4mJR7qK893UwFTqij
+R2pBag7GTSvvYMKsswVVqkVCyB4aiH6xZ8+2HVzYdJSgUd36nxc0m27TjBl
vEp/18SjO+ntPK8T1AKpj1Sdi1t5dF0zqyPnL7fAgm6+Sns7jy73RWV/+fEW
yEqoS1vSx6ObmBt+45ZcC4geW0i9NMSjm6PxL9rxezM0fLN+s2ERr67a7G9b
3+kmMI+WSHy9i1f3tvF0j+n1Rnivk2T9VZNXd7LbX+y1TSMIDG2RadjHq7uy
YW0qr0Ej5BoaPOPR59UN36y2b1i8ESTmPJ6ePcqrm2rj+NUrvwH+XGyIXevI
q8tzsH3HWZ4G2CZma65xmVd3SZNjymtWPTmXM1cdceHVrV3dWD3RWA971vA8
8r3Oq1uQZB/8K6UenjaoRXcGkDhCOF3NpB5GbxeYTdzl1c0yY1eNatTDIVVD
0aUhvLo5Mp3bf66rB3aw7cO9Eby68vO+Kjv66+D4Tpbp8She3e8Rl85pfquD
dMr15c6PyPM7Fn+wf1gHfA95au/E8eouOjG5IeNcHfy//zvo/v//O/wfqGhz
rA==
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwtmnk0VW8Xx5FMDSoikhJKomSoVGwZy5Q5lEKkUQOJjEUlCaVQGkxJqKRC
GjYyFjLPwx3OveYh3HtN6T2/td5/7l2f9T1nPc/e+7v3Oc9aR8b1gpU7DxcX
VyL589+/477Ie48fcxcteVK3x3BpCSw8ogi1xHEX+VYZKS/bVAIpY+rhqx5y
F2VHqIaNQAkMpHTfuBvFXfTup8bFWa8S8BXc7hsYyl3k+K39jUF3CcS31Lu6
nOcu8gxmPU/7+AOaLorv3rKfu8imXDfkgU8ZHHqZQivo5yq6WOVZwm9UBY61
fV2fGVxFjEmXK7TTVXCSo9RaSOMqEux0SeiIrIKgg/m/vnZxFQ2ISvDJNlbB
25FfH4vquIruVRnbiLj8hKU7WbcqC7iKbDe4HPa48Qsqy422toVzFVkfKNnp
11EDuv3DXhwFriLfCG9TAc96CL8lqtIytIAgcljr76MWOKh39/OPyL8o159x
Np63C/g+nv4yJjyPPzF0fHycAhHl/KKuQvOYnpt/InCOAsvaX55r4p1HKadi
i8V8VBBdoK77PDOHXbHth/jXUkHmgGPIDfocagX0EPX6VNjXZWywOn8OZ17U
ul+Kp4IXr9LvPcfmkDvRScZ+Nw3YYj83v7Gfwwnv2xtVdGlwbcupkPXWc8jT
lG/CbUqDEPO0HbwH5jDe3P1n1HEaRCVIPazZMYehV2PdbW7RIFNpmYPz4jmc
THx91q+BBhSbUdrN7FncVPGwN82NDup8nhrX02fRI5oqvMeTDrfzR24HJM1i
zCfhk6VX6bBNckTJ6+EsLuLW2VgQQQf/3iEf54BZ1G53U5bIoYPYmQGhvaaz
uCR6YVv2NB1MggnV8aEZtL3K43s2hIDnKm43hxgziOKFSj7hBExQ6a3M3hlU
0lBbuBxDQII+PaC7cQa1Nd7G6yYRwBSklf/8MoMB1r4Cu5CAkIe9ji/vziB0
tUk5zxKQ97rjhuPWGdSIzpUSdmeAnMnx0UvyJJ9ZbSlylgEPhukOd9bPYAT7
nA3/JQZc2D6iUiAyg8XLhL2+BzBA4dO/ntXz0yj0nLv4ZCwDEovk9tZXT+Pd
9grHe98YIOT6Or2/fBrLyk5lhZUwwHfRtlVcxdN4Li826EwFA2wMdw1s+zSN
hX8rjnDXM2B59cH4yGfTqLo4vMiBzoCQVs9JI89pPNpiNpjKy4RR38ljx09N
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
z75X4NLWH/h9J3wNOTiE9KBrjiVRP1C0bW3d6I4hDI8aGVtiW4pFks2cnzxD
aJlhY6hIKUOxJCOj0LRBfMHlvkJ4vBJLMpWYk30DeKJnNOPIRC1KFrFlmz37
celp2zQHlWY01F0V3HqiH6PD4hbvcmjGy6XKHe32/bg8f3iYc70ZqyrdYnp0
+5HT5+Ip29iMvvUN831i/fiopWnzWu8WbKa9bZ793odqxdqGTjmtGLPY4/YG
4T7U1JGMyV3RgV9v36Bt5O3DHze2qcdrdGC/4HMt+RkmGr3YmWXv2IGwvHly
C52JjOR0w0upHTgqpuesls/ECNHk7Em1TjRVWK9peJyJ3RoCiSvNu5DfpHXw
7DsGGuRd33LcvQcbhPI0Q1IZ2PZem18jvAef/3wY/jCegVlx4pc6Mntwp7HV
pm/BDHQqzVwcO9aDbgdrXJZbMLC3aELok08vFhn9aMsZJ7ByYIN8uRYFI/lT
NpcRBB56634pyYyChytCfNrbCNT2Dq11dqLgqKG2KE8xgd07fK1jAygoZfj5
kPV9Ao+pPy78+pmCfvrvylk7COw0V5Rcsp2K+rxRq4U2Edh1SDxpjxYVV5Se
c5OWJPCbZXamuQkVM/QUeYx4CFzLlT4u60HFFt2XWgkNdNRMOvct5BkVVfcn
ftzjRccoZl/7GC8Nh7RupwR/pOH+8MKgld9puHt7rO7x1zRcunhSeaqChmEb
XtC0n9NQc7Tg3dd6Gkotyt+4cJuGUfp8EwsEDc0rmSkBR2h4esxnyFCIjrlW
hql+PDT8KzU023aIjgt6VnoOHCr6Oe67ssqejiYax+i7h6nIjPcdU3GmIyHu
IzvdTEXeF7s+Sl2ko1j3y1Sf11S8Ktqz520UHa95LE7zsqDiZ+8lT9+V07Hc
fqW+tQEVhbbGN6nV0FHEeB2huoeKG09nOT9tpGO2kobchCwVPbWzzCQpdOz5
45Z2kUPBeV9H/0oOHRXpF/Uthinoe+/0Ic+/dLzaFEBsp1JwuXPI9mkybyvy
H8qN/aSgfRZ7In8ZgboBpWnnn1PQ84tEJlOGwKjzdfpmsRT0OePGlU3WofNY
F6EUTsEBSwV5260Eeu+fkhu+REHvcbPvVuoEpvPJvTxjQMHiGa0rs/oETnC2
GxjvoeBVPo+w7gMEwsBexpbtFEyOvLktzZTAtl/W8gNrKHh/mrKvy5pA0Y38
Jr/bevHm3ZQstjOBI8EvL+cW9eKnr8fr1N0ILO/We/IooxcVBvXOW3oQePVx
yMAR315Udt84I3+eQAuO9Epw7sVvNL/u7gsEKth+273xQC8+qcuV875MYMeK
2dv94r3kHBit3HuVwFzPhHe//vXgcOvKdef9CLxbvbP1bV8P2srblQT4E+im
2Lxw/3cPGta3fTwTSOC+cK9NV/J78Ne5sfGdwQSuZq40t3/RgxPCCl7UEAJH
9XKu7L3dgyedD+4+c4Pcb7L5M+kLPfgw3kqrPpTAF/+GS7kP92BQuH+w2E0C
fZ3uDhPaPbjkpfq85i1y/1+2iFZu6sFliza/33ubwC0SlXuzlvdgsbP607Xh
BPJcPXkiit2NfFuufmknuaOJ9+6lnm5ce1V3mc8dAj+opubalHfjjMTGmHGS
I2P2d+x6242m8R26ByPIeEZ7udfGdeM/5dNyISRrmQZtWQjsxqNti9QfkSyW
KWVJde9GipnEpXCSR/m/+JaadWMor2WnA8kV7g5JrzS6MX/H3cuCJCf94FRE
rOvGPz8pO+PJ9Xxl4sbOL+7GupupCotItgxWF7cc6cK+VqcDZuR+FbsbtNWb
u3AJuyHuChnfor2XTop/60KrxgXRADL+rgThqNm0LkxaL1bqTObnI/vNp+7I
LmwyuPVSNozAezam3UXeXRh6mlVYSub3ZO4gb9rRLnR20+XTv07OmRV3lG7r
d+H2H2F3ksn6jP8q8zcT7cIdxif2c8h6Vm5xS1WZ78Qbgwf9x8h6J9/m+SVC
dOLulkJOGekHKz2Q7PjQidznoGyZF4Fbk7v3f0vsxD5/13XBFwnk/ed/Oim0
E+lx28prSb99KiwoOGndiRavzSUFT5H9suYw5eDeTvyq7lM7Sfr1pA+LX1m2
E9cTI8RXFwLXqKoenpwg53gY1XTQkdxfdF1QS0cHVhhOZZgfJrBqxDP9c0kH
mn0JC7hP9sO111ms4AcdeOFmfnKuCYHW/MbrTlzrwLOluf9ijAhUcu/XN3Tt
wFte3SNmeuRc3SD/cKlqBxZadT06sYdAnYTnqo/r29H5eVDPAtm/YXkW34c/
t6PCIqOxQbK/q5p4jHVS2nEAchfypMj4V3q49F1uR3WrN5pjK0m/RGyP0RBt
R7/1m5ZRZ+mYkUFde2e+DUuIiIWaKTqOlMe+6iLaUOyRkXriKB19Fk1/D/3U
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
KdtVcm/DlhL8//eZOv//PhP/BxAKcfs=
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#3"]& ], 
     TagBox[
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
orh+8laChZoDE9RF/TBY/F0oFCo4jRzqlTfZxJD/d/8lDtlqTyMDp8+7Gqsx
aAedfaz900igoDPvaj0GzQFdzx4dmkYPiyx/8rdgULN8zZFys2l04VmoO6Uf
g1zh+/myZ6dRyJqRIQ0WBk82n380ET6N3jQdDgqQxCF4aDkzKGYarUdDUXKb
cAh8naK7JWEa+SQNnM2TwcFXcYCwTJtGWHWvbaoyDufUjjkVlU+jaa3u/Kp9
OOge1NIMHJtGsmp/1eYdcJBe3eSzNDmNXKUNXIMdcViknyv040yjn1im/DIX
HODBM50bS9OIoZxJbXbHgdpIoIvr2KhGp+lIpg8OMklPAsak2EgnmEeo/AYO
lCvyVW4ybCT5N8v98y0cKsWOG7qostEo1Xpl1D0c9E7mmtkeYqNr77mW95/g
IKd2JKzdkI0ST/mf2RCGA+/S8HcLMzZ6Z8uvlhyBQ1XK2uOmdmwUdEVwyT8G
B4NfVxyoXmwU88J92aMkHBTKBRI+e7PRGcfxY2+TceALSx7Y58tG1w+suZ6b
gkPNzhZnrftspCVmcPpVGg6GNzXcVJ6z0dkFAaXqDzhsNa179y6JjaZnekrd
P+LAv9l5TCGVjfq4c6Z/c3Coo4Vd3PKRjUo8NW7O5eGQHrU1OzGfjTTiWdKn
C3AIOVcxtaGUjd7K2XUWF+JgLDDpLV5D1vNOIuRgCQ7b+oLyI+vZSGAkLux8
KQ4CWZtnRFrY6NSoSGlwGQ6jdwr2hHay0e6ywtUx5Th8O3b0pmA/G6He3mfP
PuOQIYuVBtPZKFu9zTyoAofHhN/fZTjJQoL67oDDkbgs/0UWG00eUGAt0nBQ
OW9QeXuGjcyKlfLzK3EQ2j/A+2eBjcYn3n09+QWHX6t8DK7zEGiF5wlNDskN
gyuDCX4CUfuXzd+pwiEr503dlVUEuvH3htwfkkMD9wtOriVQ6tPnua7VOFy0
bj9yQZJATw1P5FSRbLb1QujoJgJdqy+VFavBYfscb7OrHIFiE+pXWZO8qv7F
6hElAuWIpN8IJnkiYZflaTUCWeve88ggudGrPurHLgLpLoaRYSDvj850nNhL
IL9maW7t/857186v6zlIoKTmkJf/G784Emlno0+gzJzd2HuSjxYoP28zJtCm
rPi2oP+dz44O0WvNCRTjI+tvTvKljbHbyqwJlK2VZc9P8l1zsysfTxCo8uUn
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
E/0fGhT/3Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#4"]& ], 
     TagBox[
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
MD6dO2KUiv//nkr7//dU/B8mddX+
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#5"]& ], 
     TagBox[
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
3/016f/vr/8HQgOXZg==
        "]]},
      Annotation[#, "Charting`Private`Tag$8976#6"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.2, 2.2}, {0., 11.712798087706247`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7747993024150467`*^9, 3.7747993392705393`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f1f8fb3c-3d5d-4af3-ac10-d805ac284a12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Random question: What would you call the person who works with phones from \
Zagreb.\
\>", "Chapter",
 CellChangeTimes->{{3.6495116596410866`*^9, 3.6495116625113735`*^9}, {
  3.743868811263337*^9, 3.743868850322177*^9}, {3.7438689694935503`*^9, 
  3.7438689921989317`*^9}},ExpressionUUID->"de410b13-d338-4fe4-9e21-\
c84869f5e236"],

Cell["The croatian operator. (credit: Juan Cayuso)", "Text",
 CellChangeTimes->{{3.7438689102719555`*^9, 
  3.7438689398373346`*^9}},ExpressionUUID->"2b69e2f7-7047-4009-8746-\
5e5e6dcdffd9"]
}, Open  ]]
},
WindowSize->{1280, 677},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 411, 8, 78, "Input",ExpressionUUID->"f0fcde3b-8eb7-494f-94e9-1d1e2e1b4bd9"],
Cell[971, 30, 476, 9, 93, "Text",ExpressionUUID->"1368cbd2-d37c-448f-b9c0-4a76471d4c82"],
Cell[CellGroupData[{
Cell[1472, 43, 176, 3, 77, "Section",ExpressionUUID->"5c2fae93-07e2-4463-bb5b-5f495628cd7f"],
Cell[1651, 48, 4712, 126, 567, "Text",ExpressionUUID->"058e7e0c-b727-48b0-b508-8bbe60e89aa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6400, 179, 277, 7, 146, "Chapter",ExpressionUUID->"bee69d04-03f7-4196-84a2-10dc88c57b9b"],
Cell[CellGroupData[{
Cell[6702, 190, 380, 7, 107, "Section",ExpressionUUID->"779a3ea3-732c-4717-9757-f5d9cf83e575"],
Cell[CellGroupData[{
Cell[7107, 201, 355, 7, 70, "Subsection",ExpressionUUID->"6202d24d-6e1e-4d22-874b-1627339da5ad"],
Cell[7465, 210, 331, 7, 67, "Text",ExpressionUUID->"69fe17f9-08c7-4129-bb73-c745d68d6078"],
Cell[CellGroupData[{
Cell[7821, 221, 646, 15, 52, "Input",ExpressionUUID->"d681b855-06f2-4c1b-8bc0-868c9e39efcf"],
Cell[8470, 238, 382, 8, 52, "Output",ExpressionUUID->"0e99a508-1c58-4831-937c-5d88d3349a93"]
}, Open  ]],
Cell[8867, 249, 245, 6, 67, "Text",ExpressionUUID->"328672e7-50ea-4584-89d7-a1ecef2b4b30"],
Cell[CellGroupData[{
Cell[9137, 259, 579, 15, 52, "Input",ExpressionUUID->"4f5332c4-2c2e-4f21-adc5-70d8396e677d"],
Cell[9719, 276, 303, 7, 52, "Output",ExpressionUUID->"be2a24f8-91c0-45f1-93ea-e7f5f4650766"]
}, Open  ]],
Cell[10037, 286, 318, 7, 94, "Text",ExpressionUUID->"263dc687-29ed-476c-a3b0-9aabb6b693d1"],
Cell[CellGroupData[{
Cell[10380, 297, 528, 14, 52, "Input",ExpressionUUID->"b4c19b16-c7bd-446d-a07f-9b9a101624be"],
Cell[10911, 313, 227, 4, 52, "Output",ExpressionUUID->"4764b00c-c715-4843-b147-43c8591cdeb3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11187, 323, 175, 3, 47, "Subsection",ExpressionUUID->"df7ea163-3875-4f09-bff5-5fab68a44481"],
Cell[11365, 328, 527, 9, 120, "Text",ExpressionUUID->"97573b31-b480-4a67-8e8a-10de20d796e7"],
Cell[CellGroupData[{
Cell[11917, 341, 180, 3, 34, "Subsubsection",ExpressionUUID->"21c2a337-caa6-4de7-b2e6-1b139b010cea"],
Cell[12100, 346, 298, 7, 67, "Text",ExpressionUUID->"e0413200-ac15-4d75-953f-a77040591215"],
Cell[CellGroupData[{
Cell[12423, 357, 473, 12, 55, "Input",ExpressionUUID->"a8a8ead1-2053-4d5d-8067-27849daa2f0f"],
Cell[12899, 371, 407, 11, 55, "Output",ExpressionUUID->"c82bd969-c6d0-4475-b90a-1ac95ee0e7d2"]
}, {1, 2}]],
Cell[13321, 385, 252, 6, 67, "Text",ExpressionUUID->"a2592f48-b45e-4a1d-baa3-be498a291aae"],
Cell[CellGroupData[{
Cell[13598, 395, 450, 12, 55, "Input",ExpressionUUID->"71d2e4ad-633b-404f-ae21-889517d7b223"],
Cell[14051, 409, 504, 14, 55, "Output",ExpressionUUID->"31595089-eb82-46c0-af3a-9523a632a719"]
}, {1, 2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14604, 429, 162, 3, 34, "Subsubsection",ExpressionUUID->"5e42e2ab-04cc-4f08-b09b-97812045a102"],
Cell[14769, 434, 950, 15, 120, "Text",ExpressionUUID->"0aa4b4de-ed07-4ed2-a5b1-de7dc445aac7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15756, 454, 185, 3, 34, "Subsubsection",ExpressionUUID->"ea77c63b-9f2b-48ce-9759-cd0d5daf55ba"],
Cell[15944, 459, 1146, 20, 307, "Text",ExpressionUUID->"0c32a5cf-4f3d-4750-bdb5-7db7ab896b09"],
Cell[CellGroupData[{
Cell[17115, 483, 1718, 33, 129, "Input",ExpressionUUID->"c0ac07d4-5213-40a7-bba0-4ed31da20ac6"],
Cell[18836, 518, 600, 12, 52, "Output",ExpressionUUID->"c3854169-3c93-4418-a81e-ae2bdd2ff78e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19473, 535, 731, 18, 55, "Input",ExpressionUUID->"5aec5152-ca13-4af5-b57d-6ba2e2fc7bd8"],
Cell[20207, 555, 875, 24, 52, "Output",ExpressionUUID->"f475c2e7-4bb7-4a3c-bdf8-618e8cf8a7f2"]
}, Open  ]],
Cell[21097, 582, 1019, 27, 71, "Text",ExpressionUUID->"d79a8963-c823-41b2-a997-96cf77dbd0bc"],
Cell[CellGroupData[{
Cell[22141, 613, 1109, 24, 55, "Input",ExpressionUUID->"ed535b2a-6ff3-4461-82fd-15ae9a107e29"],
Cell[23253, 639, 1612, 43, 78, "Output",ExpressionUUID->"68593056-e81d-4d39-8547-929bb1fcb8f7"]
}, Open  ]],
Cell[24880, 685, 2097, 52, 100, "Text",ExpressionUUID->"b54c5447-06bd-4b56-8481-52379074e654"],
Cell[26980, 739, 467, 9, 67, "Text",ExpressionUUID->"fb384ffc-ca8e-48e9-bcb5-f390ab439df7"],
Cell[CellGroupData[{
Cell[27472, 752, 212, 4, 52, "Input",ExpressionUUID->"e1af2492-e292-45e1-b188-175e1c467aa1"],
Cell[27687, 758, 182, 3, 52, "Output",ExpressionUUID->"d9c085ce-a7f5-4888-80c3-0bb7ea080e68"]
}, Open  ]],
Cell[27884, 764, 273, 6, 40, "Text",ExpressionUUID->"e051cf81-7cf2-4b17-9de0-251f68963110"],
Cell[CellGroupData[{
Cell[28182, 774, 441, 10, 52, "Input",ExpressionUUID->"6082b028-6d24-4f1c-bfff-9fd2cfabe09f"],
Cell[28626, 786, 402, 8, 52, "Output",ExpressionUUID->"3be1caa1-38ec-499e-982d-ec8461e9e76f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29065, 799, 2019, 41, 180, "Input",ExpressionUUID->"0a932f40-7ef7-4a41-be05-ff520dc2e07f"],
Cell[31087, 842, 480, 11, 52, "Output",ExpressionUUID->"6d6ba5c4-0892-4200-9adf-bef640fbeb84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31604, 858, 686, 16, 55, "Input",ExpressionUUID->"0840e916-c8a3-402c-88e2-dfba28f2c5e1"],
Cell[32293, 876, 693, 16, 52, "Output",ExpressionUUID->"3541b60d-dc20-436a-b127-27de093c0711"]
}, Open  ]],
Cell[33001, 895, 637, 16, 71, "Text",ExpressionUUID->"90a6ba19-9ec3-492c-b052-57a259073075"],
Cell[33641, 913, 893, 25, 196, "Input",ExpressionUUID->"4a0b2269-de14-4c76-8090-dd30a1d28f2b"],
Cell[CellGroupData[{
Cell[34559, 942, 1266, 29, 173, "Input",ExpressionUUID->"530bbf60-e9aa-4ba9-877d-637e14ad33c7"],
Cell[35828, 973, 373, 10, 69, "Output",ExpressionUUID->"01225278-f048-4ae9-9e82-93967c2c5390"]
}, Open  ]],
Cell[36216, 986, 498, 13, 90, "Text",ExpressionUUID->"7cc58e61-ee2f-4d58-bc92-6a1931730a8c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36763, 1005, 184, 3, 47, "Subsection",ExpressionUUID->"f7090dcc-90c2-4e7c-ad32-ec78b781a1fd"],
Cell[36950, 1010, 2568, 75, 345, "Text",ExpressionUUID->"e1ff835c-f658-40da-8768-cf957c9fc95a"],
Cell[CellGroupData[{
Cell[39543, 1089, 2532, 54, 163, "Input",ExpressionUUID->"804ea350-400b-4fe8-8d15-1cacca761378"],
Cell[42078, 1145, 545, 14, 75, "Output",ExpressionUUID->"a6da849f-6625-4ae8-ad5a-98052b2d34b1"],
Cell[42626, 1161, 582, 16, 75, "Output",ExpressionUUID->"cd14eea3-1bee-4f36-907d-0dafa87f21ef"]
}, Open  ]],
Cell[43223, 1180, 233, 4, 40, "Text",ExpressionUUID->"e2c8d7b0-a7b2-4cb6-b235-e8ebf43a5a6b"],
Cell[CellGroupData[{
Cell[43481, 1188, 1654, 40, 123, "Input",ExpressionUUID->"35d1342f-099d-4606-9cc2-9fc6883943cc"],
Cell[45138, 1230, 511, 14, 83, "Output",ExpressionUUID->"69ca439c-627e-48a5-b3d0-f2b332195fba"]
}, Open  ]],
Cell[45664, 1247, 157, 3, 40, "Text",ExpressionUUID->"17d27b0f-91aa-447b-80b2-d22c66b4db6b"],
Cell[45824, 1252, 615, 16, 55, "Text",ExpressionUUID->"3e3b0cbe-48e0-4889-999e-50af080b5050"],
Cell[46442, 1270, 336, 7, 67, "Text",ExpressionUUID->"f409e530-19e7-4e99-90ee-6bcc76ca960b"],
Cell[46781, 1279, 217, 5, 40, "Text",ExpressionUUID->"ff0d34d6-b860-4ebf-8186-7bca019fa319"],
Cell[CellGroupData[{
Cell[47023, 1288, 851, 17, 78, "Input",ExpressionUUID->"595453e7-47a0-4cd7-adc1-7ea3e87021b9"],
Cell[47877, 1307, 242, 5, 68, "Output",ExpressionUUID->"bc26f318-40e4-4dbd-b16e-9334451e1c8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48156, 1317, 1266, 35, 123, "Input",ExpressionUUID->"537bb650-25b7-406c-9b2f-0b9441434cd3"],
Cell[49425, 1354, 348, 10, 83, "Output",ExpressionUUID->"db19e5e5-8190-4fe3-8327-5291d941c27d"]
}, Open  ]],
Cell[49788, 1367, 160, 3, 40, "Text",ExpressionUUID->"4a921928-dd41-4b4e-a01f-716cd645763e"],
Cell[49951, 1372, 301, 11, 55, "Text",ExpressionUUID->"f791110c-ba36-431a-af3e-eb7546336a69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50313, 1390, 233, 6, 210, "Chapter",ExpressionUUID->"54b7d16a-22b0-4288-ad43-4005d15e613f"],
Cell[CellGroupData[{
Cell[50571, 1400, 273, 4, 77, "Section",ExpressionUUID->"bdf3e3cc-cbcb-450c-b2eb-a543b45aad94"],
Cell[50847, 1406, 268, 6, 40, "Text",ExpressionUUID->"9a499e5f-9f6e-46b6-a343-585f35fca838"],
Cell[CellGroupData[{
Cell[51140, 1416, 1465, 34, 128, "Input",ExpressionUUID->"60e65560-7ab0-4366-a721-4043252df7d2"],
Cell[52608, 1452, 7569, 242, 497, "Output",ExpressionUUID->"2b3b057d-9523-474f-bd8d-4df335da3b22"]
}, Open  ]],
Cell[60192, 1697, 462, 9, 68, "Text",ExpressionUUID->"a04f726c-4d84-4ab2-8f92-a2267b151dfc"],
Cell[CellGroupData[{
Cell[60679, 1710, 248, 4, 46, "Subsection",ExpressionUUID->"2a5cb3e3-5cdd-4fd6-8551-29eecce97341"],
Cell[60930, 1716, 449, 8, 68, "Text",ExpressionUUID->"7da26c6e-503a-494a-a479-257871e6a0dd"],
Cell[CellGroupData[{
Cell[61404, 1728, 619, 16, 57, "Input",ExpressionUUID->"e6b9dfbb-fff1-49c0-9632-bbb5d410f15a"],
Cell[62026, 1746, 486, 14, 57, "Output",ExpressionUUID->"6755af25-b6d4-4705-9134-c6b60bc80bba"]
}, Open  ]],
Cell[62527, 1763, 275, 6, 68, "Text",ExpressionUUID->"91819205-f372-4053-9bd4-9407586008ea"],
Cell[CellGroupData[{
Cell[62827, 1773, 531, 15, 57, "Input",ExpressionUUID->"61925b44-9da6-4e5f-b7a2-aeef0eb9fc92"],
Cell[63361, 1790, 267, 7, 52, "Output",ExpressionUUID->"66dda387-6dfd-4945-bcde-454f8b6f5cae"]
}, Open  ]],
Cell[63643, 1800, 175, 3, 41, "Text",ExpressionUUID->"7924e5bf-39a9-4cd6-b602-6f00519110d4"],
Cell[CellGroupData[{
Cell[63843, 1807, 530, 14, 52, "Input",ExpressionUUID->"19d20f27-3439-4720-89b9-3c733323955d"],
Cell[64376, 1823, 230, 5, 52, "Output",ExpressionUUID->"b8104492-0b8a-4e2e-ad40-f51189f52088"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64655, 1834, 212, 4, 46, "Subsection",ExpressionUUID->"e0b2ccbe-b68c-4c4f-8bc1-f16be4f6092d"],
Cell[CellGroupData[{
Cell[64892, 1842, 1296, 24, 78, "Input",ExpressionUUID->"e5b180e0-751d-42ff-845c-5fc2059267af"],
Cell[66191, 1868, 1657, 62, 114, "Output",ExpressionUUID->"5c19e9dd-b887-43aa-bd93-18a3e6df5ed3"]
}, Open  ]],
Cell[67863, 1933, 731, 13, 94, "Text",ExpressionUUID->"c48933e3-dfec-40d1-a407-c58f28737f57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68631, 1951, 418, 8, 69, "Subsection",ExpressionUUID->"c7449814-5bbd-457c-8225-1e1531e989e4"],
Cell[CellGroupData[{
Cell[69074, 1963, 558, 16, 52, "Input",ExpressionUUID->"d516bc97-fb4a-488b-876b-978dabc310d7"],
Cell[69635, 1981, 999, 28, 156, "Output",ExpressionUUID->"f81dabcf-9f46-48b6-9db4-f6893b773a36"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70683, 2015, 470, 7, 69, "Subsection",ExpressionUUID->"0240870f-9a8c-489c-a4f1-814ea3cc66a5"],
Cell[CellGroupData[{
Cell[71178, 2026, 247, 4, 33, "Subsubsection",ExpressionUUID->"717913de-2234-4c30-a86e-6e88169afb3f"],
Cell[71428, 2032, 663, 11, 68, "Text",ExpressionUUID->"e3485eb1-2138-47cc-a2db-5fb21b1971af"],
Cell[CellGroupData[{
Cell[72116, 2047, 632, 18, 52, "Input",ExpressionUUID->"20475727-3eef-4f19-a4a7-c31c70f39936"],
Cell[72751, 2067, 375, 10, 52, "Output",ExpressionUUID->"6e146113-c210-462b-a6e8-5f19194ca2da"]
}, Open  ]],
Cell[73141, 2080, 222, 5, 41, "Text",ExpressionUUID->"291ea93c-6fd2-447b-808c-b665b063dba7"],
Cell[CellGroupData[{
Cell[73388, 2089, 660, 19, 52, "Input",ExpressionUUID->"942e7a35-168a-4fb9-b4c4-11b661e1c4cc"],
Cell[74051, 2110, 204, 4, 52, "Output",ExpressionUUID->"0a6e2542-8797-441d-96f9-0d65fce3674a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74304, 2120, 231, 4, 33, "Subsubsection",ExpressionUUID->"4ace22f0-fddb-48d2-9c95-630c2c2e42b0"],
Cell[74538, 2126, 362, 7, 41, "Text",ExpressionUUID->"c1b88508-d22e-46cc-9b41-119f4e6f5c0b"],
Cell[CellGroupData[{
Cell[74925, 2137, 1894, 39, 104, "Input",ExpressionUUID->"7eb336aa-ae1d-46af-a734-5f93303b1223"],
Cell[76822, 2178, 2266, 81, 158, "Output",ExpressionUUID->"53750bd8-b6a6-4644-a5da-29be8153b734"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79125, 2264, 1390, 30, 154, "Input",ExpressionUUID->"d5d9fe96-056a-427e-a381-91535472b367"],
Cell[80518, 2296, 30940, 522, 98, "Output",ExpressionUUID->"a59cd30d-8188-4c4c-986e-82b892ec5954"],
Cell[111461, 2820, 4735, 88, 499, "Output",ExpressionUUID->"e235e4d2-50eb-402f-8253-38efb9cfad8f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116269, 2916, 222, 4, 77, "Section",ExpressionUUID->"8826289d-c34c-4fc2-ae04-7cc0ec76961d"],
Cell[116494, 2922, 273, 6, 40, "Text",ExpressionUUID->"6499e5c4-f035-4b76-8d4c-672d9c1b65f0"],
Cell[116770, 2930, 783, 17, 79, "Input",ExpressionUUID->"3a9fffa8-db79-44b8-9b7f-06a452123df1"],
Cell[117556, 2949, 1044, 20, 121, "Text",ExpressionUUID->"9c6a4915-3947-4671-8e40-194912825de8"],
Cell[CellGroupData[{
Cell[118625, 2973, 1318, 25, 78, "Input",ExpressionUUID->"88474828-d7ca-4747-853c-d3f45fb42743"],
Cell[119946, 3000, 627, 11, 78, "Output",ExpressionUUID->"3b6a2e31-04e4-47b6-90b4-f442b2793ca7"]
}, Open  ]],
Cell[120588, 3014, 36471, 604, 153, "Text",ExpressionUUID->"372d3148-0e1d-4f57-8b11-a2bab64bd603"],
Cell[157062, 3620, 466, 8, 70, "Text",ExpressionUUID->"b9f4a036-839b-4ca5-8fc1-2e2554749ce8"],
Cell[157531, 3630, 1674, 44, 167, "Input",ExpressionUUID->"7bfc7168-a590-4a07-9d6c-522fc59f0ffe"],
Cell[159208, 3676, 497, 9, 68, "Text",ExpressionUUID->"f9324c60-fda6-4f40-afd0-01630635234a"],
Cell[CellGroupData[{
Cell[159730, 3689, 522, 10, 52, "Input",ExpressionUUID->"879ef416-2b74-48e1-b67b-308436b487f5"],
Cell[160255, 3701, 9899, 257, 182, "Output",ExpressionUUID->"db174c86-dd33-4094-a74f-62c71599cbfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170191, 3963, 212, 3, 52, "Input",ExpressionUUID->"6762980e-92c6-49fd-8e6e-149643f638d7"],
Cell[170406, 3968, 228, 4, 52, "Output",ExpressionUUID->"4ff93fb0-e846-4dd2-8fd3-dfe16e622c3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170671, 3977, 1514, 26, 78, "Input",ExpressionUUID->"f15a1fa6-9880-43ff-92ee-5255a42d4e7b"],
Cell[172188, 4005, 9850, 256, 182, "Output",ExpressionUUID->"3fbb9b42-ea09-487a-983a-3dede72f7547"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182075, 4266, 1679, 40, 178, "Input",ExpressionUUID->"cdba6104-bc79-4b1e-898a-3fbb531f6d20"],
Cell[183757, 4308, 80237, 1346, 322, "Output",ExpressionUUID->"b6265652-2b7a-4f1b-b3dd-fd952e2f7a77"],
Cell[263997, 5656, 93878, 1571, 327, "Output",ExpressionUUID->"f1f8fb3c-3d5d-4af3-ac10-d805ac284a12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357936, 7234, 340, 7, 149, "Chapter",ExpressionUUID->"de410b13-d338-4fe4-9e21-c84869f5e236"],
Cell[358279, 7243, 190, 3, 41, "Text",ExpressionUUID->"2b69e2f7-7047-4009-8746-5e5e6dcdffd9"]
}, Open  ]]
}
]
*)

